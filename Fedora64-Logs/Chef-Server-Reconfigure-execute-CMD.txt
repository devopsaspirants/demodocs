[fedora26@localhost ~]$ who
fedora26 tty2         2018-04-23 19:11 (/dev/tty2)
[fedora26@localhost ~]$ su -
Password: 
[root@localhost ~]# sudo su -
[root@localhost ~]# pwd
/root
[root@localhost ~]# cd ..
[root@localhost /]# cd home/fedora26/Downloads/
[root@localhost Downloads]# ls -l
total 322620
-rw-rw-r--. 1 fedora26 fedora26  59003776 Apr 17 20:12 chef-14.0.202-1.el6.x86_64.rpm
-rw-rw-r--. 1 fedora26 fedora26 271347292 Apr 23 18:56 chef-server-core-12.17.33-1.el7.x86_64.rpm
[root@localhost Downloads]# pwd
/home/fedora26/Downloads
[root@localhost Downloads]# rpm -Uvh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm
warning: /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
Preparing...                          ################################# [100%]
Updating / installing...
   1:chef-server-core-12.17.33-1.el7  ^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^C^Z###################             ( 63%)
[1]+  Stopped                 rpm -Uvh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm
[root@localhost Downloads]# pwd
/home/fedora26/Downloads
[root@localhost Downloads]# cd ..
[root@localhost fedora26]# cd 
[root@localhost ~]# pwd
/root
[root@localhost ~]# rpm -Uvh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm
warning: /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
warning: waiting for transaction lock on /var/lib/rpm/.rpm.lock
^Cerror: can't create transaction lock on /var/lib/rpm/.rpm.lock (Interrupted system call)
[root@localhost ~]# ps -ef |grep chef
root       3802   3750 31 19:14 pts/0    00:00:24 rpm -Uvh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm
root       3809   3750  0 19:15 pts/0    00:00:00 grep --color=auto chef
[root@localhost ~]# kill -9 3802
[root@localhost ~]# ps -ef |grep chef
root       3811   3750  0 19:15 pts/0    00:00:00 grep --color=auto chef
[1]+  Killed                  rpm -Uvh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm  (wd: /home/fedora26/Downloads)
(wd now: ~)
[root@localhost ~]# ps -ef |grep chef
root       3813   3750  0 19:15 pts/0    00:00:00 grep --color=auto chef
[root@localhost ~]# rpm -Uvh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm
BDB2053 Freeing read locks for locker 0x9: 3802/139760945621824
BDB2053 Freeing read locks for locker 0xb: 3802/139760945621824
BDB2053 Freeing read locks for locker 0xc: 3802/139760945621824
BDB2053 Freeing read locks for locker 0xd: 3802/139760945621824
BDB2053 Freeing read locks for locker 0xe: 3802/139760945621824
BDB2053 Freeing read locks for locker 0xf: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x10: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x11: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x12: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x13: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x14: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x15: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x16: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x17: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x18: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x19: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x1a: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x1b: 3802/139760945621824
BDB2053 Freeing read locks for locker 0x1c: 3802/139760945621824
warning: /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
Preparing...                          ################################# [100%]
Updating / installing...
   1:chef-server-core-12.17.33-1.el7  ################################# [100%]
[root@localhost ~]# rpm -ivh /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm
warning: /home/fedora26/Downloads/chef-server-core-12.17.33-1.el7.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
Preparing...                          ################################# [100%]
	package chef-server-core-12.17.33-1.el7.x86_64 is already installed
[root@localhost ~]# chef-server-ctl reconfigure
Starting Chef Client, version 12.21.31
resolving cookbooks for run list: ["private-chef::default"]
Synchronizing Cookbooks:
  - private-chef (0.1.1)
  - enterprise (0.11.0)
  - openssl (8.1.2)
  - runit (4.0.4)
  - yum-epel (2.1.2)
  - packagecloud (0.3.0)
  - compat_resource (12.19.1)
Installing Cookbook Gems:
Compiling Cookbooks...
/var/opt/opscode/local-mode-cache/cookbooks/packagecloud/resources/repo.rb:10: warning: constant ::Fixnum is deprecated
Recipe: private-chef::default
  * directory[/etc/opscode] action create (up to date)
  * directory[/etc/opscode/logrotate.d] action create
    - create new directory /etc/opscode/logrotate.d
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  Converging 297 resources
  * link[/usr/bin/private-chef-ctl] action create (up to date)
  * link[/usr/bin/chef-server-ctl] action create (up to date)
  * directory[/etc/opscode] action nothing (skipped due to action :nothing)
  * directory[/etc/opscode/logrotate.d] action nothing (skipped due to action :nothing)
  * log[opscode_webui deprecation notice] action write (skipped due to only_if)
Recipe: private-chef::users
  * linux_user[opscode] action create
    - create user opscode
  * group[opscode] action create
    - alter group opscode
    - replace group members with new list of members
Recipe: private-chef::private_keys
  * file[/etc/opscode/pivotal.pem] action create
    - create new file /etc/opscode/pivotal.pem
    - update content in file /etc/opscode/pivotal.pem from none to 95734d
    - suppressed sensitive resource
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
    - restore selinux security context
  * file[/etc/opscode/webui_priv.pem] action create
    - create new file /etc/opscode/webui_priv.pem
    - update content in file /etc/opscode/webui_priv.pem from none to 725b3a
    - suppressed sensitive resource
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
    - restore selinux security context
  * file[/etc/opscode/webui_pub.pem] action create
    - create new file /etc/opscode/webui_pub.pem
    - update content in file /etc/opscode/webui_pub.pem from none to 3defe5
    - suppressed sensitive resource
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::default
  * file[/etc/opscode/dark_launch_features.json] action create
    - create new file /etc/opscode/dark_launch_features.json
    - update content in file /etc/opscode/dark_launch_features.json from none to 05b75f
    --- /etc/opscode/dark_launch_features.json	2018-04-23 19:19:57.501443043 +0530
    +++ /etc/opscode/.chef-dark_launch_features20180423-3855-z92vxi.json	2018-04-23 19:19:57.500442984 +0530
    @@ -1 +1,17 @@
    +{
    +  "quick_start": false,
    +  "new_theme": true,
    +  "private-chef": true,
    +  "sql_users": true,
    +  "add_type_and_bag_to_items": true,
    +  "reporting": true,
    +  "actions": true,
    +  "503_mode": false,
    +  "couchdb_containers": false,
    +  "couchdb_groups": false,
    +  "couchdb_acls": false,
    +  "couchdb_association_requests": false,
    +  "couchdb_organizations": false,
    +  "couchdb_associations": false
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
    - restore selinux security context
  * directory[/etc/chef] action create
    - change mode from '0755' to '0775'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode] action create (up to date)
  * directory[/var/log/opscode] action create
    - create new directory /var/log/opscode
    - change mode from '' to '0755'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * private_chef_keepalived_safemode[warmfuzzy] action create (skipped due to only_if)
Recipe: enterprise::runit
  * component_runit_supervisor[private_chef] action create
    * template[/etc/systemd/system/private_chef-runsvdir-start.service] action create
      - create new file /etc/systemd/system/private_chef-runsvdir-start.service
      - update content in file /etc/systemd/system/private_chef-runsvdir-start.service from none to 27231f
      --- /etc/systemd/system/private_chef-runsvdir-start.service	2018-04-23 19:19:57.650451853 +0530
      +++ /etc/systemd/system/.chef-private_chef-runsvdir-start20180423-3855-nprttc.service	2018-04-23 19:19:57.649451794 +0530
      @@ -1 +1,11 @@
      +[Unit]
      +Description=private_chef Runit Process Supervisor
      +After=network.target auditd.service
      +
      +[Service]
      +ExecStart=/opt/opscode/embedded/bin/runsvdir-start
      +Restart=always
      +
      +[Install]
      +WantedBy=multi-user.target
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * execute[cleanup_old_unit_files] action run (skipped due to only_if)
    * service[private_chef-runsvdir-start.service] action enable
      - enable service service[private_chef-runsvdir-start.service]
    * service[private_chef-runsvdir-start.service] action start
      - start service service[private_chef-runsvdir-start.service]
  
Recipe: private-chef::sysctl-updates
  * execute[sysctl-reload] action nothing (skipped due to action :nothing)
  * bash[dual ip4/ip6 portbind] action run (skipped due to only_if)
Recipe: private-chef::plugin_chef_run
  * chef_run[recipe[chef-ha-drbd::disable]] action runInstalling Cookbook Gems:
Compiling Cookbooks...
Converging 0 resources

    - Running chef-run with run list recipe[chef-ha-drbd::disable]
Recipe: private-chef::fix_permissions
  * execute[find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=x,g=x,o=x -exec chmod 755 {} \;] action run
    - execute find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=x,g=x,o=x -exec chmod 755 {} \;
  * execute[find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=r,g=r,o=r ! -perm /u=x -exec chmod 644 {} \;] action run
    - execute find /opt/opscode/embedded/lib/ruby/gems/*/gems -perm /u=r,g=r,o=r ! -perm /u=x -exec chmod 644 {} \;
Recipe: private-chef::postgresql
  * linux_user[opscode-pgsql] action create
    - create user opscode-pgsql
  * directory[/var/opt/opscode/postgresql] action create
    - create new directory /var/opt/opscode/postgresql
    - change mode from '' to '0750'
    - change owner from '' to 'opscode-pgsql'
    - restore selinux security context
  * file[/var/opt/opscode/postgresql/.profile] action create
    - create new file /var/opt/opscode/postgresql/.profile
    - update content in file /var/opt/opscode/postgresql/.profile from none to 856113
    --- /var/opt/opscode/postgresql/.profile	2018-04-23 19:20:11.258256505 +0530
    +++ /var/opt/opscode/postgresql/.chef-.profile20180423-3855-1f4wox0.profile	2018-04-23 19:20:11.258256505 +0530
    @@ -1 +1,2 @@
    +    PATH=/opt/opscode/embedded/bin:/opt/opscode/bin:$PATH
    - change mode from '' to '0644'
    - change owner from '' to 'opscode-pgsql'
    - restore selinux security context
  * directory[/var/log/opscode/postgresql/9.6] action create
    - create new directory /var/log/opscode/postgresql/9.6
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/postgresql/9.6] action create
    - create new directory /var/opt/opscode/postgresql/9.6
    - change mode from '' to '0750'
    - change owner from '' to 'opscode-pgsql'
    - restore selinux security context
  * private_chef_pg_upgrade[upgrade_if_necessary] action upgrade (up to date)
  * private_chef_pg_cluster[/var/opt/opscode/postgresql/9.6/data] action init
    * directory[/var/opt/opscode/postgresql/9.6/data] action create
      - create new directory /var/opt/opscode/postgresql/9.6/data
      - change mode from '' to '0700'
      - change owner from '' to 'opscode-pgsql'
      - restore selinux security context
    * execute[initialize_cluster_/var/opt/opscode/postgresql/9.6/data] action run
      - execute initdb --pgdata /var/opt/opscode/postgresql/9.6/data --locale C
    * template[/var/opt/opscode/postgresql/9.6/data/postgresql.conf] action create
      - update content in file /var/opt/opscode/postgresql/9.6/data/postgresql.conf from f10d0c to c94100
      --- /var/opt/opscode/postgresql/9.6/data/postgresql.conf	2018-04-23 19:20:11.672280987 +0530
      +++ /var/opt/opscode/postgresql/9.6/data/.chef-postgresql20180423-3855-19btz6x.conf	2018-04-23 19:20:13.542391570 +0530
      @@ -27,7 +27,7 @@
       # Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
       #                MB = megabytes                     s   = seconds
       #                GB = gigabytes                     min = minutes
      -#                TB = terabytes                     h   = hours
      +#                                                   h   = hours
       #                                                   d   = days
       
       
      @@ -46,7 +46,7 @@
       					# (change requires restart)
       
       # If external_pid_file is not explicitly set, no extra PID file is written.
      -#external_pid_file = ''			# write an extra PID file
      +#external_pid_file = '(none)'		# write an extra PID file
       					# (change requires restart)
       
       
      @@ -56,15 +56,16 @@
       
       # - Connection Settings -
       
      -#listen_addresses = 'localhost'		# what IP address(es) to listen on;
      +listen_addresses = 'localhost'		# what IP address(es) to listen on;
       					# comma-separated list of addresses;
      -					# defaults to 'localhost'; use '*' for all
      +					# defaults to 'localhost', '*' = all
       					# (change requires restart)
      -#port = 5432				# (change requires restart)
      -max_connections = 100			# (change requires restart)
      +port = 5432				# (change requires restart)
      +max_connections = 350			# (change requires restart)
      +# Note:  Increasing max_connections costs ~400 bytes of shared memory per
      +# connection slot, plus lock space (see max_locks_per_transaction).
       #superuser_reserved_connections = 3	# (change requires restart)
      -#unix_socket_directories = '/tmp'	# comma-separated list of directories
      -					# (change requires restart)
      +#unix_socket_directory = ''		# (change requires restart)
       #unix_socket_group = ''			# (change requires restart)
       #unix_socket_permissions = 0777		# begin with 0 to use octal notation
       					# (change requires restart)
      @@ -77,67 +78,49 @@
       
       #authentication_timeout = 1min		# 1s-600s
       #ssl = off				# (change requires restart)
      -#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
      +#ssl_ciphers = 'ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH'	# allowed SSL ciphers
       					# (change requires restart)
      -#ssl_prefer_server_ciphers = on		# (change requires restart)
      -#ssl_ecdh_curve = 'prime256v1'		# (change requires restart)
      -#ssl_cert_file = 'server.crt'		# (change requires restart)
      -#ssl_key_file = 'server.key'		# (change requires restart)
      -#ssl_ca_file = ''			# (change requires restart)
      -#ssl_crl_file = ''			# (change requires restart)
      +#ssl_renegotiation_limit = 512MB	# amount of data between renegotiations
       #password_encryption = on
       #db_user_namespace = off
      -#row_security = on
       
      -# GSSAPI using Kerberos
      +# Kerberos and GSSAPI
       #krb_server_keyfile = ''
      +#krb_srvname = 'postgres'		# (Kerberos only)
       #krb_caseins_users = off
       
       # - TCP Keepalives -
       # see "man 7 tcp" for details
       
      -#tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;
      -					# 0 selects the system default
      -#tcp_keepalives_interval = 0		# TCP_KEEPINTVL, in seconds;
      -					# 0 selects the system default
      -#tcp_keepalives_count = 0		# TCP_KEEPCNT;
      -					# 0 selects the system default
      +# TCP_KEEPIDLE, in seconds; 0 selects the system default
      +tcp_keepalives_idle = 60
       
      +# TCP_KEEPINTERVAL, in seconds; 0 selects the system default
      +tcp_keepalives_interval = 15
       
      +# TCP_KEEPCNT, in seconds; 0 selects the system default
      +tcp_keepalives_count = 2
      +
      +
       #------------------------------------------------------------------------------
       # RESOURCE USAGE (except WAL)
       #------------------------------------------------------------------------------
       
       # - Memory -
       
      -shared_buffers = 128MB			# min 128kB
      +shared_buffers = 747MB # min 128kB
       					# (change requires restart)
      -#huge_pages = try			# on, off, or try
      -					# (change requires restart)
       #temp_buffers = 8MB			# min 800kB
       #max_prepared_transactions = 0		# zero disables the feature
       					# (change requires restart)
      -# Caution: it is not advisable to set max_prepared_transactions nonzero unless
      -# you actively intend to use prepared transactions.
      -#work_mem = 4MB				# min 64kB
      -#maintenance_work_mem = 64MB		# min 1MB
      -#replacement_sort_tuples = 150000	# limits use of replacement selection sort
      -#autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem
      +# Note:  Increasing max_prepared_transactions costs ~600 bytes of shared memory
      +# per transaction slot, plus lock space (see max_locks_per_transaction).
      +# It is not advisable to set max_prepared_transactions nonzero unless you
      +# actively intend to use prepared transactions.
      +work_mem = 8MB				# min 64kB
      +#maintenance_work_mem = 16MB		# min 1MB
       #max_stack_depth = 2MB			# min 100kB
      -dynamic_shared_memory_type = posix	# the default is the first option
      -					# supported by the operating system:
      -					#   posix
      -					#   sysv
      -					#   windows
      -					#   mmap
      -					# use none to disable dynamic shared memory
      -					# (change requires restart)
       
      -# - Disk -
      -
      -#temp_file_limit = -1			# limits per-process temp file space
      -					# in kB, or -1 for no limit
      -
       # - Kernel Resource Usage -
       
       #max_files_per_process = 1000		# min 25
      @@ -146,7 +129,7 @@
       
       # - Cost-Based Vacuum Delay -
       
      -#vacuum_cost_delay = 0			# 0-100 milliseconds
      +#vacuum_cost_delay = 0ms		# 0-100 milliseconds
       #vacuum_cost_page_hit = 1		# 0-10000 credits
       #vacuum_cost_page_miss = 10		# 0-10000 credits
       #vacuum_cost_page_dirty = 20		# 0-10000 credits
      @@ -156,17 +139,11 @@
       
       #bgwriter_delay = 200ms			# 10-10000ms between rounds
       #bgwriter_lru_maxpages = 100		# 0-1000 max buffers written/round
      -#bgwriter_lru_multiplier = 2.0		# 0-10.0 multiplier on buffers scanned/round
      -#bgwriter_flush_after = 512kB		# measured in pages, 0 disables
      +#bgwriter_lru_multiplier = 2.0		# 0-10.0 multipler on buffers scanned/round
       
       # - Asynchronous Behavior -
       
      -#effective_io_concurrency = 1		# 1-1000; 0 disables prefetching
      -#max_worker_processes = 8		# (change requires restart)
      -#max_parallel_workers_per_gather = 0	# taken from max_worker_processes
      -#old_snapshot_threshold = -1		# 1min-60d; -1 disables; 0 is immediate
      -					# (change requires restart)
      -#backend_flush_after = 0		# measured in pages, 0 disables
      +#effective_io_concurrency = 1		# 1-1000. 0 disables prefetching
       
       
       #------------------------------------------------------------------------------
      @@ -175,13 +152,11 @@
       
       # - Settings -
       
      -#wal_level = minimal			# minimal, replica, or logical
      +wal_level = minimal			# minimal, logical, or replica
       					# (change requires restart)
      -#fsync = on				# flush data to disk for crash safety
      -						# (turning this off can cause
      -						# unrecoverable data corruption)
      -#synchronous_commit = on		# synchronization level;
      -					# off, local, remote_write, remote_apply, or on
      +					# old names "archive" and "hot_standby" are accepted, too, but mapped to "replica"
      +#fsync = on				# turns forced synchronization on or off
      +#synchronous_commit = on		# synchronization level; on, off, or local
       #wal_sync_method = fsync		# the default is the first option
       					# supported by the operating system:
       					#   open_datasync
      @@ -190,35 +165,29 @@
       					#   fsync_writethrough
       					#   open_sync
       #full_page_writes = on			# recover from partial page writes
      -#wal_compression = off			# enable compression of full-page writes
      -#wal_log_hints = off			# also do full page writes of non-critical updates
      -					# (change requires restart)
       #wal_buffers = -1			# min 32kB, -1 sets based on shared_buffers
       					# (change requires restart)
       #wal_writer_delay = 200ms		# 1-10000 milliseconds
      -#wal_writer_flush_after = 1MB		# measured in pages, 0 disables
       
       #commit_delay = 0			# range 0-100000, in microseconds
       #commit_siblings = 5			# range 1-1000
       
       # - Checkpoints -
       
      -#checkpoint_timeout = 5min		# range 30s-1d
      -#max_wal_size = 1GB
      -#min_wal_size = 80MB
      -#checkpoint_completion_target = 0.5	# checkpoint target duration, 0.0 - 1.0
      -#checkpoint_flush_after = 256kB		# measured in pages, 0 disables
      -#checkpoint_warning = 30s		# 0 disables
      +checkpoint_timeout = 5min		# range 30s-1h, default 5min
      +checkpoint_completion_target = 0.5	# checkpoint target duration, 0.0 - 1.0, default 0.5
      +checkpoint_flush_after = 256kB
      +checkpoint_warning = 30s		# 0 disables, default 30s
      +max_wal_size = 1GB		# integer, defaults to 1GB
      +min_wal_size = 80MB		# integer, defaults to 80MB
       
       # - Archiving -
       
      -#archive_mode = off		# enables archiving; off, on, or always
      +
      +archive_mode = off		# allows archiving to be done
       				# (change requires restart)
      -#archive_command = ''		# command to use to archive a logfile segment
      -				# placeholders: %p = path of file to archive
      -				#               %f = file name only
      -				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
      -#archive_timeout = 0		# force a logfile segment switch after this
      +archive_command = ''   # command to use to archive a logfile segment
      +archive_timeout = 0		# force a logfile segment switch after this
       				# number of seconds; 0 disables
       
       
      @@ -226,32 +195,23 @@
       # REPLICATION
       #------------------------------------------------------------------------------
       
      -# - Sending Server(s) -
      +# - Master Server -
       
      -# Set these on the master and on any standby that will send replication data.
      +# These settings are ignored on a standby server
       
       #max_wal_senders = 0		# max number of walsender processes
       				# (change requires restart)
      +#wal_sender_delay = 1s		# walsender cycle time, 1-10000 milliseconds
       #wal_keep_segments = 0		# in logfile segments, 16MB each; 0 disables
      -#wal_sender_timeout = 60s	# in milliseconds; 0 disables
      -
      -#max_replication_slots = 0	# max number of replication slots
      -				# (change requires restart)
      -#track_commit_timestamp = off	# collect timestamp of transaction commit
      -				# (change requires restart)
      -
      -# - Master Server -
      -
      -# These settings are ignored on a standby server.
      -
      +#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed
      +#replication_timeout = 60s	# in milliseconds; 0 disables
       #synchronous_standby_names = ''	# standby servers that provide sync rep
      -				# number of sync standbys and comma-separated list of application_name
      +				# comma-separated list of application_name
       				# from standby(s); '*' = all
      -#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed
       
       # - Standby Servers -
       
      -# These settings are ignored on a master server.
      +# These settings are ignored on a master server
       
       #hot_standby = off			# "on" allows queries during recovery
       					# (change requires restart)
      @@ -265,11 +225,6 @@
       					# 0 disables
       #hot_standby_feedback = off		# send info from standby to prevent
       					# query conflicts
      -#wal_receiver_timeout = 60s		# time that receiver waits for
      -					# communication from master
      -					# in milliseconds; 0 disables
      -#wal_retrieve_retry_interval = 5s	# time to wait before retrying to
      -					# retrieve WAL after a failed attempt
       
       
       #------------------------------------------------------------------------------
      @@ -282,7 +237,6 @@
       #enable_hashagg = on
       #enable_hashjoin = on
       #enable_indexscan = on
      -#enable_indexonlyscan = on
       #enable_material = on
       #enable_mergejoin = on
       #enable_nestloop = on
      @@ -297,10 +251,7 @@
       #cpu_tuple_cost = 0.01			# same scale as above
       #cpu_index_tuple_cost = 0.005		# same scale as above
       #cpu_operator_cost = 0.0025		# same scale as above
      -#parallel_tuple_cost = 0.1		# same scale as above
      -#parallel_setup_cost = 1000.0	# same scale as above
      -#min_parallel_relation_size = 8MB
      -#effective_cache_size = 4GB
      +effective_cache_size = 1494MB # Default 128MB
       
       # - Genetic Query Optimizer -
       
      @@ -320,7 +271,6 @@
       #from_collapse_limit = 8
       #join_collapse_limit = 8		# 1 disables collapsing of explicit
       					# JOIN clauses
      -#force_parallel_mode = off
       
       
       #------------------------------------------------------------------------------
      @@ -364,13 +314,13 @@
       # These are relevant when logging to syslog:
       #syslog_facility = 'LOCAL0'
       #syslog_ident = 'postgres'
      -#syslog_sequence_numbers = on
      -#syslog_split_messages = on
       
      -# This is only relevant when logging to eventlog (win32):
      -# (change requires restart)
      -#event_source = 'PostgreSQL'
      +#silent_mode = off			# Run server silently.
      +					# DO NOT USE without syslog or
      +					# logging_collector
      +					# (change requires restart)
       
      +
       # - When to Log -
       
       #client_min_messages = notice		# values in order of decreasing detail:
      @@ -399,12 +349,12 @@
       					#   panic
       
       #log_min_error_statement = error	# values in order of decreasing detail:
      -					#   debug5
      +				 	#   debug5
       					#   debug4
       					#   debug3
       					#   debug2
       					#   debug1
      -					#   info
      +				 	#   info
       					#   notice
       					#   warning
       					#   error
      @@ -416,8 +366,8 @@
       					# and their durations, > 0 logs only
       					# statements running at least this number
       					# of milliseconds
      +log_min_duration_statement = -1
       
      -
       # - What to Log -
       
       #debug_print_parse = off
      @@ -439,7 +389,6 @@
       					#   %p = process ID
       					#   %t = timestamp without milliseconds
       					#   %m = timestamp with milliseconds
      -					#   %n = timestamp with milliseconds (as a Unix epoch)
       					#   %i = command tag
       					#   %e = SQL state
       					#   %c = session ID
      @@ -453,20 +402,12 @@
       					# e.g. '<%u%%%d> '
       #log_lock_waits = off			# log lock waits >= deadlock_timeout
       #log_statement = 'none'			# none, ddl, mod, all
      -#log_replication_commands = off
       #log_temp_files = -1			# log temporary files equal or larger
       					# than the specified size in kilobytes;
       					# -1 disables, 0 logs all temp files
      -log_timezone = 'Asia/Kolkata'
      +#log_timezone = '(defaults to server environment setting)'
       
       
      -# - Process Title -
      -
      -#cluster_name = ''			# added to process titles if nonempty
      -					# (change requires restart)
      -#update_process_title = on
      -
      -
       #------------------------------------------------------------------------------
       # RUNTIME STATISTICS
       #------------------------------------------------------------------------------
      @@ -475,9 +416,9 @@
       
       #track_activities = on
       #track_counts = on
      -#track_io_timing = off
       #track_functions = none			# none, pl, all
      -#track_activity_query_size = 1024	# (change requires restart)
      +#track_activity_query_size = 1024 	# (change requires restart)
      +#update_process_title = on
       #stats_temp_directory = 'pg_stat_tmp'
       
       
      @@ -510,9 +451,6 @@
       #autovacuum_analyze_scale_factor = 0.1	# fraction of table size before analyze
       #autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum
       					# (change requires restart)
      -#autovacuum_multixact_freeze_max_age = 400000000	# maximum multixact age
      -					# before forced vacuum
      -					# (change requires restart)
       #autovacuum_vacuum_cost_delay = 20ms	# default vacuum cost delay for
       					# autovacuum, in milliseconds;
       					# -1 means use vacuum_cost_delay
      @@ -527,7 +465,7 @@
       
       # - Statement Behavior -
       
      -#search_path = '"$user", public'	# schema names
      +#search_path = '"$user",public'		# schema names
       #default_tablespace = ''		# a tablespace name, '' uses the default
       #temp_tablespaces = ''			# a list of tablespace names, '' uses
       					# only default tablespace
      @@ -537,27 +475,21 @@
       #default_transaction_deferrable = off
       #session_replication_role = 'origin'
       #statement_timeout = 0			# in milliseconds, 0 is disabled
      -#lock_timeout = 0			# in milliseconds, 0 is disabled
      -#idle_in_transaction_session_timeout = 0		# in milliseconds, 0 is disabled
       #vacuum_freeze_min_age = 50000000
       #vacuum_freeze_table_age = 150000000
      -#vacuum_multixact_freeze_min_age = 5000000
      -#vacuum_multixact_freeze_table_age = 150000000
       #bytea_output = 'hex'			# hex, escape
       #xmlbinary = 'base64'
       #xmloption = 'content'
      -#gin_fuzzy_search_limit = 0
      -#gin_pending_list_limit = 4MB
       
       # - Locale and Formatting -
       
       datestyle = 'iso, mdy'
       #intervalstyle = 'postgres'
      -timezone = 'Asia/Kolkata'
      +#timezone = '(defaults to server environment setting)'
       #timezone_abbreviations = 'Default'     # Select the set of available time zone
       					# abbreviations.  Currently, there are
       					#   Default
      -					#   Australia (historical usage)
      +					#   Australia
       					#   India
       					# You can create your own file in
       					# share/timezonesets/.
      @@ -579,7 +511,6 @@
       
       #dynamic_library_path = '$libdir'
       #local_preload_libraries = ''
      -#session_preload_libraries = ''
       
       
       #------------------------------------------------------------------------------
      @@ -589,10 +520,12 @@
       #deadlock_timeout = 1s
       #max_locks_per_transaction = 64		# min 10
       					# (change requires restart)
      +# Note:  Each lock table slot uses ~270 bytes of shared memory, and there are
      +# max_locks_per_transaction * (max_connections + max_prepared_transactions)
      +# lock table slots.
       #max_pred_locks_per_transaction = 64	# min 10
       					# (change requires restart)
       
      -
       #------------------------------------------------------------------------------
       # VERSION/PLATFORM COMPATIBILITY
       #------------------------------------------------------------------------------
      @@ -604,7 +537,6 @@
       #default_with_oids = off
       #escape_string_warning = on
       #lo_compat_privileges = off
      -#operator_precedence_warning = off
       #quote_all_identifiers = off
       #sql_inheritance = on
       #standard_conforming_strings = on
      @@ -619,26 +551,13 @@
       # ERROR HANDLING
       #------------------------------------------------------------------------------
       
      -#exit_on_error = off			# terminate session on any error?
      -#restart_after_crash = on		# reinitialize after backend crash?
      +#exit_on_error = off				# terminate session on any error?
      +#restart_after_crash = on			# reinitialize after backend crash?
       
       
       #------------------------------------------------------------------------------
      -# CONFIG FILE INCLUDES
      -#------------------------------------------------------------------------------
      -
      -# These options allow settings to be loaded from files other than the
      -# default postgresql.conf.
      -
      -#include_dir = 'conf.d'			# include files ending in '.conf' from
      -					# directory 'conf.d'
      -#include_if_exists = 'exists.conf'	# include file only if it exists
      -#include = 'special.conf'		# include file
      -
      -
      -#------------------------------------------------------------------------------
       # CUSTOMIZED OPTIONS
       #------------------------------------------------------------------------------
       
      -# Add settings for extensions here
      +#custom_variable_classes = ''		# list of custom variable class names
      - change mode from '0600' to '0644'
      - restore selinux security context
    * template[/var/opt/opscode/postgresql/9.6/data/pg_hba.conf] action create
      - update content in file /var/opt/opscode/postgresql/9.6/data/pg_hba.conf from c24527 to 3f3075
      --- /var/opt/opscode/postgresql/9.6/data/pg_hba.conf	2018-04-23 19:20:11.673281046 +0530
      +++ /var/opt/opscode/postgresql/9.6/data/.chef-pg_hba20180423-3855-eswrbf.conf	2018-04-23 19:20:13.632396892 +0530
      @@ -1,94 +1,71 @@
       # PostgreSQL Client Authentication Configuration File
       # ===================================================
       #
      -# Refer to the "Client Authentication" section in the PostgreSQL
      -# documentation for a complete description of this file.  A short
      -# synopsis follows.
      +# Refer to the "Client Authentication" section in the
      +# PostgreSQL documentation for a complete description
      +# of this file.  A short synopsis follows.
       #
       # This file controls: which hosts are allowed to connect, how clients
       # are authenticated, which PostgreSQL user names they can use, which
       # databases they can access.  Records take one of these forms:
       #
      -# local      DATABASE  USER  METHOD  [OPTIONS]
      -# host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      -# hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
      +# local      DATABASE  USER  METHOD  [OPTION]
      +# host       DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostssl    DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
      +# hostnossl  DATABASE  USER  CIDR-ADDRESS  METHOD  [OPTION]
       #
       # (The uppercase items must be replaced by actual values.)
       #
      -# The first field is the connection type: "local" is a Unix-domain
      -# socket, "host" is either a plain or SSL-encrypted TCP/IP socket,
      -# "hostssl" is an SSL-encrypted TCP/IP socket, and "hostnossl" is a
      -# plain TCP/IP socket.
      +# The first field is the connection type: "local" is a Unix-domain socket,
      +# "host" is either a plain or SSL-encrypted TCP/IP socket, "hostssl" is an
      +# SSL-encrypted TCP/IP socket, and "hostnossl" is a plain TCP/IP socket.
       #
      -# DATABASE can be "all", "sameuser", "samerole", "replication", a
      -# database name, or a comma-separated list thereof. The "all"
      -# keyword does not match "replication". Access to replication
      -# must be enabled in a separate record (see example below).
      +# DATABASE can be "all", "sameuser", "samerole", a database name, or
      +# a comma-separated list thereof.
       #
      -# USER can be "all", a user name, a group name prefixed with "+", or a
      -# comma-separated list thereof.  In both the DATABASE and USER fields
      -# you can also write a file name prefixed with "@" to include names
      -# from a separate file.
      +# USER can be "all", a user name, a group name prefixed with "+", or
      +# a comma-separated list thereof.  In both the DATABASE and USER fields
      +# you can also write a file name prefixed with "@" to include names from
      +# a separate file.
       #
      -# ADDRESS specifies the set of hosts the record matches.  It can be a
      -# host name, or it is made up of an IP address and a CIDR mask that is
      -# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that
      -# specifies the number of significant bits in the mask.  A host name
      -# that starts with a dot (.) matches a suffix of the actual host name.
      -# Alternatively, you can write an IP address and netmask in separate
      -# columns to specify the set of hosts.  Instead of a CIDR-address, you
      -# can write "samehost" to match any of the server's own IP addresses,
      -# or "samenet" to match any address in any subnet that the server is
      -# directly connected to.
      +# CIDR-ADDRESS specifies the set of hosts the record matches.
      +# It is made up of an IP address and a CIDR mask that is an integer
      +# (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that specifies
      +# the number of significant bits in the mask.  Alternatively, you can write
      +# an IP address and netmask in separate columns to specify the set of hosts.
       #
      -# METHOD can be "trust", "reject", "md5", "password", "gss", "sspi",
      -# "ident", "peer", "pam", "ldap", "radius" or "cert".  Note that
      -# "password" sends passwords in clear text; "md5" is preferred since
      -# it sends encrypted passwords.
      +# METHOD can be "trust", "reject", "md5", "crypt", "password", "gss", "sspi",
      +# "krb5", "ident", "pam" or "ldap".  Note that "password" sends passwords
      +# in clear text; "md5" is preferred since it sends encrypted passwords.
       #
      -# OPTIONS are a set of options for the authentication in the format
      -# NAME=VALUE.  The available options depend on the different
      -# authentication methods -- refer to the "Client Authentication"
      -# section in the documentation for a list of which options are
      -# available for which authentication methods.
      +# OPTION is the ident map or the name of the PAM service, depending on METHOD.
       #
      -# Database and user names containing spaces, commas, quotes and other
      -# special characters must be quoted.  Quoting one of the keywords
      -# "all", "sameuser", "samerole" or "replication" makes the name lose
      -# its special character, and just match a database or username with
      -# that name.
      +# Database and user names containing spaces, commas, quotes and other special
      +# characters must be quoted. Quoting one of the keywords "all", "sameuser" or
      +# "samerole" makes the name lose its special character, and just match a
      +# database or username with that name.
       #
       # This file is read on server startup and when the postmaster receives
       # a SIGHUP signal.  If you edit the file on a running system, you have
      -# to SIGHUP the postmaster for the changes to take effect.  You can
      -# use "pg_ctl reload" to do that.
      +# to SIGHUP the postmaster for the changes to take effect.  You can use
      +# "pg_ctl reload" to do that.
       
       # Put your actual configuration here
       # ----------------------------------
       #
       # If you want to allow non-local connections, you need to add more
      -# "host" records.  In that case you will also need to make PostgreSQL
      -# listen on a non-local interface via the listen_addresses
      -# configuration parameter, or via the -i or -h command line switches.
      +# "host" records. In that case you will also need to make PostgreSQL listen
      +# on a non-local interface via the listen_addresses configuration parameter,
      +# or via the -i or -h command line switches.
      +#
       
      -# CAUTION: Configuring the system for local "trust" authentication
      -# allows any local user to connect as any PostgreSQL user, including
      -# the database superuser.  If you do not trust all your local users,
      -# use another authentication method.
       
      +# TYPE  DATABASE    USER        CIDR-ADDRESS          ME
      +# "local" is for Unix domain socket connections only
      +local   all         opscode-pgsql                               peer
       
      -# TYPE  DATABASE        USER            ADDRESS                 METHOD
      +host    all         opscode-pgsql         samehost           md5
       
      -# "local" is for Unix domain socket connections only
      -local   all             all                                     trust
      -# IPv4 local connections:
      -host    all             all             127.0.0.1/32            trust
      -# IPv6 local connections:
      -host    all             all             ::1/128                 trust
      -# Allow replication connections from localhost, by a user with the
      -# replication privilege.
      -#local   replication     opscode-pgsql                                trust
      -#host    replication     opscode-pgsql        127.0.0.1/32            trust
      -#host    replication     opscode-pgsql        ::1/128                 trust
      +host    all         all         127.0.0.1/32           md5
      +host    all         all         ::1/128           md5
      - change mode from '0600' to '0644'
      - restore selinux security context
  
  * link[/var/opt/opscode/postgresql/9.6/data] action create (skipped due to not_if)
  * execute[restart_postgresql_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/postgresql/9.6/config] action create
    - create new file /var/log/opscode/postgresql/9.6/config
    - update content in file /var/log/opscode/postgresql/9.6/config from none to 5e16ac
    --- /var/log/opscode/postgresql/9.6/config	2018-04-23 19:20:13.673399316 +0530
    +++ /var/log/opscode/postgresql/9.6/.chef-config20180423-3855-1u0q2lj	2018-04-23 19:20:13.673399316 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[postgresql] action nothing (skipped due to action :nothing)
Recipe: private-chef::postgresql
  * runit_service[postgresql] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/postgresql] action create
      - create new directory /opt/opscode/sv/postgresql
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/postgresql/run] action create
      - create new file /opt/opscode/sv/postgresql/run
      - update content in file /opt/opscode/sv/postgresql/run from none to 2d479c
      --- /opt/opscode/sv/postgresql/run	2018-04-23 19:20:13.743403456 +0530
      +++ /opt/opscode/sv/postgresql/.chef-run20180423-3855-1u35ob0	2018-04-23 19:20:13.742403397 +0530
      @@ -1 +1,5 @@
      +#!/bin/sh
      +exec 2>&1
      +exec chpst -P -U opscode-pgsql -u opscode-pgsql /opt/opscode/embedded/bin/postgres -D /var/opt/opscode/postgresql/9.6/data
      +
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/postgresql/log] action create
      - create new directory /opt/opscode/sv/postgresql/log
      - restore selinux security context
    * directory[/opt/opscode/sv/postgresql/log/main] action create
      - create new directory /opt/opscode/sv/postgresql/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/postgresql] action create
      - create new directory /var/log/postgresql
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/postgresql/log/config] action create
      - create new file /opt/opscode/sv/postgresql/log/config
      - update content in file /opt/opscode/sv/postgresql/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/postgresql/config] action create
      - create symlink at /var/log/postgresql/config to /opt/opscode/sv/postgresql/log/config
    * template[/opt/opscode/sv/postgresql/log/run] action create
      - create new file /opt/opscode/sv/postgresql/log/run
      - update content in file /opt/opscode/sv/postgresql/log/run from none to 7f60b6
      --- /opt/opscode/sv/postgresql/log/run	2018-04-23 19:20:13.897412563 +0530
      +++ /opt/opscode/sv/postgresql/log/.chef-run20180423-3855-1gh388x	2018-04-23 19:20:13.896412504 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/postgresql/9.6
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/postgresql/env] action create
      - create new directory /opt/opscode/sv/postgresql/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/postgresql/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/postgresql/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/postgresql/control] action create
      - create new directory /opt/opscode/sv/postgresql/control
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/postgresql/control/t] action create
      - create new file /opt/opscode/sv/postgresql/control/t
      - update content in file /opt/opscode/sv/postgresql/control/t from none to 82326a
      --- /opt/opscode/sv/postgresql/control/t	2018-04-23 19:20:13.998418536 +0530
      +++ /opt/opscode/sv/postgresql/control/.chef-t20180423-3855-nn9lb6	2018-04-23 19:20:13.998418536 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +echo "received TERM from runit, sending INT instead to force quit connections"
      +/opt/opscode/embedded/bin/sv interrupt postgresql
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/postgresql] action create
      - create symlink at /opt/opscode/init/postgresql to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/postgresql/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/postgresql] action create (up to date)
      * template[/opt/opscode/sv/postgresql/run] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/log] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/log/main] action create (up to date)
      * directory[/var/log/postgresql] action create (up to date)
      * template[/opt/opscode/sv/postgresql/log/config] action create (up to date)
      * link[/var/log/postgresql/config] action create (up to date)
      * template[/opt/opscode/sv/postgresql/log/run] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/postgresql/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/postgresql/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/postgresql/control] action create (up to date)
      * template[/opt/opscode/sv/postgresql/control/t] action create (up to date)
      * link[/opt/opscode/init/postgresql] action create (up to date)
      * file[/opt/opscode/sv/postgresql/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/postgresql] action create
        - create symlink at /opt/opscode/service/postgresql to /opt/opscode/sv/postgresql
      * ruby_block[wait for postgresql service socket] action run
        - execute the ruby block wait for postgresql service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/postgresql] action create (up to date)
      * template[/opt/opscode/sv/postgresql/run] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/log] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/log/main] action create (up to date)
      * directory[/var/log/postgresql] action create (up to date)
      * template[/opt/opscode/sv/postgresql/log/config] action create (up to date)
      * link[/var/log/postgresql/config] action create (up to date)
      * template[/opt/opscode/sv/postgresql/log/run] action create (up to date)
      * directory[/opt/opscode/sv/postgresql/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for postgresql service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/postgresql/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/postgresql/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/postgresql/control] action create (up to date)
      * template[/opt/opscode/sv/postgresql/control/t] action create (up to date)
      * link[/opt/opscode/init/postgresql] action create (up to date)
      * file[/opt/opscode/sv/postgresql/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/postgresql] action create (up to date)
      * ruby_block[wait for postgresql service socket] action run
        - execute the ruby block wait for postgresql service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/postgresql] action create (up to date)
    * ruby_block[wait for postgresql service socket] action run
      - execute the ruby block wait for postgresql service socket
  
  * execute[/opt/opscode/bin/private-chef-ctl start postgresql] action run
    - execute /opt/opscode/bin/private-chef-ctl start postgresql
  * ruby_block[wait for postgresql to start] action run
    - execute the ruby block wait for postgresql to start
  * private_chef_pg_user[opscode-pgsql] action create
    - Update Postgres user opscode-pgsql
    -   Update password
  * private_chef_pg_database[opscode-pgsql] action create
    - Create database opscode-pgsql
Recipe: private-chef::erchef_database
  * private_chef_pg_user[opscode_chef] action create
    - Create PostgreSQL user opscode_chef
    -   Set password
  * private_chef_pg_user[opscode_chef_ro] action create
    - Create PostgreSQL user opscode_chef_ro
    -   Set password
  * private_chef_pg_database[opscode_chef] action create
    - Create database opscode_chef
  * private_chef_pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action deploy
    - Deploying schema from /opt/opscode/embedded/service/opscode-erchef/schema/baseline
    * execute[sqitch_deploy_/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action run
      - execute sqitch --engine pg --db-name opscode_chef --db-host 127.0.0.1 --db-port 5432 --db-user opscode-pgsql --top-dir /opt/opscode/embedded/service/opscode-erchef/schema/baseline deploy --verify
  
  * private_chef_pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema] action deploy
    - Deploying schema from /opt/opscode/embedded/service/opscode-erchef/schema
    * execute[sqitch_deploy_/opt/opscode/embedded/service/opscode-erchef/schema] action run
      - execute sqitch --engine pg --db-name opscode_chef --db-host 127.0.0.1 --db-port 5432 --db-user opscode-pgsql --top-dir /opt/opscode/embedded/service/opscode-erchef/schema deploy --verify
  
  * ruby_block[set opscode_chef ownership] action run
    - execute the ruby block set opscode_chef ownership
  * private_chef_pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema/baseline] action nothing (skipped due to action :nothing)
  * private_chef_pg_sqitch[/opt/opscode/embedded/service/opscode-erchef/schema] action nothing (skipped due to action :nothing)
  * private_chef_pg_user_table_access[opscode_chef] action create
    - GRANT CONNECT, TEMPORARY ON DATABASE opscode_chef TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO opscode_chef;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, UPDATE ON SEQUENCES TO opscode_chef;
    - GRANT SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO opscode_chef
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO opscode_chef;
    - GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO opscode_chef
  * private_chef_pg_user_table_access[opscode_chef_ro] action create
    - GRANT CONNECT ON DATABASE opscode_chef TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO opscode_chef_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO opscode_chef_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO opscode_chef_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO opscode_chef_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO opscode_chef_ro
  * directory[/opt/opscode/embedded/service/enterprise-chef-server-schema] action delete (up to date)
Recipe: private-chef::bifrost_database
  * private_chef_pg_user[bifrost] action create
    - Create PostgreSQL user bifrost
    -   Set password
  * private_chef_pg_user[bifrost_ro] action create
    - Create PostgreSQL user bifrost_ro
    -   Set password
  * private_chef_pg_database[bifrost] action create
    - Create database bifrost
  * private_chef_pg_sqitch[/opt/opscode/embedded/service/oc_bifrost/db] action deploy
    - Deploying schema from /opt/opscode/embedded/service/oc_bifrost/db
    * execute[sqitch_deploy_/opt/opscode/embedded/service/oc_bifrost/db] action run
      - execute sqitch --engine pg --db-name bifrost --db-host 127.0.0.1 --db-port 5432 --db-user opscode-pgsql --top-dir /opt/opscode/embedded/service/oc_bifrost/db deploy --verify
  
  * private_chef_pg_user_table_access[bifrost] action create
    - GRANT CONNECT, TEMPORARY ON DATABASE bifrost TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO bifrost;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, UPDATE ON SEQUENCES TO bifrost;
    - GRANT SELECT, UPDATE ON ALL SEQUENCES IN SCHEMA public TO bifrost
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, SELECT, UPDATE, DELETE ON TABLES TO bifrost;
    - GRANT INSERT, SELECT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO bifrost
  * private_chef_pg_user_table_access[bifrost_ro] action create
    - GRANT CONNECT ON DATABASE bifrost TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO bifrost_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO bifrost_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO bifrost_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO bifrost_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO bifrost_ro
  * private_chef_pg_sqitch[/opt/opscode/embedded/service/oc_bifrost/db] action nothing (skipped due to action :nothing)
Recipe: private-chef::oc_id_database
  * private_chef_pg_user[oc_id] action create
    - Create PostgreSQL user oc_id
    -   Set password
  * private_chef_pg_user[oc_id_ro] action create
    - Create PostgreSQL user oc_id_ro
    -   Set password
  * private_chef_pg_database[oc_id] action create
    - Create database oc_id
  * private_chef_pg_user_table_access[oc_id_ro] action create
    - GRANT CONNECT ON DATABASE oc_id TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT EXECUTE ON FUNCTIONS TO oc_id_ro;
    - GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON SEQUENCES TO oc_id_ro;
    - GRANT SELECT ON ALL SEQUENCES IN SCHEMA public TO oc_id_ro
    - ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO oc_id_ro;
    - GRANT SELECT ON ALL TABLES IN SCHEMA public TO oc_id_ro
Recipe: private-chef::oc_bifrost
  * execute[/opt/opscode/bin/private-chef-ctl stop opscode-authz] action run
    - execute /opt/opscode/bin/private-chef-ctl stop opscode-authz
Recipe: <Dynamically Defined Resource>
  * service[opscode-authz] action nothing (skipped due to action :nothing)
Recipe: private-chef::oc_bifrost
  * runit_service[opscode-authz] action disable
    * ruby_block[disable opscode-authz] action run (skipped due to only_if)
     (up to date)
  * directory[/opt/opscode/sv/opscode-authz] action delete (up to date)
  * directory[/var/opt/opscode/oc_bifrost] action create
    - create new directory /var/opt/opscode/oc_bifrost
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/oc_bifrost/bin] action create
    - create new directory /var/opt/opscode/oc_bifrost/bin
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/oc_bifrost] action create
    - create new directory /var/log/opscode/oc_bifrost
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/oc_bifrost/sasl] action create
    - create new directory /var/log/opscode/oc_bifrost/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/oc_bifrost/log] action create
    - create symlink at /opt/opscode/embedded/service/oc_bifrost/log to /var/log/opscode/oc_bifrost
  * template[/var/opt/opscode/oc_bifrost/sys.config] action create
    - create new file /var/opt/opscode/oc_bifrost/sys.config
    - update content in file /var/opt/opscode/oc_bifrost/sys.config from none to f94493
    --- /var/opt/opscode/oc_bifrost/sys.config	2018-04-23 19:20:34.379495724 +0530
    +++ /var/opt/opscode/oc_bifrost/.chef-sys20180423-3855-1jg1r3u.config	2018-04-23 19:20:34.379495724 +0530
    @@ -1 +1,129 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*- %% ex: ts=4 sw=4 ft=erlang et
    +%%
    +%% oc_bifrost sys.config file
    +%%
    +%% Automatically generated by Chef
    +%%
    +[
    + {kernel, [{start_pg2, true},
    +           {inet_dist_use_interface, {127,0,0,1}}
    +          ]},
    + {sasl, [
    +         {sasl_error_logger, {file, "/var/log/opscode/oc_bifrost/sasl-error.log"}},
    +         {errlog_type, error},
    +         {error_logger_mf_dir, "/var/log/opscode/oc_bifrost/sasl"},      % Log directory
    +         {error_logger_mf_maxbytes, 104857600},
    +         {error_logger_mf_maxfiles, 10}
    +        ]},
    + {chef_secrets, [{provider, chef_secrets_fd}]},
    + {lager, [
    +          %% What handlers to install with what arguments
    +          %% The defaults for the logfiles are to rotate the files when
    +          %% they reach 10Mb or at midnight, whichever comes first, and keep
    +          %% the last 5 rotations. See the lager README for a description of
    +          %% the time rotation format:
    +          %% https://github.com/basho/lager/blob/master/README.md#internal-log-rotation
    +          %%
    +          %% If you wish to disable rotation, you can either set the size to 0
    +          %% and the rotation time to "", or instead specify a 2-tuple that only
    +          %% consists of {Logfile, Level}.
    +          {handlers, [
    +              {lager_console_backend, [info, {lager_default_formatter, [ "[", severity, "] ", message, "\n"]}]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/oc_bifrost/error.log"},
    +                                    {level, error},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10}
    +                                   ]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/oc_bifrost/console.log"},
    +                                    {level, info},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10},
    +                                    %% Removes the logging source, since currently
    +                                    %% there's only one place in all of Bifrost that
    +                                    %% we log from.  Also removes the PID from
    +                                    %% the default message format.
    +                                    {formatter_config, [date, " ", time, " [", severity, "] ", message, "\n"]}
    +                                   ]}
    +              ]},
    +
    +          %% Whether to write a crash log, and where.
    +          %% Commented/omitted/undefined means no crash logger.
    +          {crash_log, "/var/log/opscode/oc_bifrost/crash.log"},
    +
    +          %% Maximum size in bytes of events in the crash log - defaults to 65536
    +          {crash_log_msg_size, 65536},
    +
    +          %% Maximum size of the crash log in bytes, before its rotated, set
    +          %% to 0 to disable rotation - default is 0
    +          {crash_log_size, 104857600},
    +
    +          %% What time to rotate the crash log - default is no time
    +          %% rotation. See the lager README for a description of this format:
    +          %% https://github.com/basho/lager/blob/master/README.org
    +          {crash_log_date, "$D0"},
    +
    +          %% Number of rotated crash logs to keep, 0 means keep only the
    +          %% current one - default is 0
    +          {crash_log_count, 10},
    +
    +          %% Whether to redirect error_logger messages into lager - defaults to true
    +          {error_logger_redirect, true},
    +
    +          %% Bump up the "high-water mark" (default 50), which is the
    +          %% number of messages per second allowed to come from
    +          %% error_logger.  This is the same as used by
    +          %% opscode-chef-mover, FWIW.
    +          {error_logger_hwm, 1000}
    +        ]},
    + {webmachine, [
    +          {log_handlers, [
    +               {oc_wm_request_logger, [
    +                       {file, "/var/log/opscode/oc_bifrost/requests.log"},
    +                       {file_size, 100},  %% Size in MB
    +                       {files, 10},
    +                         {annotations, [requestor_id, created_authz_id, perf_stats, msg]}
    +                       ]
    +               }
    +        ]}
    + ]},
    + {sqerl, [
    +          {db_driver_mod, sqerl_pgsql_client},
    +          {config_cb, {chef_secrets_sqerl, config, [{<<"oc_bifrost">>, <<"sql_password">>}]}},
    +          {ip_mode, [ ipv4 ] },
    +          {db_host, "127.0.0.1" },
    +          {db_port, 5432 },
    +          {db_user, "bifrost" },
    +          {db_name, "bifrost" },
    +          {idle_check, 10000},
    +          {pooler_timeout, 2000},
    +          {db_timeout, 5000},
    +          {prepared_statements, {bifrost_db, statements, []} },
    +          {column_transforms, []}
    +         ]},
    + {stats_hero, [
    +                {udp_socket_pool_size, 20 },
    +                {protocol, estatsd},
    +                {estatsd_host, "127.0.0.1" },
    +                {estatsd_port, 9466 }
    +               ]},
    + {pooler, [
    +           {pools, [[{name, sqerl},
    +                     {max_count, 20 },
    +                     {init_count, 20 },
    +                     {queue_max, 20},
    +                     {start_mfa, {sqerl_client, start_link, []}}]]}
    +           %%,{metrics_module, folsom_metrics}
    +          ]},
    + {bifrost, [
    +             {ip, "127.0.0.1" },
    +             {port, 9463 },
    +             {root_metric_key, "bifrost"},
    +             {enable_extended_perf_log, true}
    +            ]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/oc_bifrost/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/oc_bifrost/sys.config
    - create symlink at /opt/opscode/embedded/service/oc_bifrost/sys.config to /var/opt/opscode/oc_bifrost/sys.config
  * template[/var/opt/opscode/oc_bifrost/vm.args] action create
    - create new file /var/opt/opscode/oc_bifrost/vm.args
    - update content in file /var/opt/opscode/oc_bifrost/vm.args from none to a8e24e
    --- /var/opt/opscode/oc_bifrost/vm.args	2018-04-23 19:20:34.428498161 +0530
    +++ /var/opt/opscode/oc_bifrost/.chef-vm20180423-3855-2pvd0r.args	2018-04-23 19:20:34.427498112 +0530
    @@ -1 +1,26 @@
    +## Name of the node
    +-name oc_bifrost@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie oc_bifrost
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll and a few async threads
    ++K true
    ++A 10
    +
    ++P 262144
    +
    +## Increase number of concurrent ports/sockets
    +-env ERL_MAX_PORTS 65536
    +
    +## Tweak GC to run more often
    +-env ERL_FULLSWEEP_AFTER 10
    +
    +## Increase logfile size to 10M
    +-env RUN_ERL_LOG_MAXSIZE 10000000
    +
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/oc_bifrost/vm.args] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/oc_bifrost/vm.args
    - create symlink at /opt/opscode/embedded/service/oc_bifrost/vm.args to /var/opt/opscode/oc_bifrost/vm.args
  * execute[restart_oc_bifrost_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/oc_bifrost/config] action create
    - create new file /var/log/opscode/oc_bifrost/config
    - update content in file /var/log/opscode/oc_bifrost/config from none to 5e16ac
    --- /var/log/opscode/oc_bifrost/config	2018-04-23 19:20:34.466500051 +0530
    +++ /var/log/opscode/oc_bifrost/.chef-config20180423-3855-x2o6cp	2018-04-23 19:20:34.466500051 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[oc_bifrost] action nothing (skipped due to action :nothing)
Recipe: private-chef::oc_bifrost
  * runit_service[oc_bifrost] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/oc_bifrost] action create
      - create new directory /opt/opscode/sv/oc_bifrost
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/oc_bifrost/run] action create
      - create new file /opt/opscode/sv/oc_bifrost/run
      - update content in file /opt/opscode/sv/oc_bifrost/run from none to ae81b9
      --- /opt/opscode/sv/oc_bifrost/run	2018-04-23 19:20:34.555504477 +0530
      +++ /opt/opscode/sv/oc_bifrost/.chef-run20180423-3855-1vrll3i	2018-04-23 19:20:34.554504427 +0530
      @@ -1 +1,6 @@
      +#!/bin/sh
      +exec 2>&1
      +
      +export PATH=/opt/opscode/embedded/bin:$PATH
      +exec veil-env-helper --use-file -s oc_bifrost.sql_password -s oc_bifrost.superuser_id -- chpst -P -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/oc_bifrost /opt/opscode/embedded/service/oc_bifrost/bin/oc_bifrost foreground
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/oc_bifrost/log] action create
      - create new directory /opt/opscode/sv/oc_bifrost/log
      - restore selinux security context
    * directory[/opt/opscode/sv/oc_bifrost/log/main] action create
      - create new directory /opt/opscode/sv/oc_bifrost/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/oc_bifrost] action create
      - create new directory /var/log/oc_bifrost
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/oc_bifrost/log/config] action create
      - create new file /opt/opscode/sv/oc_bifrost/log/config
      - update content in file /opt/opscode/sv/oc_bifrost/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/oc_bifrost/config] action create
      - create symlink at /var/log/oc_bifrost/config to /opt/opscode/sv/oc_bifrost/log/config
    * template[/opt/opscode/sv/oc_bifrost/log/run] action create
      - create new file /opt/opscode/sv/oc_bifrost/log/run
      - update content in file /opt/opscode/sv/oc_bifrost/log/run from none to ec30bd
      --- /opt/opscode/sv/oc_bifrost/log/run	2018-04-23 19:20:34.735513428 +0530
      +++ /opt/opscode/sv/oc_bifrost/log/.chef-run20180423-3855-1xcmdmp	2018-04-23 19:20:34.735513428 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/oc_bifrost
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/oc_bifrost/env] action create
      - create new directory /opt/opscode/sv/oc_bifrost/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/oc_bifrost/control] action create
      - create new directory /opt/opscode/sv/oc_bifrost/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/oc_bifrost] action create
      - create symlink at /opt/opscode/init/oc_bifrost to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_bifrost] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/log] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/log/main] action create (up to date)
      * directory[/var/log/oc_bifrost] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/log/config] action create (up to date)
      * link[/var/log/oc_bifrost/config] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/log/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_bifrost/control] action create (up to date)
      * link[/opt/opscode/init/oc_bifrost] action create (up to date)
      * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_bifrost] action create
        - create symlink at /opt/opscode/service/oc_bifrost to /opt/opscode/sv/oc_bifrost
      * ruby_block[wait for oc_bifrost service socket] action run
        - execute the ruby block wait for oc_bifrost service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_bifrost] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/log] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/log/main] action create (up to date)
      * directory[/var/log/oc_bifrost] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/log/config] action create (up to date)
      * link[/var/log/oc_bifrost/config] action create (up to date)
      * template[/opt/opscode/sv/oc_bifrost/log/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_bifrost/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for oc_bifrost service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_bifrost/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_bifrost/control] action create (up to date)
      * link[/opt/opscode/init/oc_bifrost] action create (up to date)
      * file[/opt/opscode/sv/oc_bifrost/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_bifrost] action create (up to date)
      * ruby_block[wait for oc_bifrost service socket] action run
        - execute the ruby block wait for oc_bifrost service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/oc_bifrost] action create (up to date)
    * ruby_block[wait for oc_bifrost service socket] action run
      - execute the ruby block wait for oc_bifrost service socket
  
Recipe: private-chef::oc_id
  * directory[/var/opt/opscode/oc_id] action create
    - create new directory /var/opt/opscode/oc_id
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/oc_id/config] action create
    - create new directory /var/opt/opscode/oc_id/config
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/oc_id/tmp] action create
    - create new directory /var/opt/opscode/oc_id/tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/oc_id] action create
    - create new directory /var/log/opscode/oc_id
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/opt/opscode/embedded/service/oc_id/log] action delete
    - delete existing directory /opt/opscode/embedded/service/oc_id/log
  * directory[/opt/opscode/embedded/service/oc_id/tmp] action delete (up to date)
  * link[/opt/opscode/embedded/service/oc_id/log] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/log to /var/log/opscode/oc_id
  * link[/opt/opscode/embedded/service/oc_id/tmp] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/tmp to /var/opt/opscode/oc_id/tmp
  * file[/var/opt/opscode/oc_id/config/production.yml] action create
    - create new file /var/opt/opscode/oc_id/config/production.yml
    - update content in file /var/opt/opscode/oc_id/config/production.yml from none to d4ad9f
    --- /var/opt/opscode/oc_id/config/production.yml	2018-04-23 19:20:41.526851140 +0530
    +++ /var/opt/opscode/oc_id/config/.chef-production20180423-3855-17f9fnc.yml	2018-04-23 19:20:41.526851140 +0530
    @@ -1 +1,12 @@
    +---
    +chef:
    +  endpoint: https://127.0.0.1
    +  superuser: pivotal
    +  ssl_verify_mode: verify_none
    +doorkeeper:
    +  administrators: []
    +sentry_dsn: 
    +sign_up_url: https:///signup
    +email_from_address: '"Opscode" <donotreply@chef.io>'
    +origin: 
    - change mode from '' to '0640'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/opt/opscode/embedded/service/oc_id/config/settings/production.yml] action delete
    - delete file /opt/opscode/embedded/service/oc_id/config/settings/production.yml
  * link[/opt/opscode/embedded/service/oc_id/config/settings/production.yml] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/config/settings/production.yml to /var/opt/opscode/oc_id/config/production.yml
  * template[/var/opt/opscode/oc_id/config/secret_token.rb] action create
    - create new file /var/opt/opscode/oc_id/config/secret_token.rb
    - update content in file /var/opt/opscode/oc_id/config/secret_token.rb from none to d5e7af
    --- /var/opt/opscode/oc_id/config/secret_token.rb	2018-04-23 19:20:41.600854818 +0530
    +++ /var/opt/opscode/oc_id/config/.chef-secret_token20180423-3855-er9u91.rb	2018-04-23 19:20:41.600854818 +0530
    @@ -1 +1,3 @@
    +# CREATED BY CHEF - DO NOT MODIFY
    +OcId::Application.config.secret_key_base = Secrets.get('oc_id', 'secret_key_base')
    - change mode from '' to '0640'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb] action delete
    - delete file /opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb
  * link[/opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/config/initializers/secret_token.rb to /var/opt/opscode/oc_id/config/secret_token.rb
  * template[/var/opt/opscode/oc_id/config/database.yml] action create
    - create new file /var/opt/opscode/oc_id/config/database.yml
    - update content in file /var/opt/opscode/oc_id/config/database.yml from none to aca50d
    --- /var/opt/opscode/oc_id/config/database.yml	2018-04-23 19:20:41.658857704 +0530
    +++ /var/opt/opscode/oc_id/config/.chef-database20180423-3855-11vz9wd.yml	2018-04-23 19:20:41.657857654 +0530
    @@ -1 +1,12 @@
    +# AUTO-GENERATED BY CHEF
    +production:
    +  adapter: postgresql
    +  encoding: unicode
    +  pool: 20
    +  template: template1
    +  host: 127.0.0.1
    +  port: 5432
    +  database: oc_id
    +  username: oc_id
    +  password: <%= Secrets.get('oc_id', 'sql_password') %>
    - change mode from '' to '0640'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/opt/opscode/embedded/service/oc_id/config/database.yml] action delete
    - delete file /opt/opscode/embedded/service/oc_id/config/database.yml
  * link[/opt/opscode/embedded/service/oc_id/config/database.yml] action create
    - create symlink at /opt/opscode/embedded/service/oc_id/config/database.yml to /var/opt/opscode/oc_id/config/database.yml
  * execute[chown -R opscode:opscode /var/log/opscode/oc_id] action run
    - execute chown -R opscode:opscode /var/log/opscode/oc_id
  * execute[oc_id_schema] action run
    - execute sensitive resource
  * execute[restart_oc_id_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/oc_id/config] action create
    - create new file /var/log/opscode/oc_id/config
    - update content in file /var/log/opscode/oc_id/config from none to 5e16ac
    --- /var/log/opscode/oc_id/config	2018-04-23 19:20:48.271186514 +0530
    +++ /var/log/opscode/oc_id/.chef-config20180423-3855-18gtiei	2018-04-23 19:20:48.271186514 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[oc_id] action nothing (skipped due to action :nothing)
Recipe: private-chef::oc_id
  * runit_service[oc_id] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/oc_id] action create
      - create new directory /opt/opscode/sv/oc_id
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/oc_id/run] action create
      - create new file /opt/opscode/sv/oc_id/run
      - update content in file /opt/opscode/sv/oc_id/run from none to 9e63bd
      --- /opt/opscode/sv/oc_id/run	2018-04-23 19:20:48.345190195 +0530
      +++ /opt/opscode/sv/oc_id/.chef-run20180423-3855-1waim2q	2018-04-23 19:20:48.344190145 +0530
      @@ -1 +1,13 @@
      +#!/bin/sh
      +exec 2>&1
      +
      +DIR=/opt/opscode/embedded/service/oc_id
      +export RAILS_ENV=production
      +export PATH=/opt/opscode/embedded/bin:$PATH
      +export LD_LIBRARY_PATH=/opt/opscode/embedded/lib
      +export HOME=$DIR
      +
      +rm -f $DIR/tmp/pids/server.pid
      +cd $DIR
      +exec veil-env-helper --use-file -s chef-server.webui_key -s oc_id.sql_password -s oc_id.secret_key_base -- chpst -P -u opscode -U opscode /opt/opscode/embedded/bin/bundle exec bin/rails server -p 9090 -b 127.0.0.1
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/oc_id/log] action create
      - create new directory /opt/opscode/sv/oc_id/log
      - restore selinux security context
    * directory[/opt/opscode/sv/oc_id/log/main] action create
      - create new directory /opt/opscode/sv/oc_id/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/oc_id] action create
      - create new directory /var/log/oc_id
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/oc_id/log/config] action create
      - create new file /opt/opscode/sv/oc_id/log/config
      - update content in file /opt/opscode/sv/oc_id/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/oc_id/config] action create
      - create symlink at /var/log/oc_id/config to /opt/opscode/sv/oc_id/log/config
    * template[/opt/opscode/sv/oc_id/log/run] action create
      - create new file /opt/opscode/sv/oc_id/log/run
      - update content in file /opt/opscode/sv/oc_id/log/run from none to 4f1bee
      --- /opt/opscode/sv/oc_id/log/run	2018-04-23 19:20:48.519198847 +0530
      +++ /opt/opscode/sv/oc_id/log/.chef-run20180423-3855-zc5aii	2018-04-23 19:20:48.519198847 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/oc_id
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/oc_id/env] action create
      - create new directory /opt/opscode/sv/oc_id/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/oc_id/control] action create
      - create new directory /opt/opscode/sv/oc_id/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/oc_id] action create
      - create symlink at /opt/opscode/init/oc_id to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_id] action create (up to date)
      * template[/opt/opscode/sv/oc_id/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/log] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/log/main] action create (up to date)
      * directory[/var/log/oc_id] action create (up to date)
      * template[/opt/opscode/sv/oc_id/log/config] action create (up to date)
      * link[/var/log/oc_id/config] action create (up to date)
      * template[/opt/opscode/sv/oc_id/log/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_id/control] action create (up to date)
      * link[/opt/opscode/init/oc_id] action create (up to date)
      * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_id] action create
        - create symlink at /opt/opscode/service/oc_id to /opt/opscode/sv/oc_id
      * ruby_block[wait for oc_id service socket] action run
        - execute the ruby block wait for oc_id service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/oc_id] action create (up to date)
      * template[/opt/opscode/sv/oc_id/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/log] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/log/main] action create (up to date)
      * directory[/var/log/oc_id] action create (up to date)
      * template[/opt/opscode/sv/oc_id/log/config] action create (up to date)
      * link[/var/log/oc_id/config] action create (up to date)
      * template[/opt/opscode/sv/oc_id/log/run] action create (up to date)
      * directory[/opt/opscode/sv/oc_id/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for oc_id service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/oc_id/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/oc_id/control] action create (up to date)
      * link[/opt/opscode/init/oc_id] action create (up to date)
      * file[/opt/opscode/sv/oc_id/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/oc_id] action create (up to date)
      * ruby_block[wait for oc_id service socket] action run
        - execute the ruby block wait for oc_id service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/oc_id] action create (up to date)
    * ruby_block[wait for oc_id service socket] action run
      - execute the ruby block wait for oc_id service socket
  
  * execute[/opt/opscode/bin/private-chef-ctl start oc_id] action run
    - execute /opt/opscode/bin/private-chef-ctl start oc_id
  * directory[/var/opt/opscode/nginx/etc/addon.d] action create
    - create new directory /var/opt/opscode/nginx/etc/addon.d
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf from none to e19622
    --- /var/opt/opscode/nginx/etc/addon.d/40-oc_id_upstreams.conf	2018-04-23 19:20:53.329438045 +0530
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-40-oc_id_upstreams20180423-3855-rnl5zw.conf	2018-04-23 19:20:53.329438045 +0530
    @@ -1 +1,8 @@
    +#
    +# Opscode Identity upstream definition
    +#
    +upstream oc_id {
    +    server 127.0.0.1:9090;
    +}
    +
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf
    - update content in file /var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf from none to f08b07
    --- /var/opt/opscode/nginx/etc/addon.d/40-oc_id_external.conf	2018-04-23 19:20:53.391441129 +0530
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-40-oc_id_external20180423-3855-bbix2i.conf	2018-04-23 19:20:53.391441129 +0530
    @@ -1 +1,8 @@
    +
    +rewrite ^/id$ /id/ permanent;
    +
    +location ~ "^/id/.*$" {
    +    proxy_redirect http://oc_id /;
    +    proxy_pass http://oc_id;
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::opscode-solr4
  * directory[/var/opt/opscode/opscode-solr4] action create
    - create new directory /var/opt/opscode/opscode-solr4
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-solr4/data] action create
    - create new directory /var/opt/opscode/opscode-solr4/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-solr4/home] action create
    - create new directory /var/opt/opscode/opscode-solr4/home
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-solr4/] action create (up to date)
  * directory[/var/log/opscode/opscode-solr4] action create
    - create new directory /var/log/opscode/opscode-solr4
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-solr4/home/collection1] action create
    - create new directory /var/opt/opscode/opscode-solr4/home/collection1
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-solr4/home/collection1/conf] action create
    - create new directory /var/opt/opscode/opscode-solr4/home/collection1/conf
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/var/opt/opscode/opscode-solr4/data] action create (skipped due to not_if)
  * cookbook_file[/var/opt/opscode/opscode-solr4/home/solr.xml] action create
    - create new file /var/opt/opscode/opscode-solr4/home/solr.xml
    - update content in file /var/opt/opscode/opscode-solr4/home/solr.xml from none to 833775
    --- /var/opt/opscode/opscode-solr4/home/solr.xml	2018-04-23 19:20:53.631453064 +0530
    +++ /var/opt/opscode/opscode-solr4/home/.chef-solr20180423-3855-oala05.xml	2018-04-23 19:20:53.630453014 +0530
    @@ -1 +1,36 @@
    +<?xml version="1.0" encoding="UTF-8" ?>
    +<!--
    + Licensed to the Apache Software Foundation (ASF) under one or more
    + contributor license agreements.  See the NOTICE file distributed with
    + this work for additional information regarding copyright ownership.
    + The ASF licenses this file to You under the Apache License, Version 2.0
    + (the "License"); you may not use this file except in compliance with
    + the License.  You may obtain a copy of the License at
    +
    +     http://www.apache.org/licenses/LICENSE-2.0
    +
    + Unless required by applicable law or agreed to in writing, software
    + distributed under the License is distributed on an "AS IS" BASIS,
    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + See the License for the specific language governing permissions and
    + limitations under the License.
    +-->
    +
    +<!--
    +   This is an example of a simple "solr.xml" file for configuring one or
    +   more Solr Cores, as well as allowing Cores to be added, removed, and
    +   reloaded via HTTP requests.
    +
    +   More information about options available in this configuration file,
    +   and Solr Core administration can be found online:
    +   http://wiki.apache.org/solr/CoreAdmin
    +-->
    +
    +<solr>
    +  <shardHandlerFactory name="shardHandlerFactory"
    +    class="HttpShardHandlerFactory">
    +    <int name="socketTimeout">${socketTimeout:0}</int>
    +    <int name="connTimeout">${connTimeout:0}</int>
    +  </shardHandlerFactory>
    +</solr>
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/var/opt/opscode/opscode-solr4/home/collection1/core.properties] action create
    - create new file /var/opt/opscode/opscode-solr4/home/collection1/core.properties
    - update content in file /var/opt/opscode/opscode-solr4/home/collection1/core.properties from none to 9a5a32
    --- /var/opt/opscode/opscode-solr4/home/collection1/core.properties	2018-04-23 19:20:53.673455152 +0530
    +++ /var/opt/opscode/opscode-solr4/home/collection1/.chef-core20180423-3855-1pxnhib.properties	2018-04-23 19:20:53.672455103 +0530
    @@ -1 +1,2 @@
    +name=collection1
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * template[/var/opt/opscode/opscode-solr4/home/collection1/conf/solrconfig.xml] action create
    - create new file /var/opt/opscode/opscode-solr4/home/collection1/conf/solrconfig.xml
    - update content in file /var/opt/opscode/opscode-solr4/home/collection1/conf/solrconfig.xml from none to 4c9cce
    --- /var/opt/opscode/opscode-solr4/home/collection1/conf/solrconfig.xml	2018-04-23 19:20:53.711457042 +0530
    +++ /var/opt/opscode/opscode-solr4/home/collection1/conf/.chef-solrconfig20180423-3855-8s6lcx.xml	2018-04-23 19:20:53.710456992 +0530
    @@ -1 +1,758 @@
    +<?xml version="1.0" encoding="UTF-8" ?>
    +<!--
    + Licensed to the Apache Software Foundation (ASF) under one or more
    + contributor license agreements.  See the NOTICE file distributed with
    + this work for additional information regarding copyright ownership.
    + The ASF licenses this file to You under the Apache License, Version 2.0
    + (the "License"); you may not use this file except in compliance with
    + the License.  You may obtain a copy of the License at
    +
    +     http://www.apache.org/licenses/LICENSE-2.0
    +
    + Unless required by applicable law or agreed to in writing, software
    + distributed under the License is distributed on an "AS IS" BASIS,
    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + See the License for the specific language governing permissions and
    + limitations under the License.
    +-->
    +
    +<!--
    +     For more details about configurations options that may appear in
    +     this file, see http://wiki.apache.org/solr/SolrConfigXml.
    +-->
    +<config>
    +  <!-- In all configuration below, a prefix of "solr." for class names
    +       is an alias that causes solr to search appropriate packages,
    +       including org.apache.solr.(search|update|request|core|analysis)
    +
    +       You may also specify a fully qualified Java classname if you
    +       have your own custom plugins.
    +    -->
    +
    +  <luceneMatchVersion>4.5</luceneMatchVersion>
    +  <dataDir>${solr.data.dir:}</dataDir>
    +
    +  <!-- The DirectoryFactory to use for indexes.
    +
    +       solr.StandardDirectoryFactory is filesystem
    +       based and tries to pick the best implementation for the current
    +       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,
    +       wraps solr.StandardDirectoryFactory and caches small files in memory
    +       for better NRT performance.
    +    -->
    +  <directoryFactory name="DirectoryFactory"
    +                    class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}"/>
    +
    +  <!-- The CodecFactory for defining the format of the inverted index.
    +       The default implementation is SchemaCodecFactory, which is the official Lucene
    +       index format, but hooks into the schema to provide per-field customization of
    +       the postings lists and per-document values in the fieldType element
    +       (postingsFormat/docValuesFormat). Note that most of the alternative implementations
    +       are experimental, so if you choose to customize the index format, its a good
    +       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)
    +       before upgrading to a newer version to avoid unnecessary reindexing.
    +  -->
    +  <codecFactory class="solr.SchemaCodecFactory"/>
    +
    +  <!-- To enable dynamic schema REST APIs, use the following for <schemaFactory>:
    +
    +       <schemaFactory class="ManagedIndexSchemaFactory">
    +         <bool name="mutable">true</bool>
    +         <str name="managedSchemaResourceName">managed-schema</str>
    +       </schemaFactory>
    +
    +       When ManagedIndexSchemaFactory is specified, Solr will load the schema from
    +       he resource named in 'managedSchemaResourceName', rather than from schema.xml.
    +       Note that the managed schema resource CANNOT be named schema.xml.  If the managed
    +       schema does not exist, Solr will create it after reading schema.xml, then rename
    +       'schema.xml' to 'schema.xml.bak'.
    +
    +       Do NOT hand edit the managed schema - external modifications will be ignored and
    +       overwritten as a result of schema modification REST API calls.
    +
    +       When ManagedIndexSchemaFactory is specified with mutable = true, schema
    +       modification REST API calls will be allowed; otherwise, error responses will be
    +       sent back for these requests.
    +  -->
    +  <schemaFactory class="ClassicIndexSchemaFactory"/>
    +
    +  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    +       Index Config - These settings control low-level behavior of indexing
    +       Most example settings here show the default value, but are commented
    +       out, to more easily see where customizations have been made.
    +
    +       Note: This replaces <indexDefaults> and <mainIndex> from older versions
    +       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    +  <indexConfig>
    +    <!-- maxFieldLength was removed in 4.0. To get similar behavior, include a
    +         LimitTokenCountFilterFactory in your fieldType definition. E.g.
    +     <filter class="solr.LimitTokenCountFilterFactory" maxTokenCount="10000"/>
    +    -->
    +    <!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 -->
    +    <!-- <writeLockTimeout>1000</writeLockTimeout>  -->
    +
    +    <!-- The maximum number of simultaneous threads that may be
    +         indexing documents at once in IndexWriter; if more than this
    +         many threads arrive they will wait for others to finish.
    +         Default in Solr/Lucene is 8. -->
    +    <!-- <maxIndexingThreads>8</maxIndexingThreads>  -->
    +
    +    <!-- Expert: Enabling compound file will use less files for the index,
    +         using fewer file descriptors on the expense of performance decrease.
    +         Default in Lucene is "true". Default in Solr is "false" (since 3.6) -->
    +    <!-- <useCompoundFile>false</useCompoundFile> -->
    +
    +    <!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene
    +         indexing for buffering added documents and deletions before they are
    +         flushed to the Directory.
    +         maxBufferedDocs sets a limit on the number of documents buffered
    +         before flushing.
    +         If both ramBufferSizeMB and maxBufferedDocs is set, then
    +         Lucene will flush based on whichever limit is hit first.
    +         The default is 100 MB.  -->
    +    <ramBufferSizeMB>100</ramBufferSizeMB>
    +    <maxBufferedDocs>1000</maxBufferedDocs>
    +
    +    <!-- Expert: Merge Policy
    +         The Merge Policy in Lucene controls how merging of segments is done.
    +         The default since Solr/Lucene 3.3 is TieredMergePolicy.
    +         The default since Lucene 2.3 was the LogByteSizeMergePolicy,
    +         Even older versions of Lucene used LogDocMergePolicy.
    +      -->
    +    <!--
    +        <mergePolicy class="org.apache.lucene.index.TieredMergePolicy">
    +          <int name="maxMergeAtOnce">10</int>
    +          <int name="segmentsPerTier">10</int>
    +        </mergePolicy>
    +      -->
    +
    +    <!-- Merge Factor
    +         The merge factor controls how many segments will get merged at a time.
    +         For TieredMergePolicy, mergeFactor is a convenience parameter which
    +         will set both MaxMergeAtOnce and SegmentsPerTier at once.
    +         For LogByteSizeMergePolicy, mergeFactor decides how many new segments
    +         will be allowed before they are merged into one.
    +         Default is 10 for both merge policies.
    +      -->
    +    <mergeFactor>15</mergeFactor>
    +    <!-- Expert: Merge Scheduler
    +         The Merge Scheduler in Lucene controls how merges are
    +         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
    +         can perform merges in the background using separate threads.
    +         The SerialMergeScheduler (Lucene 2.2 default) does not.
    +     -->
    +    <!--
    +       <mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/>
    +       -->
    +
    +    <!-- LockFactory
    +
    +         This option specifies which Lucene LockFactory implementation
    +         to use.
    +
    +         single = SingleInstanceLockFactory - suggested for a
    +                  read-only index or when there is no possibility of
    +                  another process trying to modify the index.
    +         native = NativeFSLockFactory - uses OS native file locking.
    +                  Do not use when multiple solr webapps in the same
    +                  JVM are attempting to share a single index.
    +         simple = SimpleFSLockFactory  - uses a plain file for locking
    +
    +         Defaults: 'native' is default for Solr3.6 and later, otherwise
    +                   'simple' is the default
    +
    +         More details on the nuances of each LockFactory...
    +         http://wiki.apache.org/lucene-java/AvailableLockFactories
    +    -->
    +    <lockType>${solr.lock.type:native}</lockType>
    +
    +    <!-- Unlock On Startup
    +
    +         If true, unlock any held write or commit locks on startup.
    +         This defeats the locking mechanism that allows multiple
    +         processes to safely access a lucene index, and should be used
    +         with care. Default is "false".
    +
    +         This is not needed if lock type is 'single'
    +     -->
    +    <!--
    +    <unlockOnStartup>false</unlockOnStartup>
    +      -->
    +
    +    <!-- Expert: Controls how often Lucene loads terms into memory
    +         Default is 128 and is likely good for most everyone.
    +      -->
    +    <!-- <termIndexInterval>128</termIndexInterval> -->
    +
    +    <!-- If true, IndexReaders will be opened/reopened from the IndexWriter
    +         instead of from the Directory. Hosts in a master/slave setup
    +         should have this set to false while those in a SolrCloud
    +         cluster need to be set to true. Default: true
    +      -->
    +    <!--
    +    <nrtMode>true</nrtMode>
    +      -->
    +
    +    <!-- Commit Deletion Policy
    +         Custom deletion policies can be specified here. The class must
    +         implement org.apache.lucene.index.IndexDeletionPolicy.
    +
    +         The default Solr IndexDeletionPolicy implementation supports
    +         deleting index commit points on number of commits, age of
    +         commit point and optimized status.
    +
    +         The latest commit point should always be preserved regardless
    +         of the criteria.
    +    -->
    +    <!--
    +    <deletionPolicy class="solr.SolrDeletionPolicy">
    +    -->
    +      <!-- The number of commit points to be kept -->
    +      <!-- <str name="maxCommitsToKeep">1</str> -->
    +      <!-- The number of optimized commit points to be kept -->
    +      <!-- <str name="maxOptimizedCommitsToKeep">0</str> -->
    +      <!--
    +          Delete all commit points once they have reached the given age.
    +          Supports DateMathParser syntax e.g.
    +        -->
    +      <!--
    +         <str name="maxCommitAge">30MINUTES</str>
    +         <str name="maxCommitAge">1DAY</str>
    +      -->
    +    <!--
    +    </deletionPolicy>
    +    -->
    +
    +    <!-- Lucene Infostream
    +
    +         To aid in advanced debugging, Lucene provides an "InfoStream"
    +         of detailed information when indexing.
    +
    +         Setting the value to true will instruct the underlying Lucene
    +         IndexWriter to write its info stream to solr's log. By default,
    +         this is enabled here, and controlled through log4j.properties.
    +      -->
    +     <infoStream>true</infoStream>
    +  </indexConfig>
    +
    +  <!-- JMX
    +
    +       This example enables JMX if and only if an existing MBeanServer
    +       is found, use this if you want to configure JMX through JVM
    +       parameters. Remove this to disable exposing Solr configuration
    +       and statistics to JMX.
    +
    +       For more details see http://wiki.apache.org/solr/SolrJmx
    +    -->
    +  <jmx />
    +
    +  <!-- The default high-performance update handler -->
    +  <updateHandler class="solr.DirectUpdateHandler2">
    +
    +    <!-- Enables a transaction log, used for real-time get, durability, and
    +         and solr cloud replica recovery.  The log can grow as big as
    +         uncommitted changes to the index, so use of a hard autoCommit
    +         is recommended (see below).
    +         "dir" - the target directory for transaction logs, defaults to the
    +                solr data directory.  -->
    +    <updateLog>
    +      <str name="dir">${solr.ulog.dir:}</str>
    +    </updateLog>
    +
    +    <!-- AutoCommit
    +
    +         Perform a hard commit automatically under certain conditions.
    +         Instead of enabling autoCommit, consider using "commitWithin"
    +         when adding documents.
    +
    +         http://wiki.apache.org/solr/UpdateXmlMessages
    +
    +         maxDocs - Maximum number of documents to add since the last
    +                   commit before automatically triggering a new commit.
    +
    +         maxTime - Maximum amount of time in ms that is allowed to pass
    +                   since a document was added before automatically
    +                   triggering a new commit.
    +         openSearcher - if false, the commit causes recent index changes
    +           to be flushed to stable storage, but does not cause a new
    +           searcher to be opened to make those changes visible.
    +
    +         If the updateLog is enabled, then it's highly recommended to
    +         have some sort of hard autoCommit to limit the log size.
    +      -->
    +     <autoCommit>
    +       <maxTime>60000</maxTime>
    +       <maxDocs>1000</maxDocs>
    +       <openSearcher>false</openSearcher>
    +     </autoCommit>
    +
    +    <!-- softAutoCommit is like autoCommit except it causes a
    +         'soft' commit which only ensures that changes are visible
    +         but does not ensure that data is synced to disk.  This is
    +         faster and more near-realtime friendly than a hard commit.
    +      -->
    +
    +     <autoSoftCommit>
    +       <maxTime>1000</maxTime>
    +     </autoSoftCommit>
    +
    +    <!-- Update Related Event Listeners
    +
    +         Various IndexWriter related events can trigger Listeners to
    +         take actions.
    +
    +         postCommit - fired after every commit or optimize command
    +         postOptimize - fired after every optimize command
    +      -->
    +    <!-- The RunExecutableListener executes an external command from a
    +         hook such as postCommit or postOptimize.
    +
    +         exe - the name of the executable to run
    +         dir - dir to use as the current working directory. (default=".")
    +         wait - the calling thread waits until the executable returns.
    +                (default="true")
    +         args - the arguments to pass to the program.  (default is none)
    +         env - environment variables to set.  (default is none)
    +      -->
    +    <!-- This example shows how RunExecutableListener could be used
    +         with the script based replication...
    +         http://wiki.apache.org/solr/CollectionDistribution
    +      -->
    +    <!--
    +       <listener event="postCommit" class="solr.RunExecutableListener">
    +         <str name="exe">solr/bin/snapshooter</str>
    +         <str name="dir">.</str>
    +         <bool name="wait">true</bool>
    +         <arr name="args"> <str>arg1</str> <str>arg2</str> </arr>
    +         <arr name="env"> <str>MYVAR=val1</str> </arr>
    +       </listener>
    +      -->
    +
    +  </updateHandler>
    +
    +  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    +       Query section - these settings control query time things like caches
    +       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    +  <query>
    +    <!-- Max Boolean Clauses
    +
    +         Maximum number of clauses in each BooleanQuery,  an exception
    +         is thrown if exceeded.
    +
    +         ** WARNING **
    +
    +         This option actually modifies a global Lucene property that
    +         will affect all SolrCores.  If multiple solrconfig.xml files
    +         disagree on this property, the value at any given moment will
    +         be based on the last SolrCore to be initialized.
    +
    +      -->
    +    <maxBooleanClauses>1024</maxBooleanClauses>
    +
    +
    +    <!-- Solr Internal Query Caches
    +
    +         There are two implementations of cache available for Solr,
    +         LRUCache, based on a synchronized LinkedHashMap, and
    +         FastLRUCache, based on a ConcurrentHashMap.
    +
    +         FastLRUCache has faster gets and slower puts in single
    +         threaded operation and thus is generally faster than LRUCache
    +         when the hit ratio of the cache is high (> 75%), and may be
    +         faster under other scenarios on multi-cpu systems.
    +    -->
    +
    +    <!-- Filter Cache
    +
    +         Cache used by SolrIndexSearcher for filters (DocSets),
    +         unordered sets of *all* documents that match a query.  When a
    +         new searcher is opened, its caches may be prepopulated or
    +         "autowarmed" using data from caches in the old searcher.
    +         autowarmCount is the number of items to prepopulate.  For
    +         LRUCache, the autowarmed items will be the most recently
    +         accessed items.
    +
    +         Parameters:
    +           class - the SolrCache implementation LRUCache or
    +               (LRUCache or FastLRUCache)
    +           size - the maximum number of entries in the cache
    +           initialSize - the initial capacity (number of entries) of
    +               the cache.  (see java.util.HashMap)
    +           autowarmCount - the number of entries to prepopulate from
    +               and old cache.
    +      -->
    +    <filterCache class="solr.FastLRUCache"
    +                 size="512"
    +                 initialSize="512"
    +                 autowarmCount="0"/>
    +
    +    <!-- Query Result Cache
    +
    +         Caches results of searches - ordered lists of document ids
    +         (DocList) based on a query, a sort, and the range of documents requested.
    +      -->
    +    <queryResultCache class="solr.LRUCache"
    +                     size="512"
    +                     initialSize="512"
    +                     autowarmCount="0"/>
    +
    +    <!-- Document Cache
    +
    +         Caches Lucene Document objects (the stored fields for each
    +         document).  Since Lucene internal document ids are transient,
    +         this cache will not be autowarmed.
    +      -->
    +    <documentCache class="solr.LRUCache"
    +                   size="512"
    +                   initialSize="512"
    +                   autowarmCount="0"/>
    +
    +    <!-- custom cache currently used by block join -->
    +    <cache name="perSegFilter"
    +      class="solr.search.LRUCache"
    +      size="10"
    +      initialSize="0"
    +      autowarmCount="10"
    +      regenerator="solr.NoOpRegenerator" />
    +
    +    <!-- Field Value Cache
    +
    +         Cache used to hold field values that are quickly accessible
    +         by document id.  The fieldValueCache is created by default
    +         even if not configured here.
    +      -->
    +    <!--
    +       <fieldValueCache class="solr.FastLRUCache"
    +                        size="512"
    +                        autowarmCount="128"
    +                        showItems="32" />
    +      -->
    +
    +    <!-- Custom Cache
    +
    +         Example of a generic cache.  These caches may be accessed by
    +         name through SolrIndexSearcher.getCache(),cacheLookup(), and
    +         cacheInsert().  The purpose is to enable easy caching of
    +         user/application level data.  The regenerator argument should
    +         be specified as an implementation of solr.CacheRegenerator
    +         if autowarming is desired.
    +      -->
    +    <!--
    +       <cache name="myUserCache"
    +              class="solr.LRUCache"
    +              size="4096"
    +              initialSize="1024"
    +              autowarmCount="1024"
    +              regenerator="com.mycompany.MyRegenerator"
    +              />
    +      -->
    +
    +
    +    <!-- Lazy Field Loading
    +
    +         If true, stored fields that are not requested will be loaded
    +         lazily.  This can result in a significant speed improvement
    +         if the usual case is to not load all stored fields,
    +         especially if the skipped fields are large compressed text
    +         fields.
    +    -->
    +    <enableLazyFieldLoading>true</enableLazyFieldLoading>
    +
    +   <!-- Use Filter For Sorted Query
    +
    +        A possible optimization that attempts to use a filter to
    +        satisfy a search.  If the requested sort does not include
    +        score, then the filterCache will be checked for a filter
    +        matching the query. If found, the filter will be used as the
    +        source of document ids, and then the sort will be applied to
    +        that.
    +
    +        For most situations, this will not be useful unless you
    +        frequently get the same search repeatedly with different sort
    +        options, and none of them ever use "score"
    +     -->
    +   <!--
    +      <useFilterForSortedQuery>true</useFilterForSortedQuery>
    +     -->
    +
    +   <!-- Result Window Size
    +
    +        An optimization for use with the queryResultCache.  When a search
    +        is requested, a superset of the requested number of document ids
    +        are collected.  For example, if a search for a particular query
    +        requests matching documents 10 through 19, and queryWindowSize is 50,
    +        then documents 0 through 49 will be collected and cached.  Any further
    +        requests in that range can be satisfied via the cache.
    +     -->
    +   <queryResultWindowSize>20</queryResultWindowSize>
    +
    +   <!-- Maximum number of documents to cache for any entry in the
    +        queryResultCache.
    +     -->
    +   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
    +
    +   <!-- Query Related Event Listeners
    +
    +        Various IndexSearcher related events can trigger Listeners to
    +        take actions.
    +
    +        newSearcher - fired whenever a new searcher is being prepared
    +        and there is a current searcher handling requests (aka
    +        registered).  It can be used to prime certain caches to
    +        prevent long request times for certain requests.
    +
    +        firstSearcher - fired whenever a new searcher is being
    +        prepared but there is no current registered searcher to handle
    +        requests or to gain autowarming data from.
    +
    +
    +     -->
    +    <!-- QuerySenderListener takes an array of NamedList and executes a
    +         local query request for each NamedList in sequence.
    +      -->
    +    <listener event="newSearcher" class="solr.QuerySenderListener">
    +      <arr name="queries">
    +        <!--
    +           <lst><str name="q">solr</str><str name="sort">price asc</str></lst>
    +           <lst><str name="q">rocks</str><str name="sort">weight asc</str></lst>
    +          -->
    +      </arr>
    +    </listener>
    +    <listener event="firstSearcher" class="solr.QuerySenderListener">
    +      <arr name="queries">
    +        <lst>
    +          <str name="q">static firstSearcher warming in solrconfig.xml</str>
    +        </lst>
    +      </arr>
    +    </listener>
    +
    +    <!-- Use Cold Searcher
    +
    +         If a search request comes in and there is no current
    +         registered searcher, then immediately register the still
    +         warming searcher and use it.  If "false" then all requests
    +         will block until the first searcher is done warming.
    +      -->
    +    <useColdSearcher>false</useColdSearcher>
    +
    +    <!-- Max Warming Searchers
    +
    +         Maximum number of searchers that may be warming in the
    +         background concurrently.  An error is returned if this limit
    +         is exceeded.
    +
    +         Recommend values of 1-2 for read-only slaves, higher for
    +         masters w/o cache warming.
    +      -->
    +    <maxWarmingSearchers>2</maxWarmingSearchers>
    +
    +  </query>
    +
    +
    +  <!-- Request Dispatcher
    +
    +       This section contains instructions for how the SolrDispatchFilter
    +       should behave when processing requests for this SolrCore.
    +
    +       handleSelect is a legacy option that affects the behavior of requests
    +       such as /select?qt=XXX
    +
    +       handleSelect="true" will cause the SolrDispatchFilter to process
    +       the request and dispatch the query to a handler specified by the
    +       "qt" param, assuming "/select" isn't already registered.
    +
    +       handleSelect="false" will cause the SolrDispatchFilter to
    +       ignore "/select" requests, resulting in a 404 unless a handler
    +       is explicitly registered with the name "/select"
    +
    +       handleSelect="true" is not recommended for new users, but is the default
    +       for backwards compatibility
    +    -->
    +  <requestDispatcher handleSelect="false" >
    +    <!-- Request Parsing
    +
    +         These settings indicate how Solr Requests may be parsed, and
    +         what restrictions may be placed on the ContentStreams from
    +         those requests
    +
    +         enableRemoteStreaming - enables use of the stream.file
    +         and stream.url parameters for specifying remote streams.
    +
    +         multipartUploadLimitInKB - specifies the max size (in KiB) of
    +         Multipart File Uploads that Solr will allow in a Request.
    +
    +         formdataUploadLimitInKB - specifies the max size (in KiB) of
    +         form data (application/x-www-form-urlencoded) sent via
    +         POST. You can use POST to pass request parameters not
    +         fitting into the URL.
    +
    +         addHttpRequestToContext - if set to true, it will instruct
    +         the requestParsers to include the original HttpServletRequest
    +         object in the context map of the SolrQueryRequest under the
    +         key "httpRequest". It will not be used by any of the existing
    +         Solr components, but may be useful when developing custom
    +         plugins.
    +
    +         *** WARNING ***
    +         The settings below authorize Solr to fetch remote files, You
    +         should make sure your system has some authentication before
    +         using enableRemoteStreaming="true"
    +
    +      -->
    +    <requestParsers enableRemoteStreaming="true"
    +                    multipartUploadLimitInKB="2048000"
    +                    formdataUploadLimitInKB="2048"
    +                    addHttpRequestToContext="false"/>
    +
    +    <!-- HTTP Caching
    +
    +         Set HTTP caching related parameters (for proxy caches and clients).
    +
    +         The options below instruct Solr not to output any HTTP Caching
    +         related headers
    +      -->
    +    <httpCaching never304="true" />
    +    <!-- If you include a <cacheControl> directive, it will be used to
    +         generate a Cache-Control header (as well as an Expires header
    +         if the value contains "max-age=")
    +
    +         By default, no Cache-Control header is generated.
    +
    +         You can use the <cacheControl> option even if you have set
    +         never304="true"
    +      -->
    +    <!--
    +       <httpCaching never304="true" >
    +         <cacheControl>max-age=30, public</cacheControl>
    +       </httpCaching>
    +      -->
    +    <!-- To enable Solr to respond with automatically generated HTTP
    +         Caching headers, and to response to Cache Validation requests
    +         correctly, set the value of never304="false"
    +
    +         This will cause Solr to generate Last-Modified and ETag
    +         headers based on the properties of the Index.
    +
    +         The following options can also be specified to affect the
    +         values of these headers...
    +
    +         lastModFrom - the default value is "openTime" which means the
    +         Last-Modified value (and validation against If-Modified-Since
    +         requests) will all be relative to when the current Searcher
    +         was opened.  You can change it to lastModFrom="dirLastMod" if
    +         you want the value to exactly correspond to when the physical
    +         index was last modified.
    +
    +         etagSeed="..." is an option you can change to force the ETag
    +         header (and validation against If-None-Match requests) to be
    +         different even if the index has not changed (ie: when making
    +         significant changes to your config file)
    +
    +         (lastModifiedFrom and etagSeed are both ignored if you use
    +         the never304="true" option)
    +      -->
    +    <!--
    +       <httpCaching lastModifiedFrom="openTime"
    +                    etagSeed="Solr">
    +         <cacheControl>max-age=30, public</cacheControl>
    +       </httpCaching>
    +      -->
    +  </requestDispatcher>
    +
    +  <!-- Request Handlers
    +
    +       http://wiki.apache.org/solr/SolrRequestHandler
    +
    +       Incoming queries will be dispatched to a specific handler by name
    +       based on the path specified in the request.
    +
    +       Legacy behavior: If the request path uses "/select" but no Request
    +       Handler has that name, and if handleSelect="true" has been specified in
    +       the requestDispatcher, then the Request Handler is dispatched based on
    +       the qt parameter.  Handlers without a leading '/' are accessed this way
    +       like so: http://host/app/[core/]select?qt=name  If no qt is
    +       given, then the requestHandler that declares default="true" will be
    +       used or the one named "standard".
    +
    +       If a Request Handler is declared with startup="lazy", then it will
    +       not be initialized until the first request that uses it.
    +
    +    -->
    +  <!-- SearchHandler
    +
    +       http://wiki.apache.org/solr/SearchHandler
    +
    +       For processing Search Queries, the primary Request Handler
    +       provided with Solr is "SearchHandler" It delegates to a sequent
    +       of SearchComponents (see below) and supports distributed
    +       queries across multiple shards
    +    -->
    +  <requestHandler name="/select" class="solr.SearchHandler">
    +    <!-- default values for query parameters can be specified, these
    +         will be overridden by parameters in the request -->
    +    <lst name="defaults">
    +      <str name="echoParams">explicit</str>
    +      <int name="rows">10</int>
    +      <str name="df">content</str>
    +    </lst>
    +  </requestHandler>
    +
    +  <!-- Update Request Handler.
    +
    +       http://wiki.apache.org/solr/UpdateXmlMessages
    +
    +       The canonical Request Handler for Modifying the Index through
    +       commands specified using XML, JSON, CSV, or JAVABIN
    +
    +       Note: Since solr1.1 requestHandlers requires a valid content
    +       type header if posted in the body. For example, curl now
    +       requires: -H 'Content-type:text/xml; charset=utf-8'
    +
    +       To override the request content type and force a specific
    +       Content-type, use the request parameter:
    +         ?update.contentType=text/csv
    +
    +       This handler will pick a response format to match the input
    +       if the 'wt' parameter is not explicit
    +    -->
    +  <requestHandler name="/update" class="solr.UpdateRequestHandler">
    +  </requestHandler>
    +
    +  <!-- Admin Handlers
    +
    +       Admin Handlers - This will register all the standard admin
    +       RequestHandlers.
    +  -->
    +
    +
    +  <!-- Require for the erchef status endpoint to report the correct
    +       solr status -->
    +  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
    +    <lst name="invariants">
    +      <str name="q">solrpingquery</str>
    +    </lst>
    +    <lst name="defaults">
    +      <str name="echoParams">all</str>
    +    </lst>
    +  </requestHandler>
    +
    +  <!-- Response Writers
    +
    +       http://wiki.apache.org/solr/QueryResponseWriter
    +
    +       Request responses will be written using the writer specified by
    +       the 'wt' request parameter matching the name of a registered
    +       writer.
    +
    +       The "default" writer is the default and will be used if 'wt' is
    +       not specified in the request.
    +    -->
    +  <queryResponseWriter name="json" class="solr.JSONResponseWriter">
    +     <!-- For the purposes of the tutorial, JSON responses are written as
    +      plain text so that they are easy to read in *any* browser.
    +      If you expect a MIME type of "application/json" just remove this override.
    +     -->
    +    <str name="content-type">text/plain; charset=UTF-8</str>
    +  </queryResponseWriter>
    +</config>
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * cookbook_file[/var/opt/opscode/opscode-solr4/home/collection1/conf/schema.xml] action create
    - create new file /var/opt/opscode/opscode-solr4/home/collection1/conf/schema.xml
    - update content in file /var/opt/opscode/opscode-solr4/home/collection1/conf/schema.xml from none to 87a30a
    --- /var/opt/opscode/opscode-solr4/home/collection1/conf/schema.xml	2018-04-23 19:20:53.806461766 +0530
    +++ /var/opt/opscode/opscode-solr4/home/collection1/conf/.chef-schema20180423-3855-7s1oq0.xml	2018-04-23 19:20:53.806461766 +0530
    @@ -1 +1,195 @@
    +<?xml version="1.0" encoding="UTF-8" ?>
    +<!--
    + Licensed to the Apache Software Foundation (ASF) under one or more
    + contributor license agreements.  See the NOTICE file distributed with
    + this work for additional information regarding copyright ownership.
    + The ASF licenses this file to You under the Apache License, Version 2.0
    + (the "License"); you may not use this file except in compliance with
    + the License.  You may obtain a copy of the License at
    +
    +     http://www.apache.org/licenses/LICENSE-2.0
    +
    + Unless required by applicable law or agreed to in writing, software
    + distributed under the License is distributed on an "AS IS" BASIS,
    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + See the License for the specific language governing permissions and
    + limitations under the License.
    +-->
    +
    +<!--  
    + This is the Solr schema file. This file should be named "schema.xml" and
    + should be in the conf directory under the solr home
    + (i.e. ./solr/conf/schema.xml by default) 
    + or located where the classloader for the Solr webapp can find it.
    +
    + This example schema is the recommended starting point for users.
    + It should be kept correct and concise, usable out-of-the-box.
    +
    + For more information, on how to customize this file, please see
    + http://wiki.apache.org/solr/SchemaXml
    +
    + NOTE: this schema includes many optional features and should not
    + be used for benchmarking.
    +-->
    +
    +<schema name="chef" version="1.2">
    +  <!-- attribute "name" is the name of this schema and is only used for display purposes.
    +       Applications should change this to reflect the nature of the search collection.
    +       version="1.2" is Solr's version number for the schema syntax and semantics.  It should
    +       not normally be changed by applications.
    +       1.0: multiValued attribute did not exist, all fields are multiValued by nature
    +       1.1: multiValued attribute introduced, false by default 
    +       1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
    +     -->
    +
    +  <types>
    +    <!-- field type definitions. The "name" attribute is
    +       just a label to be used by field definitions.  The "class"
    +       attribute and any other attributes determine the real
    +       behavior of the fieldType.
    +         Class names starting with "solr" refer to java classes in the
    +       org.apache.solr.analysis package.
    +    -->
    +
    +    <!-- The StrField type is not analyzed, but indexed/stored verbatim.  
    +       - StrField and TextField support an optional compressThreshold which
    +       limits compression (if enabled in the derived fields) to values which
    +       exceed a certain size (in characters).
    +    -->
    +    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    +
    +    <!-- boolean type: "true" or "false" -->
    +    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
    +
    +    <!-- The optional sortMissingLast and sortMissingFirst attributes are
    +         currently supported on types that are sorted internally as strings.
    +       - If sortMissingLast="true", then a sort on this field will cause documents
    +         without the field to come after documents with the field,
    +         regardless of the requested sort order (asc or desc).
    +       - If sortMissingFirst="true", then a sort on this field will cause documents
    +         without the field to come before documents with the field,
    +         regardless of the requested sort order.
    +       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
    +         then default lucene sorting will be used which places docs without the
    +         field first in an ascending sort and last in a descending sort.
    +    -->    
    +
    +
    +    <!-- numeric field types that store and index the text
    +         value verbatim (and hence don't support range queries, since the
    +         lexicographic ordering isn't equal to the numeric ordering) -->
    +    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
    +    <fieldType name="long" class="solr.LongField" omitNorms="true"/>
    +    <fieldType name="float" class="solr.FloatField" omitNorms="true"/>
    +    <fieldType name="double" class="solr.DoubleField" omitNorms="true"/>
    +
    +
    +    <!-- Numeric field types that manipulate the value into
    +         a string value that isn't human-readable in its internal form,
    +         but with a lexicographic ordering the same as the numeric ordering,
    +         so that range queries work correctly. -->
    +    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    +    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
    +    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
    +    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>
    +
    +
    +    <fieldtype name="stuff" class="solr.TextField" omitNorms="true">
    +      <analyzer class="org.apache.lucene.analysis.core.WhitespaceAnalyzer"/>
    +    </fieldtype>
    +
    +    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
    +         is a more restricted form of the canonical representation of dateTime
    +         http://www.w3.org/TR/xmlschema-2/#dateTime    
    +         The trailing "Z" designates UTC time and is mandatory.
    +         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
    +         All other components are mandatory.
    +
    +         Expressions can also be used to denote calculations that should be
    +         performed relative to "NOW" to determine the value, ie...
    +
    +               NOW/HOUR
    +                  ... Round to the start of the current hour
    +               NOW-1DAY
    +                  ... Exactly 1 day prior to now
    +               NOW/DAY+6MONTHS+3DAYS
    +                  ... 6 months and 3 days in the future from the start of
    +                      the current day
    +                      
    +         Consult the DateField javadocs for more information.
    +      -->
    +    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
    +
    + </types>
    +
    + <fields>
    +   <!-- Valid attributes for fields:
    +     name: mandatory - the name for the field
    +     type: mandatory - the name of a previously defined type from the <types> section
    +     indexed: true if this field should be indexed (searchable or sortable)
    +     stored: true if this field should be retrievable
    +     compressed: [false] if this field should be stored using gzip compression
    +       (this will only apply if the field type is compressable; among
    +       the standard field types, only TextField and StrField are)
    +     multiValued: true if this field may contain multiple values per document
    +     omitNorms: (expert) set to true to omit the norms associated with
    +       this field (this disables length normalization and index-time
    +       boosting for the field, and saves some memory).  Only full-text
    +       fields or fields that need an index-time boost need norms.
    +     termVectors: [false] set to true to store the term vector for a given field.
    +       When using MoreLikeThis, fields used for similarity should be stored for 
    +       best performance.
    +     termPositions: Store position information with the term vector.  This will increase storage costs.
    +     termOffsets: Store offset information with the term vector. This will increase storage costs.
    +   -->
    +
    +   <field name="_version_" type="long" indexed="true" stored="true"/>
    +
    +   <field name="X_CHEF_id_CHEF_X" type="string" indexed="true" stored="true" required="true" /> 
    +   <field name="X_CHEF_database_CHEF_X" type="string" indexed="true" stored="true" required="true" /> 
    +   <field name="X_CHEF_type_CHEF_X" type="string" indexed="true" stored="true" required="true" /> 
    +   <field name="X_CHEF_timestamp_CHEF_X" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
    +
    +   <field name="content" type="stuff" indexed="true" stored="false" required="false"
    +          multiValued="true" termPositions="false" termOffsets="false" /> 
    +
    +   <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
    +        will be used if the name matches any of the patterns.
    +        RESTRICTION: the glob-like pattern in the name attribute must have
    +        a "*" only at the start or the end.
    +        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
    +        Longer patterns will be matched first.  if equal size patterns
    +        both match, the first appearing in the schema will be used.  -->
    +   <dynamicField name="*_i"  type="sint"    indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_s"  type="string"  indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_l"  type="slong"   indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_t"  type="string"  indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_b"  type="boolean" indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_f"  type="sfloat"  indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_d"  type="sdouble" indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*_dt" type="date"    indexed="true"  stored="false" multiValued="true"/>
    +   <dynamicField name="*"  type="string"  indexed="true"  stored="false" multiValued="true"/>
    +
    +   <!-- uncomment the following to ignore any fields that don't already match an existing 
    +        field name or dynamic field, rather than reporting them as an error. 
    +        alternately, change the type="ignored" to some other type e.g. "text" if you want 
    +        unknown fields indexed and/or stored by default --> 
    +        <!--dynamicField name="*" type="ignored" multiValued="true" /-->
    +
    +
    + </fields>
    +
    +
    + <!-- Field to use to determine and enforce document uniqueness. 
    +      Unless this field is marked with required="false", it will be a required field
    +   -->
    + <uniqueKey>X_CHEF_id_CHEF_X</uniqueKey>
    +
    + <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
    + <solrQueryParser defaultOperator="OR"/>
    +
    + <!-- Everything gets jammed into a basic text search field -->
    + <!-- <copyField source="*" dest="text"/> -->
    +
    +</schema>
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * template[/opt/opscode/embedded/service/opscode-solr4/jetty/etc/jetty.xml] action create
    - update content in file /opt/opscode/embedded/service/opscode-solr4/jetty/etc/jetty.xml from d4aedc to 8d06a7
    --- /opt/opscode/embedded/service/opscode-solr4/jetty/etc/jetty.xml	2018-02-13 22:33:42.000000000 +0530
    +++ /opt/opscode/embedded/service/opscode-solr4/jetty/etc/.chef-jetty20180423-3855-1g2jm3z.xml	2018-04-23 19:20:53.871464999 +0530
    @@ -28,30 +28,14 @@
         <!-- Set connectors                                              -->
         <!-- =========================================================== -->
     
    -  <!--
    -    <Call name="addConnector">
    -      <Arg>
    -          <New class="org.eclipse.jetty.server.nio.SelectChannelConnector">
    -            <Set name="host"><SystemProperty name="jetty.host" /></Set>
    -            <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
    -            <Set name="maxIdleTime">50000</Set>
    -            <Set name="Acceptors">2</Set>
    -            <Set name="statsOn">false</Set>
    -            <Set name="confidentialPort">8443</Set>
    -	    <Set name="lowResourcesConnections">5000</Set>
    -	    <Set name="lowResourcesMaxIdleTime">5000</Set>
    -          </New>
    -      </Arg>
    -    </Call>
    -  -->
    -
         <!-- This connector is currently being used for Solr because it
               showed better performance than nio.SelectChannelConnector
               for typical Solr requests.  -->
         <Call name="addConnector">
           <Arg>
               <New class="org.eclipse.jetty.server.bio.SocketConnector">
    -            <Set name="host"><SystemProperty name="jetty.host" /></Set>
    +            <Call class="java.lang.System" name="setProperty"> <Arg>log4j.configuration</Arg> <Arg>etc/log4j.properties</Arg> </Call>
    +            <Set name="host"><SystemProperty name="jetty.host" default="127.0.0.1"/></Set>
                 <Set name="port"><SystemProperty name="jetty.port" default="8983"/></Set>
                 <Set name="maxIdleTime">50000</Set>
                 <Set name="lowResourceMaxIdleTime">1500</Set>
    @@ -61,20 +45,20 @@
         </Call>
     
         <!-- if the connector below is uncommented, then jetty will also accept SSL
    -         connections on port 8984, using a self signed certificate and can 
    -         optionally require the client to authenticate with a certificate. 
    +         connections on port 8984, using a self signed certificate and can
    +         optionally require the client to authenticate with a certificate.
              (which can be the same as the server certificate_
    -         
    +
              # Run solr example with SSL on port 8984
              java -jar start.jar
    -         # 
    +         #
              # Run post.jar so that it trusts the server cert...
              java -Djavax.net.ssl.trustStore=../etc/solrtest.keystore -Durl=https://localhost:8984/solr/update -jar post.jar *.xml
     
              # Run solr example with SSL requiring client certs on port 8984
              java -Djetty.ssl.clientAuth=true -jar start.jar
              #
    -         # Run post.jar so that it trusts the server cert, 
    +         # Run post.jar so that it trusts the server cert,
              # and authenticates with a client cert
              java -Djavax.net.ssl.keyStorePassword=secret -Djavax.net.ssl.keyStore=../etc/solrtest.keystore -Djavax.net.ssl.trustStore=../etc/solrtest.keystore -Durl=https://localhost:8984/solr/update -jar post.jar *.xml
     
    @@ -98,7 +82,7 @@
         -->
     
         <!-- =========================================================== -->
    -    <!-- Set handler Collection Structure                            --> 
    +    <!-- Set handler Collection Structure                            -->
         <!-- =========================================================== -->
         <Set name="handler">
           <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
    @@ -117,11 +101,11 @@
             </Set>
           </New>
         </Set>
    -    
    +
         <!-- =========================================================== -->
         <!-- Configure Request Log                                       -->
         <!-- =========================================================== -->
    -    <!-- 
    +    <!--
         <Ref id="Handlers">
           <Call name="addHandler">
             <Arg>
    @@ -155,9 +139,6 @@
         <Set name="dumpAfterStart">false</Set>
         <Set name="dumpBeforeStop">false</Set>
     
    -
    -
    -
         <Call name="addBean">
           <Arg>
             <New id="DeploymentManager" class="org.eclipse.jetty.deploy.DeploymentManager">
    @@ -168,28 +149,10 @@
                 <Arg>org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern</Arg>
                 <Arg>.*/servlet-api-[^/]*\.jar$</Arg>
               </Call>
    -          
    -          
    -          <!-- Add a customize step to the deployment lifecycle -->
    -          <!-- uncomment and replace DebugBinding with your extended AppLifeCycle.Binding class 
    -          <Call name="insertLifeCycleNode">
    -            <Arg>deployed</Arg>
    -            <Arg>starting</Arg>
    -            <Arg>customise</Arg>
    -          </Call>
    -          <Call name="addLifeCycleBinding">
    -            <Arg>
    -              <New class="org.eclipse.jetty.deploy.bindings.DebugBinding">
    -                <Arg>customise</Arg>
    -              </New>
    -            </Arg>
    -          </Call>
    -          -->
    -          
             </New>
           </Arg>
         </Call>
    -    
    +
         <Ref id="DeploymentManager">
           <Call name="addAppProvider">
             <Arg>
    @@ -200,6 +163,5 @@
             </Arg>
           </Call>
         </Ref>
    -
     </Configure>
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * template[/opt/opscode/embedded/service/opscode-solr4/jetty/contexts/solr-jetty-context.xml] action create
    - update content in file /opt/opscode/embedded/service/opscode-solr4/jetty/contexts/solr-jetty-context.xml from e82298 to f504be
    --- /opt/opscode/embedded/service/opscode-solr4/jetty/contexts/solr-jetty-context.xml	2018-02-13 22:33:42.000000000 +0530
    +++ /opt/opscode/embedded/service/opscode-solr4/jetty/contexts/.chef-solr-jetty-context20180423-3855-tjl8w7.xml	2018-04-23 19:20:53.927467784 +0530
    @@ -4,6 +4,5 @@
       <Set name="contextPath"><SystemProperty name="hostContext" default="/solr"/></Set>
       <Set name="war"><SystemProperty name="jetty.home"/>/webapps/solr.war</Set>
       <Set name="defaultsDescriptor"><SystemProperty name="jetty.home"/>/etc/webdefault.xml</Set>
    -  <Set name="tempDirectory"><Property name="jetty.home" default="."/>/solr-webapp</Set>
     </Configure>
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * execute[chown -R opscode /opt/opscode/embedded/service/opscode-solr4/jetty] action run
    - execute chown -R opscode /opt/opscode/embedded/service/opscode-solr4/jetty
  * execute[restart_opscode-solr4_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/opscode-solr4/config] action create
    - create new file /var/log/opscode/opscode-solr4/config
    - update content in file /var/log/opscode/opscode-solr4/config from none to 5e16ac
    --- /var/log/opscode/opscode-solr4/config	2018-04-23 19:20:54.008471811 +0530
    +++ /var/log/opscode/opscode-solr4/.chef-config20180423-3855-1usnqzw	2018-04-23 19:20:54.008471811 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[opscode-solr4] action nothing (skipped due to action :nothing)
Recipe: private-chef::opscode-solr4
  * runit_service[opscode-solr4] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/opscode-solr4] action create
      - create new directory /opt/opscode/sv/opscode-solr4
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-solr4/run] action create
      - create new file /opt/opscode/sv/opscode-solr4/run
      - update content in file /opt/opscode/sv/opscode-solr4/run from none to de1d86
      --- /opt/opscode/sv/opscode-solr4/run	2018-04-23 19:20:54.127477729 +0530
      +++ /opt/opscode/sv/opscode-solr4/.chef-run20180423-3855-1hm2kqf	2018-04-23 19:20:54.127477729 +0530
      @@ -1 +1,7 @@
      +#!/bin/sh
      +exec 2>&1
      +ulimit -n 50000
      +
      +cd /opt/opscode/embedded/service/opscode-solr4/jetty
      +exec chpst -P -o 50000 -U opscode -u opscode /usr/bin/env PATH=/opt/opscode/embedded/bin:/opt/opscode/bin:/opt/opscode/embedded/jre/bin:$PATH JAVA_HOME=/opt/opscode/embedded/jre java -Xmx747M -Xms747M  -XX:NewSize=46M -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Xloggc:/var/log/opscode/opscode-solr4/gclog.log -verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -XX:+PrintTenuringDistribution -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=104857600 -Dsolr.data.dir=/var/opt/opscode/opscode-solr4/data -Dsolr.solr.home=/var/opt/opscode/opscode-solr4/home -Djava.io.tmpdir=/var/opt/opscode/opscode-solr4/ -server -jar '/opt/opscode/embedded/service/opscode-solr4/jetty/start.jar'
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-solr4/log] action create
      - create new directory /opt/opscode/sv/opscode-solr4/log
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-solr4/log/main] action create
      - create new directory /opt/opscode/sv/opscode-solr4/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/opscode-solr4] action create
      - create new directory /var/log/opscode-solr4
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-solr4/log/config] action create
      - create new file /opt/opscode/sv/opscode-solr4/log/config
      - update content in file /opt/opscode/sv/opscode-solr4/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/opscode-solr4/config] action create
      - create symlink at /var/log/opscode-solr4/config to /opt/opscode/sv/opscode-solr4/log/config
    * template[/opt/opscode/sv/opscode-solr4/log/run] action create
      - create new file /opt/opscode/sv/opscode-solr4/log/run
      - update content in file /opt/opscode/sv/opscode-solr4/log/run from none to 28bdfb
      --- /opt/opscode/sv/opscode-solr4/log/run	2018-04-23 19:20:54.297486183 +0530
      +++ /opt/opscode/sv/opscode-solr4/log/.chef-run20180423-3855-pfuax1	2018-04-23 19:20:54.297486183 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/opscode-solr4
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-solr4/env] action create
      - create new directory /opt/opscode/sv/opscode-solr4/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for opscode-solr4 service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-solr4/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-solr4/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/opscode-solr4/control] action create
      - create new directory /opt/opscode/sv/opscode-solr4/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/opscode-solr4] action create
      - create symlink at /opt/opscode/init/opscode-solr4 to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/opscode-solr4/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-solr4] action create (up to date)
      * template[/opt/opscode/sv/opscode-solr4/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-solr4/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-solr4/log/main] action create (up to date)
      * directory[/var/log/opscode-solr4] action create (up to date)
      * template[/opt/opscode/sv/opscode-solr4/log/config] action create (up to date)
      * link[/var/log/opscode-solr4/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-solr4/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-solr4/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-solr4 service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-solr4/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-solr4/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-solr4/control] action create (up to date)
      * link[/opt/opscode/init/opscode-solr4] action create (up to date)
      * file[/opt/opscode/sv/opscode-solr4/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-solr4] action create
        - create symlink at /opt/opscode/service/opscode-solr4 to /opt/opscode/sv/opscode-solr4
      * ruby_block[wait for opscode-solr4 service socket] action run
        - execute the ruby block wait for opscode-solr4 service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-solr4] action create (up to date)
      * template[/opt/opscode/sv/opscode-solr4/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-solr4/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-solr4/log/main] action create (up to date)
      * directory[/var/log/opscode-solr4] action create (up to date)
      * template[/opt/opscode/sv/opscode-solr4/log/config] action create (up to date)
      * link[/var/log/opscode-solr4/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-solr4/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-solr4/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-solr4 service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-solr4/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-solr4/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-solr4/control] action create (up to date)
      * link[/opt/opscode/init/opscode-solr4] action create (up to date)
      * file[/opt/opscode/sv/opscode-solr4/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-solr4] action create (up to date)
      * ruby_block[wait for opscode-solr4 service socket] action run
        - execute the ruby block wait for opscode-solr4 service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/opscode-solr4] action create (up to date)
    * ruby_block[wait for opscode-solr4 service socket] action run
      - execute the ruby block wait for opscode-solr4 service socket
  
  * file[/etc/opscode/logrotate.d/opscode-solr4] action delete (up to date)
Recipe: private-chef::opscode-expander
  * directory[/var/opt/opscode/opscode-expander] action create
    - create new directory /var/opt/opscode/opscode-expander
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-expander/etc] action create
    - create new directory /var/opt/opscode/opscode-expander/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/opscode-expander] action create
    - create new directory /var/log/opscode/opscode-expander
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * template[/var/opt/opscode/opscode-expander/etc/expander.rb] action create
    - create new file /var/opt/opscode/opscode-expander/etc/expander.rb
    - update content in file /var/opt/opscode/opscode-expander/etc/expander.rb from none to 2841ab
    --- /var/opt/opscode/opscode-expander/etc/expander.rb	2018-04-23 19:20:59.840761833 +0530
    +++ /var/opt/opscode/opscode-expander/etc/.chef-expander20180423-3855-1p3k1j2.rb	2018-04-23 19:20:59.840761833 +0530
    @@ -1 +1,12 @@
    +log_location       STDOUT
    +
    +solr_url  "http://127.0.0.1:8983"
    +amqp_host '127.0.0.1'
    +amqp_port 5672
    +amqp_user 'chef'
    +amqp_vhost '/chef'
    +ps_tag ''
    +
    +max_retries 1
    +retry_wait 1
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/opscode-expander/conf/opscode-expander.rb] action create
    - create symlink at /opt/opscode/embedded/service/opscode-expander/conf/opscode-expander.rb to /var/opt/opscode/opscode-expander/etc/expander.rb
  * execute[restart_opscode-expander_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/opscode-expander/config] action create
    - create new file /var/log/opscode/opscode-expander/config
    - update content in file /var/log/opscode/opscode-expander/config from none to 5e16ac
    --- /var/log/opscode/opscode-expander/config	2018-04-23 19:20:59.904765015 +0530
    +++ /var/log/opscode/opscode-expander/.chef-config20180423-3855-1ouvzd0	2018-04-23 19:20:59.904765015 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[opscode-expander] action nothing (skipped due to action :nothing)
Recipe: private-chef::opscode-expander
  * runit_service[opscode-expander] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/opscode-expander] action create
      - create new directory /opt/opscode/sv/opscode-expander
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-expander/run] action create
      - create new file /opt/opscode/sv/opscode-expander/run
      - update content in file /opt/opscode/sv/opscode-expander/run from none to 3d6cb2
      --- /opt/opscode/sv/opscode-expander/run	2018-04-23 19:21:00.099774713 +0530
      +++ /opt/opscode/sv/opscode-expander/.chef-run20180423-3855-1pa2xb	2018-04-23 19:21:00.099774713 +0530
      @@ -1 +1,11 @@
      +#!/bin/sh
      +exec 2>&1
      +
      +/opt/opscode/init/rabbitmq -w 100 start
      +
      +cd /opt/opscode/embedded/service/opscode-expander
      +export HOME=/opt/opscode/embedded/service/opscode-expander
      +export PATH=/opt/opscode/embedded/bin:$PATH
      +
      +exec veil-env-helper --pack -s rabbitmq.password -- chpst -P -U opscode -u opscode bundle exec --keep-file-descriptors /opt/opscode/embedded/service/opscode-expander/bin/opscode-expander-cluster -n 2 -c /var/opt/opscode/opscode-expander/etc/expander.rb
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-expander/log] action create
      - create new directory /opt/opscode/sv/opscode-expander/log
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-expander/log/main] action create
      - create new directory /opt/opscode/sv/opscode-expander/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/opscode-expander] action create
      - create new directory /var/log/opscode-expander
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-expander/log/config] action create
      - create new file /opt/opscode/sv/opscode-expander/log/config
      - update content in file /opt/opscode/sv/opscode-expander/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/opscode-expander/config] action create
      - create symlink at /var/log/opscode-expander/config to /opt/opscode/sv/opscode-expander/log/config
    * template[/opt/opscode/sv/opscode-expander/log/run] action create
      - create new file /opt/opscode/sv/opscode-expander/log/run
      - update content in file /opt/opscode/sv/opscode-expander/log/run from none to 6332f9
      --- /opt/opscode/sv/opscode-expander/log/run	2018-04-23 19:21:00.354787394 +0530
      +++ /opt/opscode/sv/opscode-expander/log/.chef-run20180423-3855-7vt430	2018-04-23 19:21:00.353787344 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/opscode-expander
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-expander/env] action create
      - create new directory /opt/opscode/sv/opscode-expander/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for opscode-expander service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-expander/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-expander/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/opscode-expander/control] action create
      - create new directory /opt/opscode/sv/opscode-expander/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/opscode-expander] action create
      - create symlink at /opt/opscode/init/opscode-expander to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/opscode-expander/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-expander] action create (up to date)
      * template[/opt/opscode/sv/opscode-expander/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-expander/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-expander/log/main] action create (up to date)
      * directory[/var/log/opscode-expander] action create (up to date)
      * template[/opt/opscode/sv/opscode-expander/log/config] action create (up to date)
      * link[/var/log/opscode-expander/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-expander/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-expander/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-expander service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-expander/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-expander/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-expander/control] action create (up to date)
      * link[/opt/opscode/init/opscode-expander] action create (up to date)
      * file[/opt/opscode/sv/opscode-expander/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-expander] action create
        - create symlink at /opt/opscode/service/opscode-expander to /opt/opscode/sv/opscode-expander
      * ruby_block[wait for opscode-expander service socket] action run
        - execute the ruby block wait for opscode-expander service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-expander] action create (up to date)
      * template[/opt/opscode/sv/opscode-expander/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-expander/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-expander/log/main] action create (up to date)
      * directory[/var/log/opscode-expander] action create (up to date)
      * template[/opt/opscode/sv/opscode-expander/log/config] action create (up to date)
      * link[/var/log/opscode-expander/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-expander/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-expander/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-expander service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-expander/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-expander/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-expander/control] action create (up to date)
      * link[/opt/opscode/init/opscode-expander] action create (up to date)
      * file[/opt/opscode/sv/opscode-expander/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-expander] action create (up to date)
      * ruby_block[wait for opscode-expander service socket] action run
        - execute the ruby block wait for opscode-expander service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/opscode-expander] action create (up to date)
    * ruby_block[wait for opscode-expander service socket] action run
      - execute the ruby block wait for opscode-expander service socket
  
Recipe: private-chef::bookshelf
  * template[/opt/opscode/embedded/bin/cookbook_migration.sh] action create
    - create new file /opt/opscode/embedded/bin/cookbook_migration.sh
    - update content in file /opt/opscode/embedded/bin/cookbook_migration.sh from none to 356769
    --- /opt/opscode/embedded/bin/cookbook_migration.sh	2018-04-23 19:21:04.709003915 +0530
    +++ /opt/opscode/embedded/bin/.chef-cookbook_migration20180423-3855-1bu5cnl.sh	2018-04-23 19:21:04.709003915 +0530
    @@ -1 +1,81 @@
    +#!/opt/opscode/embedded/bin/escript
    +
    +%% using compiled mode gives more informative error traces
    +-mode(compile).
    +
    +-define(MAGIC_NUMBER, <<16#b00c:16/integer>>).
    +-define(OLD_COOKBOOK_PATH, "/var/opt/opscode/opscode-chef/checksum/").
    +-define(BOOKSHELF_PATH, "/var/opt/opscode/bookshelf/").
    +-define(BOOKSHELF_DATA_PATH, "/var/opt/opscode/bookshelf/data/").
    +-define(NEW_BOOKSHELF_CONTAINER, ?BOOKSHELF_DATA_PATH ++ "bookshelf/").
    +
    +main(_) ->
    +    ok = create_destination(),
    +    ok = move_cookbooks().
    +
    +create_destination() ->
    +    create_directory_if_needed(?BOOKSHELF_PATH),
    +    create_directory_if_needed(?BOOKSHELF_DATA_PATH),
    +    create_directory_if_needed(?NEW_BOOKSHELF_CONTAINER).
    +
    +create_directory_if_needed(Path) ->
    +    DummyPath = filename:join(Path, "for-ensure"),
    +    case filelib:ensure_dir(DummyPath) of
    +        ok ->
    +            ok;
    +        Error ->
    +            erlang:error(Error)
    +    end.
    +
    +move_cookbooks() ->
    +    case file:list_dir(?OLD_COOKBOOK_PATH) of
    +        {ok, Orgs} ->
    +            ok = move_orgs(Orgs);
    +        _ ->
    +            % no files (e.g., a fresh install?), so nothing to migrate, just return
    +            ok
    +    end.
    +
    +move_orgs([]) ->
    +    ok;
    +move_orgs([Org|Rest]) ->
    +    Path = ?OLD_COOKBOOK_PATH ++ Org,
    +    {ok, Dirs} = file:list_dir(Path),
    +    ok = move_dirs(Org, Dirs),
    +    ok = move_orgs(Rest).
    +
    +move_dirs(_, []) ->
    +    ok;
    +move_dirs(Org, [Dir|Rest]) ->
    +    Path = ?OLD_COOKBOOK_PATH ++ Org ++ "/" ++ Dir,
    +    {ok, Files} = file:list_dir(Path),
    +    ok = move_files(Org, Dir, Files),
    +    ok = move_dirs(Org, Rest).
    +
    +move_files(_, _, []) ->
    +    ok;
    +move_files(Org, Dir, [File|Rest]) ->
    +    OldPath = ?OLD_COOKBOOK_PATH ++ Org ++ "/" ++ Dir ++ "/" ++ File,
    +    NewPath = ?NEW_BOOKSHELF_CONTAINER ++ new_file_name(Org, File),
    +    update_header(OldPath, NewPath),
    +    ok = move_files(Org, Dir, Rest).
    +
    +new_file_name(Org, File) ->
    +    "organization-" ++ Org ++ "%2Fchecksum-" ++ File.
    +
    +update_header(OldPath, NewPath) ->
    +    case file:open(NewPath, [exclusive, write, binary]) of
    +        {ok, Fd} ->
    +            {ok, Data} = file:read_file(OldPath),
    +            Ctx0 = erlang:md5_init(),
    +            Ctx1 = erlang:md5_update(Ctx0, Data),
    +            Digest = erlang:md5_final(Ctx1),
    +            file:write(Fd, ?MAGIC_NUMBER),
    +            file:write(Fd, Digest),
    +            file:write(Fd, Data),
    +            file:close(Fd);
    +        {error, eexist} ->
    +            % Already done, just return ok
    +            ok
    +    end.
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * directory[/var/opt/opscode/bookshelf] action create
    - create new directory /var/opt/opscode/bookshelf
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/bookshelf] action create
    - create new directory /var/log/opscode/bookshelf
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/bookshelf/sasl] action create
    - create new directory /var/log/opscode/bookshelf/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/bookshelf/data] action create
    - create new directory /var/opt/opscode/bookshelf/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * execute[cookbook migration] action run
    - execute /opt/opscode/embedded/bin/cookbook_migration.sh
  * link[/opt/opscode/embedded/service/bookshelf/log] action create
    - create symlink at /opt/opscode/embedded/service/bookshelf/log to /var/log/opscode/bookshelf
  * template[/var/opt/opscode/bookshelf/sys.config] action create
    - create new file /var/opt/opscode/bookshelf/sys.config
    - update content in file /var/opt/opscode/bookshelf/sys.config from none to 893e05
    --- /var/opt/opscode/bookshelf/sys.config	2018-04-23 19:21:05.705053446 +0530
    +++ /var/opt/opscode/bookshelf/.chef-sys20180423-3855-ee291z.config	2018-04-23 19:21:05.705053446 +0530
    @@ -1 +1,91 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
    +%% ex: ts=4 sw=4 ft=erlang et
    +
    +[
    + {kernel, [{inet_dist_use_interface, {127,0,0,1}}]},
    + %% SASL config
    + {sasl, [
    +         {sasl_error_logger, {file, "/var/log/opscode/bookshelf/sasl-error.log"}},
    +         {errlog_type, error},
    +         {error_logger_mf_dir, "/var/log/opscode/bookshelf/sasl"},      % Log directory
    +         {error_logger_mf_maxbytes, 104857600},
    +         {error_logger_mf_maxfiles, 10}
    +        ]},
    + {lager, [
    +          %% What handlers to install with what arguments
    +          %% The defaults for the logfiles are to rotate the files when
    +          %% they reach 10Mb or at midnight, whichever comes first, and keep
    +          %% the last 5 rotations. See the lager README for a description of
    +          %% the time rotation format:
    +          %% https://github.com/basho/lager/blob/master/README.md#internal-log-rotation
    +          %%
    +          %% If you wish to disable rotation, you can either set the size to 0
    +          %% and the rotation time to "", or instead specify a 2-tuple that only
    +          %% consists of {Logfile, Level}.
    +          {handlers, [
    +              {lager_console_backend, [info, {lager_default_formatter, [ "[", severity, "] ", message, "\n"]}]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/bookshelf/error.log"},
    +                                    {level, error},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10}
    +                                   ]},
    +              {lager_file_backend, [
    +                                    {file, "/var/log/opscode/bookshelf/console.log"},
    +                                    {level, info},
    +                                    {size, 104857600},
    +                                    {date, "$D0"},
    +                                    {count, 10},
    +                                    %% Removes the logging source, since currently
    +                                    %% there's only one place in all of Bifrost that
    +                                    %% we log from.  Also removes the PID from
    +                                    %% the default message format.
    +                                    {formatter_config, [date, " ", time, " [", severity, "] ", message, "\n"]}
    +                                   ]}
    +              ]},
    +
    +          %% Whether to write a crash log, and where.
    +          %% Commented/omitted/undefined means no crash logger.
    +          {crash_log, "/var/log/opscode/bookshelf/crash.log"},
    +
    +          %% Maximum size in bytes of events in the crash log - defaults to 65536
    +          {crash_log_msg_size, 65536},
    +
    +          %% Maximum size of the crash log in bytes, before its rotated, set
    +          %% to 0 to disable rotation - default is 0
    +          {crash_log_size, 104857600},
    +
    +          %% What time to rotate the crash log - default is no time
    +          %% rotation. See the lager README for a description of this format:
    +          %% https://github.com/basho/lager/blob/master/README.org
    +          {crash_log_date, "$D0"},
    +
    +          %% Number of rotated crash logs to keep, 0 means keep only the
    +          %% current one - default is 0
    +          {crash_log_count, 10},
    +
    +          %% Whether to redirect error_logger messages into lager - defaults to true
    +          {error_logger_redirect, true},
    +
    +          %% Bump up the "high-water mark" (default 50), which is the
    +          %% number of messages per second allowed to come from
    +          %% error_logger.  This is the same as used by
    +          %% opscode-chef-mover, FWIW.
    +          {error_logger_hwm, 1000}
    +        ]},
    + {chef_secrets, [{provider, chef_secrets_fd}]},
    + {bookshelf, [{ip, "127.0.0.1"},
    +              {port, 4321},
    +              {storage_type, filesystem},
    +              {disk_store, "/var/opt/opscode/bookshelf/data"},
    +              {stream_download, true},
    +              {log_dir, "/var/log/opscode/bookshelf"}
    +             ]},
    + {webmachine, [
    +          {log_handlers, [
    +                         ]
    +          }]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/bookshelf/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/bookshelf/sys.config
    - create symlink at /opt/opscode/embedded/service/bookshelf/sys.config to /var/opt/opscode/bookshelf/sys.config
  * template[/var/opt/opscode/bookshelf/vm.args] action create
    - create new file /var/opt/opscode/bookshelf/vm.args
    - update content in file /var/opt/opscode/bookshelf/vm.args from none to cb0e8c
    --- /var/opt/opscode/bookshelf/vm.args	2018-04-23 19:21:05.754055883 +0530
    +++ /var/opt/opscode/bookshelf/.chef-vm20180423-3855-1fde7d7.args	2018-04-23 19:21:05.754055883 +0530
    @@ -1 +1,37 @@
    +## Name of the node
    +-name bookshelf@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie bookshelf
    +
    +## Add a directory to the code path where hot patches can be
    +## placed and easily accessed.
    +-pa lib/patches
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll
    ++K true
    +
    +## Increase maximum IO ports from default (65536) to 196608
    +## This change helps bookshelf cope with bursty
    +## concurrent load
    +## Once we are on R16, we should use: +Q 196608
    +-env ERL_MAX_PORTS 196608
    +
    +## Increase maximum concurrent Erlang process from
    +## default (262144) to 524288
    +## NOTE: This value MUST be a power of 2
    +## N band (N - 1) == 0
    ++P 524288
    +
    +## Increase async worker thread pool size from
    +## R15 default of 0 to R16 default of 10.
    +## Async workers prevents IO from blocking the
    +## schedulers and increases performance of IO-heavy
    +## apps, like bookshelf.
    ++A 10
    +
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/bookshelf/vm.args] action create
    - create symlink at /opt/opscode/embedded/service/bookshelf/vm.args to /var/opt/opscode/bookshelf/vm.args
  * execute[restart_bookshelf_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/bookshelf/config] action create
    - create new file /var/log/opscode/bookshelf/config
    - update content in file /var/log/opscode/bookshelf/config from none to 5e16ac
    --- /var/log/opscode/bookshelf/config	2018-04-23 19:21:05.802058269 +0530
    +++ /var/log/opscode/bookshelf/.chef-config20180423-3855-4yj9kc	2018-04-23 19:21:05.802058269 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[bookshelf] action nothing (skipped due to action :nothing)
Recipe: private-chef::bookshelf
  * runit_service[bookshelf] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/bookshelf] action create
      - create new directory /opt/opscode/sv/bookshelf
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/bookshelf/run] action create
      - create new file /opt/opscode/sv/bookshelf/run
      - update content in file /opt/opscode/sv/bookshelf/run from none to 35efaa
      --- /opt/opscode/sv/bookshelf/run	2018-04-23 19:21:05.896062944 +0530
      +++ /opt/opscode/sv/bookshelf/.chef-run20180423-3855-tibafd	2018-04-23 19:21:05.896062944 +0530
      @@ -1 +1,6 @@
      +#!/bin/sh
      +exec 2>&1
      +
      +export PATH=/opt/opscode/embedded/bin:$PATH
      +exec veil-env-helper --use-file -s bookshelf.access_key_id -s bookshelf.secret_access_key -o bookshelf.sql_password -- chpst -P -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/bookshelf /opt/opscode/embedded/service/bookshelf/bin/bookshelf foreground
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/bookshelf/log] action create
      - create new directory /opt/opscode/sv/bookshelf/log
      - restore selinux security context
    * directory[/opt/opscode/sv/bookshelf/log/main] action create
      - create new directory /opt/opscode/sv/bookshelf/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/bookshelf] action create
      - create new directory /var/log/bookshelf
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/bookshelf/log/config] action create
      - create new file /opt/opscode/sv/bookshelf/log/config
      - update content in file /opt/opscode/sv/bookshelf/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/bookshelf/config] action create
      - create symlink at /var/log/bookshelf/config to /opt/opscode/sv/bookshelf/log/config
    * template[/opt/opscode/sv/bookshelf/log/run] action create
      - create new file /opt/opscode/sv/bookshelf/log/run
      - update content in file /opt/opscode/sv/bookshelf/log/run from none to f7dfd6
      --- /opt/opscode/sv/bookshelf/log/run	2018-04-23 19:21:06.065071348 +0530
      +++ /opt/opscode/sv/bookshelf/log/.chef-run20180423-3855-1tlfcfy	2018-04-23 19:21:06.065071348 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/bookshelf
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/bookshelf/env] action create
      - create new directory /opt/opscode/sv/bookshelf/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/bookshelf/control] action create
      - create new directory /opt/opscode/sv/bookshelf/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/bookshelf] action create
      - create symlink at /opt/opscode/init/bookshelf to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/bookshelf] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/run] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/log] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/log/main] action create (up to date)
      * directory[/var/log/bookshelf] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/log/config] action create (up to date)
      * link[/var/log/bookshelf/config] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/log/run] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/bookshelf/control] action create (up to date)
      * link[/opt/opscode/init/bookshelf] action create (up to date)
      * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/bookshelf] action create
        - create symlink at /opt/opscode/service/bookshelf to /opt/opscode/sv/bookshelf
      * ruby_block[wait for bookshelf service socket] action run
        - execute the ruby block wait for bookshelf service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/bookshelf] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/run] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/log] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/log/main] action create (up to date)
      * directory[/var/log/bookshelf] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/log/config] action create (up to date)
      * link[/var/log/bookshelf/config] action create (up to date)
      * template[/opt/opscode/sv/bookshelf/log/run] action create (up to date)
      * directory[/opt/opscode/sv/bookshelf/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for bookshelf service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/bookshelf/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/bookshelf/control] action create (up to date)
      * link[/opt/opscode/init/bookshelf] action create (up to date)
      * file[/opt/opscode/sv/bookshelf/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/bookshelf] action create (up to date)
      * ruby_block[wait for bookshelf service socket] action run
        - execute the ruby block wait for bookshelf service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/bookshelf] action create (up to date)
    * ruby_block[wait for bookshelf service socket] action run
      - execute the ruby block wait for bookshelf service socket
  
Recipe: private-chef::opscode-erchef
  * directory[/var/opt/opscode/opscode-erchef] action create
    - create new directory /var/opt/opscode/opscode-erchef
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/opscode-erchef] action create
    - create new directory /var/log/opscode/opscode-erchef
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/opscode-erchef/sasl] action create
    - create new directory /var/log/opscode/opscode-erchef/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/opscode-erchef/log] action create
    - create symlink at /opt/opscode/embedded/service/opscode-erchef/log to /var/log/opscode/opscode-erchef
  * template[/var/opt/opscode/opscode-erchef/sys.config] action create
    - create new file /var/opt/opscode/opscode-erchef/sys.config
    - update content in file /var/opt/opscode/opscode-erchef/sys.config from none to 05723d
    --- /var/opt/opscode/opscode-erchef/sys.config	2018-04-23 19:21:11.310332178 +0530
    +++ /var/opt/opscode/opscode-erchef/.chef-sys20180423-3855-bd5mu.config	2018-04-23 19:21:11.310332178 +0530
    @@ -1 +1,305 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
    +%% ex: ts=4 sw=4 ft=eruby.erlang et
    +[
    +    {kernel, [{inet_dist_use_interface, {127,0,0,1}}]},
    +    %% SASL config
    +
    +    {sasl, [
    +        {sasl_error_logger, {file, "/var/log/opscode/opscode-erchef/sasl-error.log"}},
    +        {errlog_type, error},
    +        {error_logger_mf_dir, "/var/log/opscode/opscode-erchef/sasl"},      % Log directory
    +        {error_logger_mf_maxbytes, 104857600},
    +        {error_logger_mf_maxfiles, 10}
    +    ]},
    +
    +    {lager, [
    +        {handlers, [
    +            {lager_console_backend, [info, {lager_default_formatter, [ "[", severity, "] ", message, "\n"]}]},
    +            {lager_file_backend, [
    +                {file, "/var/log/opscode/opscode-erchef/erchef.log"},
    +                {level, info},
    +                {size, 104857600},
    +                {date, "$D0"},
    +                {count, 10},
    +                {formatter_config, [date, " ", time, " [", severity, "] ", message, "\n"]}
    +            ]}
    +        ]},
    +
    +        %% Whether to write a crash log, and where.
    +        %% Commented/omitted/undefined means no crash logger.
    +        {crash_log, "/var/log/opscode/opscode-erchef/crash.log"},
    +
    +        %% Maximum size in bytes of events in the crash log - defaults to 65536
    +        {crash_log_msg_size, 65536},
    +
    +        %% Maximum size of the crash log in bytes, before its rotated, set
    +        %% to 0 to disable rotation - default is 0
    +        {crash_log_size, 104857600},
    +
    +        %% What time to rotate the crash log - default is no time
    +        %% rotation. See the lager README for a description of this format:
    +        %% https://github.com/basho/lager/blob/master/README.org
    +        {crash_log_date, "$D0"},
    +
    +        %% Number of rotated crash logs to keep, 0 means keep only the
    +        %% current one - default is 0
    +        {crash_log_count, 10},
    +
    +        %% Whether to redirect error_logger messages into lager - defaults to true
    +        {error_logger_redirect, true},
    +
    +        %% Bump up the "high-water mark" (default 50), which is the
    +        %% number of messages per second allowed to come from
    +        %% error_logger.  This is the same as used by
    +        %% opscode-chef-mover, FWIW.
    +        {error_logger_hwm, 1000}
    +    ]},
    +
    +    {prometheus, [{collectors, [default,
    +                                chef_pgsql_collector,
    +                                chef_wm_pooler_collector]}]},
    +
    +    {chef_secrets, [{provider, chef_secrets_fd}]},
    +
    +    {oc_chef_wm, [
    +        {ip_mode, [ ipv4 ] },
    +        {api_version, "12.0.0"},
    +        {server_flavor, "cs"},
    +
    +        {default_orgname, undefined },
    +
    +        {ip, "127.0.0.1"},
    +        {port, 8000},
    +        {reqid_header_name, "X-Request-Id"},
    +        {auth_skew, 900},
    +        %% currently only used by the search endpoint to bound
    +        %% how many nodes are deserialized at a time in
    +        %% preparing a response.
    +        {bulk_fetch_batch_size, 5},
    +        {superusers, [<<"pivotal">>]},
    +        %% metrics config
    +        {root_metric_key, "chefAPI"},
    +
    +        {authz_timeout, 2000},
    +        {authz_fanout, 20},
    +
    +        {reindex_batch_size, 10},
    +
    +        {enable_actions, true},
    +        {ldap, []},
    +        %% these are used for reporting on license status on the
    +        %% license endpoint; it would have been nice to give these
    +        %% their own logical section, but erlang requires these to
    +        %% be part of a loaded application
    +        {node_license, 25},
    +        {upgrade_url, <<"http://www.chef.io/contact/on-premises-simple">>},
    +        {actions_host, "127.0.0.1"},
    +        {actions_port, 5672 },
    +        {actions_user, <<"actions">>},
    +        {actions_vhost, <<"/analytics">>},
    +        {actions_exchange, <<"actions">>},
    +        {actions_fqdn, <<"localhost">>},
    +        {max_request_size, 1000000},
    +        {server_version, ""},
    +        {health_ping_timeout, 400},
    +        {health_ping_modules, [
    +            oc_chef_authz,
    +            oc_chef_action,
    +            chef_index,
    +            chef_sql,
    +            chef_solr
    +        ]},
    +        {base_resource_url, host_header},
    +        {bulk_fetch_batch_size, 5},
    +        {strict_search_result_acls, false},
    +
    +        {rabbitmq, [
    +            {management,[
    +                {user, "rabbitmgmt"},
    +                {port, 15672},
    +                % rabbitmq management http connection pool
    +                {rabbitmq_actions_management_service, [
    +                    {root_url, "https://127.0.0.1:15672/api"},
    +                    {timeout, 30000},
    +                    {init_count, 25},
    +                    {max_count, 100},
    +                    {cull_interval, {60, sec}},
    +                    {max_age, {70, sec}},
    +                    {max_connection_duration, {70, sec}},
    +
    +                    {ibrowse_options, [
    +                        {connect_timeout, 10000}
    +                    ]}
    +                ]}
    +            ]},
    +            {monitoring, [
    +                {queue_length_monitor_enabled, true},
    +                {queue_length_monitor_vhost, "/analytics"},
    +                {queue_length_monitor_queue, "alaska"},
    +                {queue_length_monitor_millis, 30000},
    +                {queue_length_monitor_timeout_millis, 5000},
    +                {drop_on_full_capacity, true},
    +                {prevent_erchef_startup_on_full_capacity, false},
    +                {queue_at_capacity_affects_overall_status, false}
    +            ]}
    +        ]}
    +    ]},
    +
    +    {chef_authn, [
    +        {secrets_module, {chef_secrets, get, [{default, [<<"chef-server">>, <<"webui_pub_key">>]}]}},
    +        {keygen_cache_size, 10},
    +        {keygen_start_size, 0},
    +        {keygen_timeout, 1000},
    +        {keygen_size, 2048}
    +    ]},
    +
    +    {oc_chef_authz, [
    +        {authz_root_url, "http://127.0.0.1:9463" },
    +        {authz_service, [
    +            {root_url, "http://127.0.0.1:9463" },
    +            {timeout, 2000},
    +            {init_count, 25},
    +            {max_count, 100},
    +            {queue_max, 50},
    +            {cull_interval, {1, min}},
    +            {max_age, {70, sec}},
    +            {max_connection_duration, {70, sec}},
    +            {ibrowse_options, [{connect_timeout, 5000}]}
    +        ]},
    +        {cleanup_batch_size, 0}
    +    ]},
    +
    +    {chef_db, [
    +        {bulk_fetch_batch_size, 5}
    +    ]},
    +
    +    {chef_index, [
    +        {ip_mode, [ ipv4 ] },
    +        {rabbitmq_host, "127.0.0.1"},
    +        {rabbitmq_port, 5672 },
    +        {rabbitmq_user, <<"chef">>},
    +        {rabbitmq_vhost, <<"/chef">>},
    +        {rabbitmq_exchange, <<"">>},
    +        {search_provider, solr},
    +        {search_queue_mode, rabbitmq},
    +        {search_batch_max_size, 5000000},
    +        {search_batch_max_wait, 10},
    +        {reindex_sleep_min_ms, 500},
    +        {reindex_sleep_max_ms, 2000},
    +        {reindex_item_retries, 3},
    +        {solr_elasticsearch_major_version, 0},
    +        {solr_service, [
    +            {root_url, "http://127.0.0.1:8983/solr"},
    +            {timeout, 30000},
    +            {init_count, 25},
    +            {max_count, 100},
    +            {cull_interval, {1, min}},
    +            {max_age, {70, sec}},
    +            {max_connection_duration, {70,sec}},
    +            {ibrowse_options, [{connect_timeout, 10000}]}
    +        ]},
    +        {rabbitmq_index_management_service, [
    +            {enabled, true},
    +            {user, "rabbitmgmt"},
    +            {root_url, "https://127.0.0.1:15672/api"},
    +            {timeout, 30000},
    +            {init_count, 25},
    +            {max_count, 100},
    +            {cull_interval, {60, sec}},
    +            {max_age, {70, sec}},
    +            {max_connection_duration, {70, sec}},
    +
    +            {ibrowse_options, [
    +                {connect_timeout, 10000}
    +            ]}
    +        ]}
    +    ]},
    +
    +    {chef_objects, [
    +        {s3_url, "https://localhost"},
    +        {s3_external_url, host_header},
    +        {s3_platform_bucket_name, "bookshelf"},
    +        {s3_url_ttl, 28800},
    +        {s3_url_expiry_window_size, off},
    +        {s3_parallel_ops_timeout, 5000},
    +        {s3_parallel_ops_fanout, 20},
    +        {depsolver_timeout, 5000},
    +        {depsolver_pooler_timeout, 0}
    +    ]},
    +
    +
    +    {stats_hero, [
    +        {udp_socket_pool_size, 20 },
    +        {protocol, estatsd},
    +        {estatsd_host, "127.0.0.1"},
    +        {estatsd_port, 9466}
    +    ]},
    +
    +    {opscoderl_httpc, [
    +        {pooler_timeout, 0}
    +    ]},
    +
    +    {sqerl, [
    +        {db_driver_mod, sqerl_pgsql_client},
    +        {config_cb, {chef_secrets_sqerl, config, [{<<"opscode_erchef">>, <<"sql_password">>}]}},
    +        {ip_mode, [ ipv4 ] },
    +        %% Database connection parameters
    +        {db_host, "127.0.0.1"},
    +        {db_port, 5432},
    +        {db_user, "opscode_chef"},
    +        {db_name, "opscode_chef" },
    +        {idle_check, 10000},
    +        {pooler_timeout, 2000},
    +        {db_timeout, 5000},
    +        {prepared_statements, {oc_chef_sql, statements, [pgsql]}},
    +        {column_transforms, [
    +            {<<"created_at">>, {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}},
    +            {<<"updated_at">>, {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}}
    +        ]}
    +    ]},
    +
    +    {webmachine, [
    +        {log_handlers, [
    +            {oc_wm_request_logger, [
    +                {file, "/var/log/opscode/opscode-erchef/requests.log"},
    +                {file_size, 100},  %% Size in MB
    +                {files, 10},
    +                {annotations, [req_id, org_name, msg, darklaunch, perf_stats, user, req_api_version]}
    +            ]}
    +        ]}
    +    ]},
    +
    +    {ibrowse, [
    +        {default_max_sessions, 256},
    +        {default_max_pipeline_size, 1}
    +    ]},
    +
    +    {pooler, [
    +        {pools, [
    +            [
    +                {name, sqerl},
    +                {max_count, 20},
    +                {init_count, 20},
    +                {start_mfa, {sqerl_client, start_link, []}},
    +                {queue_max, 20}
    +            ],
    +            [
    +                {name, chef_depsolver},
    +                {max_count, 5},
    +                {init_count, 5},
    +                {queue_max, 50},
    +                {start_mfa, {chef_depsolver_worker, start_link, []}}
    +            ]
    +        ]
    +    },
    +
    +    {metrics_module, folsom_metrics}
    +]}
    +
    +    ,
    +    {ssl, [
    +        {session_cb, noop_session_cache}
    +    ]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * execute[remove_erchef_siz_files] action run
    - execute rm -f *.siz
  * execute[remove_erchef_siz_files] action nothing (skipped due to action :nothing)
  * link[/opt/opscode/embedded/service/opscode-erchef/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/opscode-erchef/sys.config
    - create symlink at /opt/opscode/embedded/service/opscode-erchef/sys.config to /var/opt/opscode/opscode-erchef/sys.config
  * template[/var/opt/opscode/opscode-erchef/vm.args] action create
    - create new file /var/opt/opscode/opscode-erchef/vm.args
    - update content in file /var/opt/opscode/opscode-erchef/vm.args from none to 85814e
    --- /var/opt/opscode/opscode-erchef/vm.args	2018-04-23 19:21:11.411337201 +0530
    +++ /var/opt/opscode/opscode-erchef/.chef-vm20180423-3855-11silnq.args	2018-04-23 19:21:11.410337151 +0530
    @@ -1 +1,33 @@
    +## Name of the node
    +-name erchef@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie erchef
    +
    +## Enable SMP even on single-core machines
    +## The Erchef keygen cache feature uses
    +## enif_send, which does not work on single-
    +## core machines unless SMP is enabled.
    +-smp enable
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll and a few async threads
    ++K true
    ++A 5
    +
    +## Increase number of concurrent ports/sockets
    +-env ERL_MAX_PORTS 4096
    +
    +## Add directory for hot patches to the front of the code path
    +-pa lib/patches
    +
    +## Tweak GC to run more often
    +-env ERL_FULLSWEEP_AFTER 10
    +
    +## Increase logfile size to 10M
    +-env RUN_ERL_LOG_MAXSIZE 10000000
    +
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/opscode-erchef/vm.args] action create
    - create symlink at /opt/opscode/embedded/service/opscode-erchef/vm.args to /var/opt/opscode/opscode-erchef/vm.args
  * execute[restart_opscode-erchef_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/opscode-erchef/config] action create
    - create new file /var/log/opscode/opscode-erchef/config
    - update content in file /var/log/opscode/opscode-erchef/config from none to 5e16ac
    --- /var/log/opscode/opscode-erchef/config	2018-04-23 19:21:11.482340732 +0530
    +++ /var/log/opscode/opscode-erchef/.chef-config20180423-3855-ny6du0	2018-04-23 19:21:11.482340732 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[opscode-erchef] action nothing (skipped due to action :nothing)
Recipe: private-chef::opscode-erchef
  * runit_service[opscode-erchef] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/opscode-erchef] action create
      - create new directory /opt/opscode/sv/opscode-erchef
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-erchef/run] action create
      - create new file /opt/opscode/sv/opscode-erchef/run
      - update content in file /opt/opscode/sv/opscode-erchef/run from none to cb6ebc
      --- /opt/opscode/sv/opscode-erchef/run	2018-04-23 19:21:11.616347396 +0530
      +++ /opt/opscode/sv/opscode-erchef/.chef-run20180423-3855-17dadxn	2018-04-23 19:21:11.615347346 +0530
      @@ -1 +1,8 @@
      +#!/bin/sh
      +exec 2>&1
      +
      +/opt/opscode/init/rabbitmq -w 100 start
      +
      +export PATH=/opt/opscode/embedded/bin:$PATH
      +exec veil-env-helper --use-file -s chef-server.webui_pub_key -s opscode_erchef.sql_password -s bookshelf.access_key_id -s bookshelf.secret_access_key -s rabbitmq.password -s rabbitmq.management_password -s rabbitmq.actions_password -s oc_bifrost.superuser_id -o data_collector.token -o ldap.bind_password -- chpst -P  -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/opscode-erchef  /opt/opscode/embedded/service/opscode-erchef/bin/oc_erchef foreground
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-erchef/log] action create
      - create new directory /opt/opscode/sv/opscode-erchef/log
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-erchef/log/main] action create
      - create new directory /opt/opscode/sv/opscode-erchef/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/opscode-erchef] action create
      - create new directory /var/log/opscode-erchef
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-erchef/log/config] action create
      - create new file /opt/opscode/sv/opscode-erchef/log/config
      - update content in file /opt/opscode/sv/opscode-erchef/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/opscode-erchef/config] action create
      - create symlink at /var/log/opscode-erchef/config to /opt/opscode/sv/opscode-erchef/log/config
    * template[/opt/opscode/sv/opscode-erchef/log/run] action create
      - create new file /opt/opscode/sv/opscode-erchef/log/run
      - update content in file /opt/opscode/sv/opscode-erchef/log/run from none to f6e10e
      --- /opt/opscode/sv/opscode-erchef/log/run	2018-04-23 19:21:11.826357839 +0530
      +++ /opt/opscode/sv/opscode-erchef/log/.chef-run20180423-3855-w2jatk	2018-04-23 19:21:11.826357839 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/opscode-erchef
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-erchef/env] action create
      - create new directory /opt/opscode/sv/opscode-erchef/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/opscode-erchef/control] action create
      - create new directory /opt/opscode/sv/opscode-erchef/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/opscode-erchef] action create
      - create symlink at /opt/opscode/init/opscode-erchef to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-erchef] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/log/main] action create (up to date)
      * directory[/var/log/opscode-erchef] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/log/config] action create (up to date)
      * link[/var/log/opscode-erchef/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-erchef/control] action create (up to date)
      * link[/opt/opscode/init/opscode-erchef] action create (up to date)
      * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-erchef] action create
        - create symlink at /opt/opscode/service/opscode-erchef to /opt/opscode/sv/opscode-erchef
      * ruby_block[wait for opscode-erchef service socket] action run
        - execute the ruby block wait for opscode-erchef service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-erchef] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/log/main] action create (up to date)
      * directory[/var/log/opscode-erchef] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/log/config] action create (up to date)
      * link[/var/log/opscode-erchef/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-erchef/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-erchef/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-erchef service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-erchef/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-erchef/control] action create (up to date)
      * link[/opt/opscode/init/opscode-erchef] action create (up to date)
      * file[/opt/opscode/sv/opscode-erchef/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-erchef] action create (up to date)
      * ruby_block[wait for opscode-erchef service socket] action run
        - execute the ruby block wait for opscode-erchef service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/opscode-erchef] action create (up to date)
    * ruby_block[wait for opscode-erchef service socket] action run
      - execute the ruby block wait for opscode-erchef service socket
  
Recipe: private-chef::bootstrap
  * execute[/opt/opscode/bin/chef-server-ctl start postgresql] action run
    - execute /opt/opscode/bin/chef-server-ctl start postgresql
  * execute[/opt/opscode/bin/chef-server-ctl start oc_bifrost] action run
    - execute /opt/opscode/bin/chef-server-ctl start oc_bifrost
  * ruby_block[bootstrap-chef-server-data] action run
    - execute the ruby block bootstrap-chef-server-data
  * file[/var/opt/opscode/bootstrapped] action create
    - create new file /var/opt/opscode/bootstrapped
    - update content in file /var/opt/opscode/bootstrapped from none to 6d3437
    --- /var/opt/opscode/bootstrapped	2018-04-23 19:21:24.668996463 +0530
    +++ /var/opt/opscode/.chef-bootstrapped20180423-3855-14qcq1r	2018-04-23 19:21:24.668996463 +0530
    @@ -1 +1,2 @@
    +bootstrapped on 2018-04-23T19:19:56+05:30 (you punk)
    - change mode from '' to '0600'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::opscode-chef-mover
  * directory[/var/opt/opscode/opscode-chef-mover] action create
    - create new directory /var/opt/opscode/opscode-chef-mover
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-chef-mover/etc] action create
    - create new directory /var/opt/opscode/opscode-chef-mover/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/opscode-chef-mover/data] action create
    - create new directory /var/opt/opscode/opscode-chef-mover/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/opscode-chef-mover] action create
    - create new directory /var/log/opscode/opscode-chef-mover
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/opscode-chef-mover/sasl] action create
    - create new directory /var/log/opscode/opscode-chef-mover/sasl
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/opscode-chef-mover/log] action create
    - create symlink at /opt/opscode/embedded/service/opscode-chef-mover/log to /var/log/opscode/opscode-chef-mover
  * template[/var/opt/opscode/opscode-chef-mover/sys.config] action create
    - create new file /var/opt/opscode/opscode-chef-mover/sys.config
    - update content in file /var/opt/opscode/opscode-chef-mover/sys.config from none to 90d4b8
    --- /var/opt/opscode/opscode-chef-mover/sys.config	2018-04-23 19:21:24.918008845 +0530
    +++ /var/opt/opscode/opscode-chef-mover/.chef-sys20180423-3855-14plgfl.config	2018-04-23 19:21:24.917008796 +0530
    @@ -1 +1,166 @@
    +%% -*- mode: erlang -*-
    +%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
    +%% ex: ts=4 sw=4 ft=erlang et
    +[
    + {kernel, [{start_pg2, true},
    +           {inet_dist_use_interface, {127,0,0,1}}
    +          ]},
    + %% SASL config
    + {sasl, [
    +         {sasl_error_logger, {file, "/var/log/opscode/opscode-chef-mover/sasl-error.log"}},
    +         {errlog_type, error},
    +         {error_logger_mf_dir, "/var/log/opscode/opscode-chef-mover/sasl"},      % Log directory
    +         {error_logger_mf_maxbytes, 1073741824},
    +         {error_logger_mf_maxfiles, 10}
    +        ]},
    + %% Lager Config
    +  {lager, [
    +          %% https://github.com/basho/lager/blob/master/README.org
    +          {handlers, [
    +                      {lager_console_backend,
    +                       [error,
    +                        {lager_default_formatter,
    +                         [time, " [", severity, "] ",
    +                          {error_type, [error_type, " "], ""},
    +                          {org_name, [org_name, " (", org_id, "): "], ""}, message, "\n"]}]},
    +
    +                      {lager_file_backend, [
    +                                            [{"/var/log/opscode/opscode-chef-mover/error.log", error, 1073741824, "$D0", 10},
    +                                             {lager_default_formatter,
    +                                              [date, " ", time, " [", severity, "] ",
    +                                               {org_name, [org_name, " (", org_id, "): "], "no_org (no_id):"},
    +                                               {error_type, [error_type, " "], ""},
    +                                               message, "\n"]}],
    +
    +                                            [{"/var/log/opscode/opscode-chef-mover/console.log", info, 1073741824, "$D0", 10},
    +                                             {lager_default_formatter,
    +                                              [date, " ", time, " [", severity, "] ",
    +                                               {org_name, [org_name, " (", org_id, "): "], "no_org (no_id):"},
    +                                               {error_type, [error_type, " "], ""},
    +                                               message, "\n"]}]
    +                                           ]}
    +                     ]},
    +          {crash_log, "/var/log/opscode/opscode-chef-mover/crash.log"},
    +          {crash_log_msg_size, 65536},
    +          {crash_log_size, 10485760},
    +          {crash_log_date, "$D0"},
    +          {crash_log_count, 5},
    +          {error_logger_redirect, true},
    +          {error_logger_hwm, 1000 }
    +         ]},
    +
    +  {oc_chef_authz, [
    +                {authz_root_url, "http://127.0.0.1:9463" },
    +                {authz_service, [{root_url, "http://127.0.0.1:9463" },
    +                                 {timeout, 2000},
    +                                 {init_count, 25},
    +                                 {max_count, 100},
    +                                 {cull_interval, {1, min}},
    +                                 {max_age, {70, sec}},
    +                                 {max_connection_duration, {70, sec}},
    +                                 {ibrowse_options, [{connect_timeout, 5000}]}
    +                                 ]},
    +                %% COUCHDB REMOVE THESE
    +                {couchdb_host, "127.0.0.1"},
    +                {couchdb_port, 5987 },
    +                %% END COUCHDB REMOVE THESE
    +                {cleanup_batch_size, 0}
    +               ]},
    +
    +  {chef_db, [
    +             {bulk_fetch_batch_size, 5},
    +             {cache_defaults, [{max_size, 10000 },
    +                               {ttl, 3600}]},
    +             %% COUCHDB REMOVE THESE
    +             {couchdb_host, "127.0.0.1"},
    +             {couchdb_port, 5984 }
    +             %% END COUCHDB REMOVE THESE
    +            ]},
    +  {chef_objects, [
    +                  {s3_url, "https://localhost"},
    +                  {s3_platform_bucket_name, "bookshelf"},
    +                  {s3_url_ttl, 28800},
    +                  {s3_parallel_ops_timeout, 5000},
    +                  {s3_parallel_ops_fanout, 20}
    +                 ]},
    +  {stats_hero, [
    +               {udp_socket_pool_size, 5 },
    +               {estatsd_host, "127.0.0.1"},
    +               {estatsd_port, 9466}
    +              ]},
    + {chef_secrets, [{provider, chef_secrets_fd}]},
    + {sqerl, [
    +           %% The database system you are using (e.g. pgsql)
    +           {db_driver_mod, sqerl_pgsql_client},
    +
    +           %% Database connection parameters
    +           {config_cb, {chef_secrets_sqerl, config, [{<<"opscode_erchef">>, <<"sql_password">>}]}},
    +           {db_host, "127.0.0.1"},
    +           {db_port, 5432},
    +           {db_user, "opscode_chef"},
    +           {db_name, "opscode_chef" },
    +           {idle_check, 10000},
    +           {db_timeout, 5000},
    +           {prepared_statements, {oc_chef_sql, statements, [pgsql]}},
    +           {column_transforms,
    +                              [{<<"created_at">>,
    +                                {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}},
    +                               {<<"updated_at">>,
    +                                {sqerl_transformers, convert_YMDHMS_tuple_to_datetime}}]
    +           }
    +         ]},
    +
    + {pooler, [
    +           {pools, [[{name, sqerl},
    +                     {max_count, 5},
    +                     {init_count, 5},
    +                     {start_mfa, {sqerl_client, start_link, []}}]]},
    +           {metrics_module, folsom_metrics}
    +          ]},
    + {ibrowse, [
    +            {default_max_sessions, 256},
    +            {default_max_pipeline_size, 1 }
    +           ]},
    + {moser, [
    +           {moser_dets_dir, "/var/opt/opscode/opscode-chef-mover/data"},
    +           {couch_path, "/var/opt/opscode/couchdb/db"},
    +            % We are not purging, these are not relevant.
    +           {purge_chunksize, 10},
    +           {purge_throttle, 0},
    +           {purge_backup, false},
    +           {purge_auth, false},
    +           {purge_backup_dir, ""}
    +           ]},
    + {mover, [
    +          % Duration to sleep between marking an org unavailable
    +          % and proceeding with migration. For EC, we are guaranteed no
    +          % in-flight activity for migrating orgs, % so 0 is safe.
    +          {sleep_time, 0},
    +
    +          % dry_run refers to updating redis to indicate an org has
    +          % been migrated via xdarklaunch.  However in EC, xdarklaunch
    +          % is managed via 'reconfigure' and is not redis-based,
    +          %
    +          % Setting this to 'true' indicated that we will neither start
    +          % a connection to redis, nor attempt to update redis with org migration
    +          % results.
    +          {dry_run, true},
    +
    +          % If dry_run is true, eredis host and port will be ignored.
    +          {eredis_host, "127.0.0.1"},
    +          {eredis_port, 16379},
    +          {solr_url, "http://localhost:8983/solr"}
    +         ]},
    + {chef_reindex, [
    +          {solr_service, [{root_url, "http://localhost:8983/solr"},
    +                          {timeout, 30000},
    +                          {init_count, 25},
    +                          {max_count, 100},
    +                          {cull_interval, {1, min}},
    +                          {max_age, {70, sec}},
    +                          {max_connection_duration, {70,sec}},
    +                          {ibrowse_options, [{connect_timeout, 10000}]}]
    +          }
    +         ]}
    +].
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/opscode-chef-mover/sys.config] action create
    - unlink existing symlink to file at /opt/opscode/embedded/service/opscode-chef-mover/sys.config
    - create symlink at /opt/opscode/embedded/service/opscode-chef-mover/sys.config to /var/opt/opscode/opscode-chef-mover/sys.config
  * template[/var/opt/opscode/opscode-chef-mover/vm.args] action create
    - create new file /var/opt/opscode/opscode-chef-mover/vm.args
    - update content in file /var/opt/opscode/opscode-chef-mover/vm.args from none to 0154fa
    --- /var/opt/opscode/opscode-chef-mover/vm.args	2018-04-23 19:21:24.966011232 +0530
    +++ /var/opt/opscode/opscode-chef-mover/.chef-vm20180423-3855-1nivert.args	2018-04-23 19:21:24.966011232 +0530
    @@ -1 +1,24 @@
    +## Name of the node
    +-name mover@127.0.0.1
    +
    +## Cookie for distributed erlang
    +-setcookie mover
    +
    +## Heartbeat management; auto-restarts VM if it dies or becomes unresponsive
    +## (Disabled by default..use with caution!)
    +##-heart
    +
    +## Enable kernel poll and a few async threads
    ++K true
    ++A 5
    +
    +## Increase number of concurrent ports/sockets
    +-env ERL_MAX_PORTS 4096
    +
    +## Tweak GC to run more often
    +-env ERL_FULLSWEEP_AFTER 10
    +
    +## Increase logfile size to 10M
    +-env RUN_ERL_LOG_MAXSIZE 10000000
    +
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/opscode-chef-mover/vm.args] action create
    - create symlink at /opt/opscode/embedded/service/opscode-chef-mover/vm.args to /var/opt/opscode/opscode-chef-mover/vm.args
  * execute[restart_opscode-chef-mover_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/opscode-chef-mover/config] action create
    - create new file /var/log/opscode/opscode-chef-mover/config
    - update content in file /var/log/opscode/opscode-chef-mover/config from none to 666c00
    --- /var/log/opscode/opscode-chef-mover/config	2018-04-23 19:21:25.018013818 +0530
    +++ /var/log/opscode/opscode-chef-mover/.chef-config20180423-3855-1ayx74k	2018-04-23 19:21:25.017013768 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s1073741824
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[opscode-chef-mover] action nothing (skipped due to action :nothing)
Recipe: private-chef::opscode-chef-mover
  * runit_service[opscode-chef-mover] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/opscode-chef-mover] action create
      - create new directory /opt/opscode/sv/opscode-chef-mover
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-chef-mover/run] action create
      - create new file /opt/opscode/sv/opscode-chef-mover/run
      - update content in file /opt/opscode/sv/opscode-chef-mover/run from none to 84a978
      --- /opt/opscode/sv/opscode-chef-mover/run	2018-04-23 19:21:25.125019139 +0530
      +++ /opt/opscode/sv/opscode-chef-mover/.chef-run20180423-3855-8u6cum	2018-04-23 19:21:25.124019090 +0530
      @@ -1 +1,7 @@
      +#!/bin/sh
      +exec 2>&1
      +
      +ulimit -n 32768
      +export PATH=/opt/opscode/embedded/bin:$PATH
      +exec veil-env-helper --use-file -s opscode_erchef.sql_password -s oc_bifrost.superuser_id -s redis_lb.password -- chpst -P -u opscode -U opscode env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/opscode-chef-mover /opt/opscode/embedded/service/opscode-chef-mover/bin/mover foreground
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-chef-mover/log] action create
      - create new directory /opt/opscode/sv/opscode-chef-mover/log
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-chef-mover/log/main] action create
      - create new directory /opt/opscode/sv/opscode-chef-mover/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/opscode-chef-mover] action create
      - create new directory /var/log/opscode-chef-mover
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/opscode-chef-mover/log/config] action create
      - create new file /opt/opscode/sv/opscode-chef-mover/log/config
      - update content in file /opt/opscode/sv/opscode-chef-mover/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/opscode-chef-mover/config] action create
      - create symlink at /var/log/opscode-chef-mover/config to /opt/opscode/sv/opscode-chef-mover/log/config
    * template[/opt/opscode/sv/opscode-chef-mover/log/run] action create
      - create new file /opt/opscode/sv/opscode-chef-mover/log/run
      - update content in file /opt/opscode/sv/opscode-chef-mover/log/run from none to b4fe24
      --- /opt/opscode/sv/opscode-chef-mover/log/run	2018-04-23 19:21:25.364031025 +0530
      +++ /opt/opscode/sv/opscode-chef-mover/log/.chef-run20180423-3855-1dihnbe	2018-04-23 19:21:25.364031025 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/opscode-chef-mover
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/opscode-chef-mover/env] action create
      - create new directory /opt/opscode/sv/opscode-chef-mover/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for opscode-chef-mover service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-chef-mover/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/opscode-chef-mover/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/opscode-chef-mover/control] action create
      - create new directory /opt/opscode/sv/opscode-chef-mover/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/opscode-chef-mover] action create
      - create symlink at /opt/opscode/init/opscode-chef-mover to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/opscode-chef-mover/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-chef-mover] action create (up to date)
      * template[/opt/opscode/sv/opscode-chef-mover/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-chef-mover/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-chef-mover/log/main] action create (up to date)
      * directory[/var/log/opscode-chef-mover] action create (up to date)
      * template[/opt/opscode/sv/opscode-chef-mover/log/config] action create (up to date)
      * link[/var/log/opscode-chef-mover/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-chef-mover/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-chef-mover/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-chef-mover service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-chef-mover/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-chef-mover/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-chef-mover/control] action create (up to date)
      * link[/opt/opscode/init/opscode-chef-mover] action create (up to date)
      * file[/opt/opscode/sv/opscode-chef-mover/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-chef-mover] action create
        - create symlink at /opt/opscode/service/opscode-chef-mover to /opt/opscode/sv/opscode-chef-mover
      * ruby_block[wait for opscode-chef-mover service socket] action run
        - execute the ruby block wait for opscode-chef-mover service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/opscode-chef-mover] action create (up to date)
      * template[/opt/opscode/sv/opscode-chef-mover/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-chef-mover/log] action create (up to date)
      * directory[/opt/opscode/sv/opscode-chef-mover/log/main] action create (up to date)
      * directory[/var/log/opscode-chef-mover] action create (up to date)
      * template[/opt/opscode/sv/opscode-chef-mover/log/config] action create (up to date)
      * link[/var/log/opscode-chef-mover/config] action create (up to date)
      * template[/opt/opscode/sv/opscode-chef-mover/log/run] action create (up to date)
      * directory[/opt/opscode/sv/opscode-chef-mover/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for opscode-chef-mover service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-chef-mover/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/opscode-chef-mover/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/opscode-chef-mover/control] action create (up to date)
      * link[/opt/opscode/init/opscode-chef-mover] action create (up to date)
      * file[/opt/opscode/sv/opscode-chef-mover/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/opscode-chef-mover] action create (up to date)
      * ruby_block[wait for opscode-chef-mover service socket] action run
        - execute the ruby block wait for opscode-chef-mover service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/opscode-chef-mover] action create (up to date)
    * ruby_block[wait for opscode-chef-mover service socket] action run
      - execute the ruby block wait for opscode-chef-mover service socket
  
  * log[stop runit_service[opscode-chef-mover]] action write
  
  * runit_service[opscode-chef-mover] action down
    - send down to runit_service[opscode-chef-mover]
Recipe: private-chef::redis_lb
  * directory[/var/opt/opscode/redis_lb] action create
    - create new directory /var/opt/opscode/redis_lb
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/redis_lb/etc] action create
    - create new directory /var/opt/opscode/redis_lb/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/redis_lb/data] action create
    - create new directory /var/opt/opscode/redis_lb/data
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/redis_lb] action create
    - create new directory /var/log/opscode/redis_lb
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/var/opt/opscode/redis_lb/data] action create (skipped due to not_if)
  * template[/var/opt/opscode/redis_lb/etc/redis.conf] action create
    - create new file /var/opt/opscode/redis_lb/etc/redis.conf
    - update content in file /var/opt/opscode/redis_lb/etc/redis.conf from none to 054f25
    --- /var/opt/opscode/redis_lb/etc/redis.conf	2018-04-23 19:21:29.821123095 +0530
    +++ /var/opt/opscode/redis_lb/etc/.chef-redis20180423-3855-jsgvjd.conf	2018-04-23 19:21:29.820123077 +0530
    @@ -1 +1,34 @@
    +daemonize no
    +pidfile /var/opt/opscode/redis_lb/lb-redis.pid
    +
    +port 16379
    +bind 127.0.0.1 
    +
    +tcp-keepalive 60
    +timeout 300
    +loglevel notice
    +logfile ""
    +
    +databases 16
    +
    +save 900 1
    +save 300 10
    +save 60 1000
    +
    +rdbcompression yes
    +dbfilename dump.rdb
    +dir /var/opt/opscode/redis_lb/data
    +
    +maxmemory 8m
    +maxmemory-policy noeviction
    +maxmemory-samples 3
    +
    +appendonly no
    +appendfsync always
    +
    +no-appendfsync-on-rewrite no
    +activerehashing no
    +
    +auto-aof-rewrite-percentage 50
    +auto-aof-rewrite-min-size 16mb
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * execute[restart_redis_lb_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/redis_lb/config] action create
    - create new file /var/log/opscode/redis_lb/config
    - update content in file /var/log/opscode/redis_lb/config from none to 79b978
    --- /var/log/opscode/redis_lb/config	2018-04-23 19:21:29.857123743 +0530
    +++ /var/log/opscode/redis_lb/.chef-config20180423-3855-3fwo1e	2018-04-23 19:21:29.857123743 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s1000000
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[redis_lb] action nothing (skipped due to action :nothing)
Recipe: private-chef::redis_lb
  * runit_service[redis_lb] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/redis_lb] action create
      - create new directory /opt/opscode/sv/redis_lb
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/redis_lb/run] action create
      - create new file /opt/opscode/sv/redis_lb/run
      - update content in file /opt/opscode/sv/redis_lb/run from none to 71589d
      --- /opt/opscode/sv/redis_lb/run	2018-04-23 19:21:29.939125221 +0530
      +++ /opt/opscode/sv/redis_lb/.chef-run20180423-3855-9opz1x	2018-04-23 19:21:29.939125221 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec 2>&1
      +exec /opt/opscode/embedded/bin/veil-env-helper -s REDIS_PASSWORD=redis_lb.password -- chpst -P -o 131071 -u opscode -U opscode -o 100000 env HOME="/var/opt/opscode/redis_lb" /opt/opscode/embedded/bin/redis-server /var/opt/opscode/redis_lb/etc/redis.conf
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/redis_lb/log] action create
      - create new directory /opt/opscode/sv/redis_lb/log
      - restore selinux security context
    * directory[/opt/opscode/sv/redis_lb/log/main] action create
      - create new directory /opt/opscode/sv/redis_lb/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/redis_lb] action create
      - create new directory /var/log/redis_lb
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/redis_lb/log/config] action create
      - create new file /opt/opscode/sv/redis_lb/log/config
      - update content in file /opt/opscode/sv/redis_lb/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/redis_lb/config] action create
      - create symlink at /var/log/redis_lb/config to /opt/opscode/sv/redis_lb/log/config
    * template[/opt/opscode/sv/redis_lb/log/run] action create
      - create new file /opt/opscode/sv/redis_lb/log/run
      - update content in file /opt/opscode/sv/redis_lb/log/run from none to 2ac1d5
      --- /opt/opscode/sv/redis_lb/log/run	2018-04-23 19:21:30.150129022 +0530
      +++ /opt/opscode/sv/redis_lb/log/.chef-run20180423-3855-1kis4oy	2018-04-23 19:21:30.150129022 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/redis_lb
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/redis_lb/env] action create
      - create new directory /opt/opscode/sv/redis_lb/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/redis_lb/control] action create
      - create new directory /opt/opscode/sv/redis_lb/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/redis_lb] action create
      - create symlink at /opt/opscode/init/redis_lb to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/redis_lb] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/run] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/log] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/log/main] action create (up to date)
      * directory[/var/log/redis_lb] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/log/config] action create (up to date)
      * link[/var/log/redis_lb/config] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/log/run] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/redis_lb/control] action create (up to date)
      * link[/opt/opscode/init/redis_lb] action create (up to date)
      * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/redis_lb] action create
        - create symlink at /opt/opscode/service/redis_lb to /opt/opscode/sv/redis_lb
      * ruby_block[wait for redis_lb service socket] action run
        - execute the ruby block wait for redis_lb service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/redis_lb] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/run] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/log] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/log/main] action create (up to date)
      * directory[/var/log/redis_lb] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/log/config] action create (up to date)
      * link[/var/log/redis_lb/config] action create (up to date)
      * template[/opt/opscode/sv/redis_lb/log/run] action create (up to date)
      * directory[/opt/opscode/sv/redis_lb/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for redis_lb service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/redis_lb/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/redis_lb/control] action create (up to date)
      * link[/opt/opscode/init/redis_lb] action create (up to date)
      * file[/opt/opscode/sv/redis_lb/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/redis_lb] action create (up to date)
      * ruby_block[wait for redis_lb service socket] action run
        - execute the ruby block wait for redis_lb service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/redis_lb] action create (up to date)
    * ruby_block[wait for redis_lb service socket] action run
      - execute the ruby block wait for redis_lb service socket
  
Recipe: <Dynamically Defined Resource>
  * service[redis_lb] action nothing (skipped due to action :nothing)
  * service[redis_lb] action nothing (skipped due to action :nothing)
Recipe: private-chef::redis_lb
  * runit_service[redis_lb] action restart (up to date)
  * template[/etc/opscode/logrotate.d/redis_lb] action create
    - create new file /etc/opscode/logrotate.d/redis_lb
    - update content in file /etc/opscode/logrotate.d/redis_lb from none to e6e69e
    --- /etc/opscode/logrotate.d/redis_lb	2018-04-23 19:21:36.506243542 +0530
    +++ /etc/opscode/logrotate.d/.chef-redis_lb20180423-3855-eaep8o	2018-04-23 19:21:36.505243524 +0530
    @@ -1 +1,6 @@
    +/var/log/opscode/redis_lb/*.log {
    +  rotate 10
    +  size 1000000
    +  create 644 opscode opscode
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * ruby_block[set_lb_redis_values] action create
    - execute the ruby block set_lb_redis_values
Recipe: private-chef::nginx
  * directory[/var/log/opscode/nginx] action create
    - create new directory /var/log/opscode/nginx
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/ca] action create
    - create new directory /var/opt/opscode/nginx/ca
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/cache] action create
    - create new directory /var/opt/opscode/nginx/cache
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/cache-tmp] action create
    - create new directory /var/opt/opscode/nginx/cache-tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/etc] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/etc/addon.d] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/etc/nginx.d] action create
    - create new directory /var/opt/opscode/nginx/etc/nginx.d
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/etc/scripts] action create
    - create new directory /var/opt/opscode/nginx/etc/scripts
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/html] action create
    - create new directory /var/opt/opscode/nginx/html
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/nginx/tmp] action create
    - create new directory /var/opt/opscode/nginx/tmp
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/var/log/opscode/nginx/access.log] action create
    - create new file /var/log/opscode/nginx/access.log
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/var/log/opscode/nginx/error.log] action create
    - create new file /var/log/opscode/nginx/error.log
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/var/log/opscode/nginx/current] action create
    - create new file /var/log/opscode/nginx/current
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * openssl_x509[/var/opt/opscode/nginx/ca/localhost.crt] action create
    - Create openssl_x509[/var/opt/opscode/nginx/ca/localhost.crt]
    * file[/var/opt/opscode/nginx/ca/localhost.crt] action create_if_missing
      - create new file /var/opt/opscode/nginx/ca/localhost.crt
      - update content in file /var/opt/opscode/nginx/ca/localhost.crt from none to 8b9b51
      - suppressed sensitive resource
      - change mode from '' to '0600'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
      - restore selinux security context
    * file[/var/opt/opscode/nginx/ca/localhost.key] action create_if_missing
      - create new file /var/opt/opscode/nginx/ca/localhost.key
      - update content in file /var/opt/opscode/nginx/ca/localhost.key from none to 2e4a57
      - suppressed sensitive resource
      - change mode from '' to '0600'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
      - restore selinux security context
  
  * file[/var/opt/opscode/nginx/ca/localhost.crt] action create (up to date)
  * file[/var/opt/opscode/nginx/ca/localhost.key] action create (up to date)
  * openssl_dhparam[/var/opt/opscode/nginx/ca/dhparams.pem] action create

    - Create a dhparam file /var/opt/opscode/nginx/ca/dhparams.pem
    * log[Generating 2048 bit dhparam file at /var/opt/opscode/nginx/ca/dhparams.pem, this may take some time] action write
    
    * file[/var/opt/opscode/nginx/ca/dhparams.pem] action create
      - create new file /var/opt/opscode/nginx/ca/dhparams.pem
      - update content in file /var/opt/opscode/nginx/ca/dhparams.pem from none to aa34d4
      - suppressed sensitive resource
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
  
  * remote_directory[/var/opt/opscode/nginx/html] action create
  Recipe: <Dynamically Defined Resource>
    * cookbook_file[/var/opt/opscode/nginx/html/404.html] action create
      - create new file /var/opt/opscode/nginx/html/404.html
      - update content in file /var/opt/opscode/nginx/html/404.html from none to 447e49
      --- /var/opt/opscode/nginx/html/404.html	2018-04-23 19:23:07.074303207 +0530
      +++ /var/opt/opscode/nginx/html/.chef-40420180423-3855-1fmhbcv.html	2018-04-23 19:23:07.074303207 +0530
      @@ -1 +1,37 @@
      +<!DOCTYPE html>
      +<html xmlns="http://www.w3.org/1999/xhtml">
      +<head>
      +  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      +  <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
      +  <title>Chef - 404 Not Found</title>
      +  <link media="all" rel="stylesheet" type="text/css" href="/css/all.css" />
      +  <!--[if lt IE 7]><link rel="stylesheet" type="text/css" href="/css/lt7.css" /><![endif]-->
      +</head>
      +<body>
      +  <div class="header-block">
      +    <div id="header">
      +      <strong class="logo"><a href="https://www.chef.io">Chef</a></strong>
      +    </div>
      +  </div>
      +  <div id="wrapper">
      +    <div id="main">
      +      <div class="mybox">
      +        <div id="content">
      +          <h1>404 - Not Found</h1>
      +          <p>Sorry, I can't find what you are looking for.</p>
      +        </div>
      +      </div>
      +    </div>
      +  </div>
      +  <div class="footer-block">
      +    <div id="footer">
      +      <div class="mybox">
      +      </div>
      +      <div class="footer-bottom">
      +        <span>&copy; 2010&thinsp;&ndash;&thinsp;2017 Chef Software, Inc. All Rights Reserved</span>
      +      </div>
      +    </div>
      +  </div>
      +</body>
      +</html>
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/503.json] action create
      - create new file /var/opt/opscode/nginx/html/503.json
      - update content in file /var/opt/opscode/nginx/html/503.json from none to 7643f9
      --- /var/opt/opscode/nginx/html/503.json	2018-04-23 19:23:07.177306283 +0530
      +++ /var/opt/opscode/nginx/html/.chef-50320180423-3855-15ofiru.json	2018-04-23 19:23:07.175306223 +0530
      @@ -1 +1,2 @@
      +{ "error": "503 - Service Unavailable: Sorry, we are unavailable right now.  Please try again later." }
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/favicon.ico] action create
      - create new file /var/opt/opscode/nginx/html/favicon.ico
      - update content in file /var/opt/opscode/nginx/html/favicon.ico from none to 5f4080
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/index.html] action create
      - create new file /var/opt/opscode/nginx/html/index.html
      - update content in file /var/opt/opscode/nginx/html/index.html from none to 41ec1d
      --- /var/opt/opscode/nginx/html/index.html	2018-04-23 19:23:07.394312761 +0530
      +++ /var/opt/opscode/nginx/html/.chef-index20180423-3855-1uqqxem.html	2018-04-23 19:23:07.392312701 +0530
      @@ -1 +1,63 @@
      +<!DOCTYPE html>
      +<html xmlns="http://www.w3.org/1999/xhtml">
      +<head>
      +  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      +  <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
      +  <title>Chef API</title>
      +  <link media="all" rel="stylesheet" type="text/css" href="/css/all.css" />
      +  <!--[if lt IE 7]><link rel="stylesheet" type="text/css" href="/css/lt7.css" /><![endif]-->
      +</head>
      +<body>
      +  <div class="header-block">
      +    <div id="header">
      +      <strong class="logo"><a href="https://chef.io">Chef</a></strong>
      +    </div>
      +  </div>
      +  <div id="wrapper">
      +    <div id="main">
      +      <div class="mybox">
      +        <div id="content">
      +          <h1>Are You Looking For the Chef Server?</h1>
      +
      +          <p>Hello! It looks like you were trying to browse to your Chef Server but you haven't installed the Management Console.</p>
      +
      +          <p>
      +            If you prefer, you can access the server programmatically with the Chef Server API. To learn how to
      +            do this, head over to our <a href="https://docs.chef.io/api_chef_server.html">API Documentation</a> pages.
      +          </p>
      +
      +          <p>
      +            If you do want to use your browser to manage your server, then
      +            install the Management Console. It's free for up to 25 nodes.
      +          </p>
      +
      +          <p>
      +            One way to install the Management Console is to log in as root and type these commands:
      +            <pre> # chef-server-ctl install chef-manage </pre>
      +            <pre> # chef-server-ctl reconfigure </pre>
      +            <pre> # chef-manage-ctl reconfigure </pre>
      +            Alternatively, you can download the Management Console as an installable package from the <a href="https://downloads.chef.io/chef-manage"> Management Console</a> downloads page.
      +          </p>
      +
      +          <p>
      +            You may also be interested in our other add-ons. These are available as packages from our
      +            <a href="https://downloads.chef.io/chef-server/">Chef Server</a> downloads page or you can
      +            type <code>chef-server-ctl install</code>. Without arguments, the command lists the packages
      +            available for installation.
      +          </p>
      +        </div>
      +      </div>
      +    </div>
      +  </div>
      +  <div class="footer-block">
      +    <div id="footer">
      +      <div class="mybox">
      +      </div>
      +      <div class="footer-bottom">
      +        <span>&copy; 2010&thinsp;&ndash;&thinsp;2017 Chef Software, Inc. All Rights Reserved</span>
      +      </div>
      +    </div>
      +  </div>
      +</body>
      +</html>
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * directory[/var/opt/opscode/nginx/html/css] action create
      - create new directory /var/opt/opscode/nginx/html/css
      - change mode from '' to '0750'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/css/all.css] action create
      - create new file /var/opt/opscode/nginx/html/css/all.css
      - update content in file /var/opt/opscode/nginx/html/css/all.css from none to 445730
      --- /var/opt/opscode/nginx/html/css/all.css	2018-04-23 19:23:07.534316941 +0530
      +++ /var/opt/opscode/nginx/html/css/.chef-all20180423-3855-spk3xn.css	2018-04-23 19:23:07.533316911 +0530
      @@ -1 +1,888 @@
      +body {
      +	margin:0;
      +	font:14px "Helvetica Neue", Helvetica, Arial, sans-serif;
      +        font-size: 1em;
      +	color:#666;
      +        background-color:#212c35;
      +        -webkit-font-smoothing: antialiased;
      +}
      +a {
      +	text-decoration:none;
      +	color:#4d97c6;
      +}
      +a:hover {
      +        color: #f18a20;
      +}
      +input,
      +textarea,
      +select{
      +	font:100% arial,sans-serif;
      +	vertical-align:middle;
      +}
      +form,fieldset{
      +	margin:0;
      +	padding:0;
      +	border:none;
      +}
      +img {
      +	border:0;
      +}
      +#wrapper {
      +	position:relative;
      +	padding: 20px 0 100px 0px;
      +        background-color: #fff;
      +}
      +
      +.header-block {
      +	margin: 0;
      +	background-color:#212c35 ;
      +	width:100%;
      +	min-width:940px;
      +}
      +
      +#header {
      +	margin:0 auto;
      +	padding:0;
      +}
      +
      +#header:after {
      +	content:"";
      +	clear:both;
      +	display:block;
      +}
      +.logo {
      +	float:left;
      +	margin:10px 0 12px 10px;
      +}
      +.logo a {
      +	display:block;
      +        width: 128px;
      +        height: 30px;
      +        background-image:  url('/images/logo.png');
      +        background-image:  url('/images/logo.svg'), none;
      +        background-size: 100% 100%;
      +	text-indent:-9999px;
      +	overflow:hidden;
      +}
      +.header-r {
      +	width:794px;
      +	float:right;
      +	position:relative;
      +}
      +.header-r:after {
      +	content:"";
      +	clear:both;
      +	display:block;
      +}
      +.login-box {
      +	height:37px;
      +	width:794px;
      +	position:absolute;
      +	top:0;
      +	left:0;
      +	z-index:10;
      +}
      +.login-box:after {
      +	content:"";
      +	clear:both;
      +	display:block;
      +}
      +.logged-in {
      +	float:right;
      +	margin:10px 0 0;
      +	padding:0;
      +	list-style:none;
      +	display:none;
      +}
      +.logged-in li {
      +	display:inline;
      +	float:left;
      +	background: url(../images/separator-login.gif) no-repeat 0 3px;
      +	padding:0 0 0 16px;
      +	margin:0 0 0 14px;
      +}
      +.logged-in li a {
      +	text-decoration:underline;
      +	font-weight:bold;
      +}
      +.logged-in li a,
      +.logged-in li span {
      +	font-size:11px;
      +	color:#fff;
      +}
      +.logged-in li:first-child {
      +	background:none;
      +}
      +.login {
      +	float:right;
      +	margin:10px -10px 0 0;
      +	padding:0;
      +	list-style:none;
      +	clear:both;
      +	display:inline;
      +}
      +* html #login {
      +	height:1%;
      +	overflow:visible;
      +}
      +.login:after {
      +	content:"";
      +	clear:both;
      +	display:block;
      +}
      +.login li {
      +	display:inline;
      +	float:right;
      +	background: url(../images/separator-login.gif) no-repeat right 3px;
      +	padding:0 16px 0 14px; 
      +}
      +.login  .active {
      +	position:relative;
      +}
      +.login li a {
      +	font-size:11px;
      +	color:#fff;
      +}
      +.login li:first-child {
      +	background:none;
      +}
      +#close {
      +	width:68px;
      +	height:21px;
      +	position:absolute;
      +	background:url(../images/bg-close.gif) no-repeat;
      +	top:-21px;
      +	left:183px;
      +	line-height:22px;
      +	text-align:center;
      +}
      +.login-form {
      +	width:446px;
      +	background:url(../images/bg-login-block-t.gif) no-repeat;
      +	position:absolute;
      +	top:18px;
      +	left:-188px;
      +	display:none;
      +}
      +.login-form .block {
      +	background:#bc4301 url(../images/bg-login-form-t.gif) no-repeat;
      +	width:415px;
      +	padding:13px 14px 9px 17px;
      +	overflow:hidden;
      +}
      +.login-form-b {
      +	background: url(../images/bg-login-form-b.png) no-repeat;
      +	height:8px;
      +	width:446px;
      +	font-size:0;
      +	line-height:0;
      +}
      +.login-form .field {
      +	width:190px;
      +	float:left;
      +}
      +.login-form .field label,
      +.login-form .field input {
      +	clear:both;
      +	float:left;
      +}
      +.login-form .field label {
      +	color:#fff;
      +}
      +.login-form .field input {
      +	margin:3px 0 0;
      +	border:3px solid #d4d4d2;
      +	padding:2px 0;
      +	width:173px;
      +}
      +.login-form .go {
      +	height:26px;
      +	width:35px;
      +	background:url(../images/btn-go.gif) no-repeat;
      +	border:none;
      +	text-indent:-9999px;
      +	font-size:0;
      +	line-height:0;
      +	float:left;
      +	margin:17px 0 0;
      +	cursor:pointer;
      +}
      +.nav-box {
      +	background:url(../images/nav-bg.gif) no-repeat right bottom;
      +	width:794px;
      +	overflow:hidden;
      +	float:left;
      +	position:absolute;
      +	top:78px;
      +	left:0;
      +	z-index:1;
      +}
      +#nav {
      +	list-style:none;
      +	float:right;
      +	clear:both;
      +	margin:0;
      +	padding:0 10px 0 0;
      +}
      +#nav li {
      +	float:left;
      +	display:inline;
      +	padding:0 8px 5px;
      +	margin:0 5px 0 14px;
      +}
      +#nav li a {
      +	font-size:15px;
      +	color:#f7681a;
      +	float:left;
      +	display:inline;
      +	white-space:nowrap;
      +	display:block;
      +}
      +#nav li:hover,
      +#nav li.hover {
      +	background:url(../images/nav-hover.gif) repeat-x 0 bottom;
      +	color:#f7681a; 
      +}
      +#nav li:hover a,
      +#nav li.hover a {
      +	color:#f7681a;
      +}
      +#nav li.active {
      +	background:url(../images/nav-active.gif) repeat-x 0 bottom;
      +}
      +#nav li.active a {
      +	color:#7c7b7b;
      +}
      +#nav li a:hover {
      +	text-decoration:none;
      +}
      +.hidden {
      +	display:none !important;
      +}
      +.visible {
      +	display:inline !important;
      +}
      +#main {
      +	max-width: 940px;
      +	margin:0 auto;
      +}
      +.main-t {
      +	background:#f6f4f1 url(../images/bg-main-t.gif) no-repeat;
      +}
      +.main-b {
      +	background:url(../images/bg-main-b.gif) no-repeat 0 bottom;
      +	width:940px;
      +	overflow:hidden;
      +}
      +.main-404 {
      +	width:940px;
      +	overflow:hidden;
      +}
      +#main .mybox {
      +	max-width: 940px;
      +	overflow:hidden;
      +}
      +.visual {
      +	width:358px;
      +	float:left;
      +}
      +.visual img {
      +	display:block;
      +}
      +#main .content {
      +	width:502px;
      +	padding:0 38px 0 42px;
      +	float:left;
      +}
      +.content h1 {
      +	font-size: 38.5px;
      +	margin:19px 0 0;
      +	font-weight:normal;
      +}
      +.content h3 {
      +	font-size:17px;
      +	font-weight:normal;
      +	margin:10px 0 0;
      +}
      +.content .text {
      +}
      +.content p {
      +	margin:27px 0 0;
      +	font-size:14px;
      +	line-height:19px;
      +}
      +.find-more {
      +	display:block;
      +	font-size:20px;
      +	height:36px;
      +	width:164px;
      +	background:url(../images/btn-more.gif) no-repeat;
      +	color:#fff;
      +	line-height:36px;
      +	text-align:center;
      +	margin:38px 0 0;
      +}
      +.find-more:hover {
      +	text-decoration:none;
      +}
      +.blocks {
      +	background:#f6f4f1 url(../images/bg-blocks-t.gif) no-repeat;
      +	width:940px;
      +	margin:20px 0 0;
      +}
      +.blocks-b {
      +	background:url(../images/bg-blocks-b.gif) no-repeat 0 bottom;
      +	width:940px;
      +	padding:25px 0 36px;
      +	overflow:hidden;
      +}
      +.blocks .about {
      +	width:266px;
      +	float:left;
      +	padding:0 18px 0 20px;
      +	background:url(../images/separator-blocks.gif) no-repeat right 59px;
      +}
      +.blocks h2 {
      +	font-size:23px;
      +	padding:0 0 2px 46px;
      +	margin:0;
      +	font-weight:normal;
      +	letter-spacing:1px;
      +}
      +.blocks .about h2 {
      +	background: url(../images/bullet-about.gif) no-repeat;
      +}
      +.blocks .platform {
      +	width:265px;
      +	float:left;
      +	padding:0 23px 0 28px;
      +	background:url(../images/separator-blocks.gif) no-repeat right 59px;
      +}
      +.blocks .platform h2 {
      +	background: url(../images/bullet-platform.gif) no-repeat;
      +}
      +.blocks p {
      +	margin:17px 0 0px;
      +	line-height:18px;
      +}
      +.blocks p a {
      +	color:#99b504;
      +}
      +.blocks .friends {
      +	width:298px;
      +	float:left;
      +	padding:0 0 0 22px;
      +}
      +.blocks .friends h2 {
      +	background: url(../images/bullet-friends.gif) no-repeat;
      +}
      +.blocks .friends .list {
      +	margin:0;
      +	padding:10px 0 0 5px;
      +	list-style:none;
      +	width:281px;
      +	overflow:hidden;
      +}
      +.blocks .friends .list li {
      +	margin:12px 14px 0 0;
      +	float:left;
      +	display:inline;
      +}
      +.blocks .friends .list li img {
      +	display:block;
      +}
      +.blocks .friends .more {
      +	text-align:center;
      +	margin:10px 0 0;
      +	padding:0 40px 0 0;
      +}
      +.footer-block{
      +	margin:0;
      +	background-color:#212c35 ;
      +	width:100%;
      +	min-width:940px;
      +}
      +#footer {
      +	margin:0 auto;
      +	width:940px;
      +	padding:0 0 50px 0;
      +}
      +#footer .mybox {
      +	width:940px;
      +	overflow:hidden;
      +	padding:20px 0 0;
      +}
      +#footer .blog {
      +	width:673px;
      +	float:left;
      +	padding:0 30px 0 0;
      +}
      +#footer .blog h2 {
      +	color:#fff;
      +	font-size:17px;
      +	padding:0 0 7px 37px;
      +	margin:0;
      +	background:url(../images/bullet-blog.gif) no-repeat;
      +}
      +#footer .blog .posts {
      +	margin:0;
      +	padding:12px 0 0;
      +	list-style:none;
      +}
      +#footer .blog .posts li {
      +	margin:0 0 19px 0;
      +}
      +#footer .blog .posts li span {
      +	color:#a1a1a1;
      +	font-weight:bold;
      +}
      +#footer .blog .posts li a {
      +	color:#a1ba21;
      +}
      +#footer .blog .list {
      +	margin:0;
      +	padding:0;
      +	list-style:none;
      +	overflow:hidden;
      +}
      +* html #footer .blog .list {
      +	height:1%;
      +	overflow:visible;
      +}
      +#footer .blog .list li {
      +	float:left;
      +	margin:0 12px 0 0;
      +	display:inline;
      +}
      +#footer .blog .list li a {
      +	color:#99b504;
      +}
      +#footer .blog .list .subscribe {
      +	background:url(../images/separator-footer-list.gif) no-repeat 0 2px;;
      +	padding:0 0 0 14px;
      +}
      +#footer .blog .list .subscribe a {
      +	padding:0 0 0 18px;
      +	background:url(../images/bullet-subscribe.gif) no-repeat 0 2px;
      +}
      +#footer .contact {
      +	width:222px;
      +	float:left;
      +	padding:0 15px 0 0;
      +}
      +#footer .contact h2 {
      +	color:#fff;
      +	font-size:17px;
      +	padding:0 0 7px 0;
      +	margin:0 0 9px 0;
      +}
      +#footer .contact .email,
      +#footer .contact .phone {
      +	color:#a1a1a1;
      +	display:block;
      +	margin:4px 0 0;
      +}
      +#footer .contact .email a {
      +	color:#a1ba21;
      +}
      +#footer .contact .list {
      +	margin:13px 0 0;
      +	padding:0;
      +	list-style:none;
      +}
      +#footer .contact .list li {
      +	border-top:1px solid #828282;
      +	border-bottom:1px solid #828282;
      +	padding:9px 0;
      +	margin:-1px 0 0 0;
      +}
      +#footer .contact .list li a {
      +	color:#99b504;
      +}
      +#footer .footer-bottom {
      +        padding-left: 10px;
      +	font-size:11px;
      +	color:#a1a1a1;
      +	margin:0;
      +}
      +#footer .footer-bottom ul {
      +	margin:0;
      +	padding:0;
      +	list-style:none;
      +	display:inline;
      +}
      +#footer .footer-bottom ul li {
      +	display:inline;
      +	padding:0 0 0 10px;
      +	margin:0 0 0 10px;
      +	background:url(../images/separator-footer-bottom.gif) no-repeat 0 2px;
      +}
      +#footer .footer-bottom ul li a {
      +	color:#a1a1a1;
      +}
      +
      +#footer .footer-bottom ul li a:hover {
      +	color:#9db426
      +}
      +/*inner1 page*/
      +#content {
      +
      +	float:left;
      +	padding:0 41px 0 11px;
      +	background:#fff;
      +}
      +#content h1 {
      +	padding:5px 0 0;
      +	margin:15px 0 0;
      +	font-weight:normal;
      +}
      +#content .product-title {
      +	background:url(../images/bullet-heading.gif) no-repeat;
      +	padding:5px 0 18px 100px;
      +}
      +#content h3 {
      +	font-size:16px;
      +	padding:0 0 4px 100px;
      +	margin:-19px 0 0;
      +	font-weight:normal;
      +}
      +#content p {
      +	margin:18px 0 0;
      +	line-height:21px;
      +}
      +#content .platform {
      +	width:623px;
      +	margin:38px 0 0;
      +}
      +#content .platform-item {
      +	width:623px;
      +	overflow:hidden;
      +	margin:22px 0 0;
      +}
      +#content .platform-item .visual  {
      +	float:left;
      +	width:151px;
      +}
      +#content .platform-item .text {
      +	width:444px;
      +	float:left;
      +	padding:0 0 0 28px;
      +}
      +.platform-item .text p {
      +	margin:0 0 16px 0 !important;
      +}
      +#content .platform2 {
      +	width:680px;
      +	overflow:hidden;
      +	margin:23px 0 0 -50px;
      +}
      +#content .platform2 h2 {
      +	font-size:22px;
      +	margin:0;
      +	font-weight:normal;
      +}
      +#content .platform2-item {
      +	width:290px;
      +	float:left;
      +	margin:0 0 0 50px;
      +	display:inline;
      +}
      +#content .platform2-item p {
      +	margin:0;
      +	padding:0;
      +	line-height:20px;
      +}
      +#content .platform2-item ul {
      +	margin:10px 0 0;
      +	padding:0;
      +	list-style:none;
      +}
      +#content .platform2-item ul li {
      +	background:url(../images/bullet-platform2-item.gif) no-repeat 0 4px;
      +	padding:0 0 0 14px;
      +	margin:0 0 11px 9px;
      +}
      +#content .find-more {
      +	margin:53px 0 40px 214px;
      +}
      +#sidebar {
      +	width:255px;
      +	float:left;
      +}
      +.sidebar-b {
      +	width:226px;
      +	padding:0 11px 10px 18px;
      +}
      +#sidebar .category {
      +	margin:17px 0 0;
      +}
      +#sidebar h3 {
      +	height:26px;
      +	margin:0 -11px 0 -29px;
      +	padding:0 0 11px 30px;
      +	position:relative;
      +	font-size:14px;
      +	font-weight:normal;
      +	color:#6f6f6f;
      +	background:url(../images/bg-sidebar-title.gif) no-repeat;
      +	line-height:26px;
      +}
      +#sidebar ul {
      +	margin:0;
      +	padding:0;
      +	list-style:none;
      +}
      +#sidebar ul li {
      +	margin:0 0 5px 0;
      +}
      +#sidebar p {
      +	color: #748082;
      +	margin:6px 0 0;
      +	line-height:20px;
      +}
      +/*inner2 page*/
      +.blog-post {
      +	margin:28px 0 0;
      +	padding:10px 30px 0 0;
      +	width:603px;
      +	overflow:hidden;
      +}
      +#content .blog-post h2 {
      +	font-size:30px;
      +	font-weight:normal;
      +	margin:0;
      +}
      +.post-info {
      +	margin:5px 0 0 -10px;
      +	padding:0;
      +	list-style:none;
      +}
      +.post-info li {
      +	display:inline;
      +	padding:0 4px 0 10px;
      +	background:url(../images/separator-post-info.gif) no-repeat 0 2px;
      +	font-size:13px;
      +}
      +.post-info li:first-child {
      +	background:none;
      +}
      +.blog-post p {
      +	margin:13px 0 0 !important;
      +	line-height:20px !important;
      +}
      +.blog-post .visual {
      +	width:252px;
      +	float:left;
      +	margin:17px 0 0;
      +	padding:0 28px 10px 0;
      +}
      +.post-navigation {
      +	margin:36px 0 0;
      +	padding:0 0 0 2px;
      +	list-style:none;
      +	width:620px;
      +	overflow:hidden;
      +}
      +.post-navigation .previous {
      +	float:left;
      +	padding:0 0 0 20px;
      +	background:url(../images/bullet-previous.gif) no-repeat 0 5px;
      +}
      +.post-navigation .next {
      +	float:right;
      +	padding:0 20px 0 0;
      +	background:url(../images/bullet-next.gif) no-repeat right 5px;
      +}
      +#sidebar .subscribe {
      +	display:block;
      +	text-align:center;
      +	margin:13px 0 -7px;
      +}
      +#sidebar .subscribe a {
      +	background:url(../images/bullet-subscribe2.gif) no-repeat 0 1px;
      +	padding:0 0 0 20px;
      +	
      +}
      +#sidebar .tweets {
      +	margin:0 0 18px 0;
      +	padding:0 30px 0 0;
      +}
      +#sidebar .tweets .date {
      +	font-size:11px;
      +}
      +#sidebar .tweets p {
      +	font-size:11px;
      +	line-height:18px;
      +	margin:0 !important;
      +}
      +/*inner4*/
      +#content h1.blog-title {
      +	background:url(../images/bullet-blog-title.gif) no-repeat;
      +	padding:0 30px 16px 55px ;
      +	margin:44px 0 0;
      +}
      +#content .video-player {
      +	width:600px;
      +	margin:20px 0 0;
      +}
      +.video-player img {
      +	display:block;
      +}
      +.coments-counter {
      +	font-size:20px;
      +	display:block;
      +	margin:30px 0 0;
      +}
      +.coment {
      +	width:520px;
      +	padding:10px 32px 20px 24px;
      +	background:#f6f4f1;
      +	margin:23px 0 0;
      +}
      +.coment .post-info li {
      +	font-size:12px;
      +}
      +#content .coment p {
      +	margin:7px 0 0 ;
      +	line-height:20px;
      +}
      +.coment2 {
      +	width:486px;
      +	padding:0 32px 0 58px;
      +	margin:23px 0 0;
      +}
      +.coment2 .post-info li {
      +	font-size:12px;
      +}
      +#content .coment2 p {
      +	margin:7px 0 0 ;
      +	line-height:20px;
      +}
      +.reply {
      +	font-size:20px;
      +	display:block;
      +	margin:34px 0 0;
      +}
      +.reply-form {
      +	width:480px;
      +	overflow:hidden;
      +}
      +.reply-form .box {
      +	width:240px;
      +	float:left;
      +}
      +.reply-form .input-fields {
      +	float:left;
      +	clear:both;
      +	border:3px solid #d4d4d2;
      +	margin:3px 0 0;
      +	padding:3px 0;
      +	width:190px;
      +}
      +.form-title {
      +	float:left;
      +	clear:both;
      +	margin:16px 0 0;
      +}
      +.coment-field {
      +	float:left;
      +	clear:both;
      +	border:3px solid #d4d4d2;
      +	margin:3px 0 0;
      +	width:430px;
      +	height:80px;
      +	overflow:hidden;
      +	
      +}
      +.reply-form .frame {
      +	width:480px;
      +	overflow:auto;
      +}
      +.reply-form .submit-btn {
      +	display:block;
      +	width:107px;
      +	height:35px;
      +	border:0;
      +	background: url(../images/btn-submit.gif) no-repeat;
      +	line-height:35px;
      +	text-align:center;
      +	font-size:20px;
      +	margin:27px 0 20px;
      +	color:#fff;
      +}
      +/*inner5*/
      +#content .friends-box {
      +	width:680px;
      +	overflow:hidden;
      +	margin:23px 0 0 -50px;
      +}
      +#content .friends-box h2 {
      +	font-size:22px;
      +	margin:0;
      +	font-weight:normal;
      +}
      +#content .friends-item {
      +	width:280px;
      +	float:left;
      +	padding:0 10px 0 0;
      +	margin:0 0 0 50px;
      +	display:inline;
      +}
      +#content .friends-item p {
      +	margin:0 0 17px;
      +	padding:0;
      +	line-height:20px;
      +}
      +#content .friends-item span {
      +	line-height:20px;
      +	display:block;
      +}
      +#content .friends-item ul {
      +	margin:10px 0 0;
      +	padding:0;
      +	list-style:none;
      +}
      +#content .friends-item ul li {
      +	background:url(../images/bullet-platform2-item.gif) no-repeat 0 4px;
      +	padding:0 0 0 14px;
      +	margin:0 0 11px 9px;
      +}
      +#content h2 {
      +	font-size:22px;
      +	margin:0;
      +	font-weight:normal;
      +}
      +.team {
      +	margin:27px 0 0;
      +	width:633px;
      +}
      +.team-item {
      +	width:610px;
      +	overflow:hidden;
      +	margin:13px 0 0;
      +	padding:0 20px 10px 3px;
      +}
      +.team-item .visual {
      +	float:left;
      +	margin:4px 0 0;
      +	width:110px;
      +	padding:0 24px 0 0;
      +}
      +.team-item .person {
      +	font-size:16px;
      +	font-weight:normal;
      +}
      +.team-item p {
      +	margin:0 !important;
      +}
      +#sidebar .contact-info {
      +	margin:0;
      +}
      +#sidebar .contact-info li {
      +	margin:0 0 5px;
      +	font-size:11px;
      +}
      +.contact-info .phone {
      +	margin:22px 0 5px !important;
      +}
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * directory[/var/opt/opscode/nginx/html/images] action create
      - create new directory /var/opt/opscode/nginx/html/images
      - change mode from '' to '0750'
      - change owner from '' to 'opscode'
      - change group from '' to 'opscode'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-blocks-b.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-blocks-b.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-blocks-b.gif from none to b0e6f1
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-blocks-t.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-blocks-t.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-blocks-t.gif from none to 959c0d
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-body.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-body.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-body.gif from none to 79e254
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-close.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-close.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-close.gif from none to a1af5d
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-footer.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-footer.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-footer.gif from none to 467fc5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-login-form-b.png] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-login-form-b.png
      - update content in file /var/opt/opscode/nginx/html/images/bg-login-form-b.png from none to 15d8a3
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-login-form-t.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-login-form-t.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-login-form-t.gif from none to 69f556
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-main-b.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-main-b.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-main-b.gif from none to eb09bd
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-main-t.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-main-t.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-main-t.gif from none to 616a67
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bg-sidebar-title.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bg-sidebar-title.gif
      - update content in file /var/opt/opscode/nginx/html/images/bg-sidebar-title.gif from none to 027720
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-go.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/btn-go.gif
      - update content in file /var/opt/opscode/nginx/html/images/btn-go.gif from none to 6682b2
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-more.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/btn-more.gif
      - update content in file /var/opt/opscode/nginx/html/images/btn-more.gif from none to 8443e8
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/btn-submit.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/btn-submit.gif
      - update content in file /var/opt/opscode/nginx/html/images/btn-submit.gif from none to 9558f3
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-about.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-about.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-about.gif from none to a47f45
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-blog-title.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-blog-title.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-blog-title.gif from none to 26d800
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-blog.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-blog.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-blog.gif from none to 151fb0
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-friends.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-friends.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-friends.gif from none to b1fe37
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-heading.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-heading.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-heading.gif from none to c0ed32
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-next.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-next.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-next.gif from none to 995052
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-platform.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-platform.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-platform.gif from none to 7a7f21
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-platform2-item.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-platform2-item.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-platform2-item.gif from none to fdacf5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-previous.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-previous.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-previous.gif from none to 8fc6fd
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-subscribe.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-subscribe.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-subscribe.gif from none to 5c93bd
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/bullet-subscribe2.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/bullet-subscribe2.gif
      - update content in file /var/opt/opscode/nginx/html/images/bullet-subscribe2.gif from none to 12a499
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/hd-header.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/hd-header.gif
      - update content in file /var/opt/opscode/nginx/html/images/hd-header.gif from none to f74554
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/image.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/image.jpg
      - update content in file /var/opt/opscode/nginx/html/images/image.jpg from none to 6e2c7d
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/image2.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/image2.jpg
      - update content in file /var/opt/opscode/nginx/html/images/image2.jpg from none to 42e2f0
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/image3.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/image3.jpg
      - update content in file /var/opt/opscode/nginx/html/images/image3.jpg from none to 349966
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/logo.gif
      - update content in file /var/opt/opscode/nginx/html/images/logo.gif from none to f82259
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.png] action create
      - create new file /var/opt/opscode/nginx/html/images/logo.png
      - update content in file /var/opt/opscode/nginx/html/images/logo.png from none to 0b3336
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/logo.svg] action create
      - create new file /var/opt/opscode/nginx/html/images/logo.svg
      - update content in file /var/opt/opscode/nginx/html/images/logo.svg from none to 530c95
      --- /var/opt/opscode/nginx/html/images/logo.svg	2018-04-23 19:23:09.225367427 +0530
      +++ /var/opt/opscode/nginx/html/images/.chef-logo20180423-3855-e9xvri.svg	2018-04-23 19:23:09.225367427 +0530
      @@ -1 +1,59 @@
      +<?xml version="1.0" encoding="utf-8"?>
      +<!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
      +<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
      +<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
      +	 width="235.061px" height="55px" viewBox="0 0 235.061 55" enable-background="new 0 0 235.061 55" xml:space="preserve">
      +<g>
      +	<defs>
      +		<rect id="SVGID_1_" x="-468.661" y="-339.791" width="1224" height="792"/>
      +	</defs>
      +	<clipPath id="SVGID_2_">
      +		<use xlink:href="#SVGID_1_"  overflow="visible"/>
      +	</clipPath>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M63.287,27.403v-0.124c0-12.331,9.295-22.432,22.618-22.432
      +		c8.18,0,13.075,2.727,17.103,6.693l-6.072,7.002c-3.347-3.036-6.755-4.895-11.092-4.895c-7.312,0-12.58,6.073-12.58,13.508v0.124
      +		c0,7.436,5.143,13.633,12.58,13.633c4.957,0,7.993-1.983,11.401-5.081l6.073,6.134c-4.461,4.771-9.418,7.746-17.785,7.746
      +		C72.769,49.711,63.287,39.858,63.287,27.403"/>
      +	<polygon clip-path="url(#SVGID_2_)" fill="#FFFFFF" points="110.94,5.591 120.482,5.591 120.482,22.756 138.081,22.756 
      +		138.081,5.591 147.624,5.591 147.624,48.967 138.081,48.967 138.081,31.555 120.482,31.555 120.482,48.967 110.94,48.967 	"/>
      +	<polygon clip-path="url(#SVGID_2_)" fill="#FFFFFF" points="159.274,5.591 191.993,5.591 191.993,14.081 168.756,14.081 
      +		168.756,22.88 189.204,22.88 189.204,31.369 168.756,31.369 168.756,40.478 192.303,40.478 192.303,48.967 159.274,48.967 	"/>
      +	<polygon clip-path="url(#SVGID_2_)" fill="#FFFFFF" points="202.032,5.591 235.061,5.591 235.061,14.267 211.575,14.267 
      +		211.575,23.499 232.271,23.499 232.271,32.175 211.575,32.175 211.575,48.967 202.032,48.967 	"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M27.501,39.886c-6.83,0-12.386-5.556-12.386-12.386s5.556-12.386,12.386-12.386
      +		c5.638,0,10.403,3.787,11.897,8.949h4.793c-1.595-7.753-8.472-13.602-16.691-13.602c-9.395,0-17.039,7.644-17.039,17.039
      +		c0,9.395,7.644,17.038,17.039,17.038c8.219,0,15.096-5.848,16.691-13.601h-4.793C37.904,36.1,33.139,39.886,27.501,39.886"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M19.152,35.849c2.139,2.139,5.093,3.464,8.349,3.464v-4.938
      +		c-1.898,0-3.617-0.77-4.861-2.014L19.152,35.849z"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M15.688,27.5c0,1.691,0.36,3.299,1.002,4.755l4.518-1.987
      +		c-0.373-0.847-0.582-1.783-0.582-2.768c0-3.797,3.079-6.875,6.875-6.875v-4.938C20.987,15.686,15.688,20.986,15.688,27.5"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M31.785,16.491l-1.791,4.604c1.462,0.57,2.683,1.624,3.461,2.968h5.348
      +		C37.747,20.595,35.135,17.799,31.785,16.491"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M29.994,33.905l1.791,4.604c3.35-1.309,5.962-4.104,7.019-7.572h-5.349
      +		C32.676,32.281,31.456,33.335,29.994,33.905"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M5.646,34.108c-0.079-0.259-0.153-0.52-0.222-0.782
      +		c-0.004-0.016-0.008-0.032-0.013-0.047c-0.064-0.243-0.123-0.487-0.179-0.731c-0.012-0.05-0.021-0.1-0.033-0.15
      +		c-0.047-0.211-0.09-0.422-0.131-0.635c-0.019-0.094-0.034-0.189-0.051-0.284c-0.03-0.169-0.06-0.339-0.086-0.509
      +		c-0.022-0.146-0.042-0.292-0.061-0.438c-0.134-0.996-0.206-2.008-0.206-3.033H0c-0.001,1.118,0.069,2.222,0.201,3.311H0.2
      +		c0.003,0.024,0.007,0.048,0.01,0.071c0.037,0.297,0.078,0.593,0.124,0.887c0.013,0.081,0.027,0.161,0.041,0.242
      +		c0.04,0.241,0.082,0.483,0.128,0.723c0.025,0.127,0.052,0.254,0.078,0.381c0.04,0.191,0.08,0.382,0.124,0.571
      +		c0.038,0.167,0.081,0.333,0.122,0.499c0.038,0.148,0.074,0.297,0.114,0.445c0.053,0.196,0.109,0.391,0.166,0.585
      +		c0.024,0.082,0.045,0.165,0.069,0.245l0.003-0.001c0.322,1.066,0.704,2.105,1.147,3.112l4.275-1.879
      +		C6.231,35.855,5.914,34.993,5.646,34.108z"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M27.501,50.336c-6.296,0-12.003-2.563-16.138-6.699l-3.305,3.305
      +		C13.034,51.919,19.907,55,27.501,55c14.024,0,25.595-10.497,27.287-24.062H50.08C48.417,41.905,38.925,50.336,27.501,50.336"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M27.501,4.663c5.115,0,9.841,1.691,13.651,4.543l2.795-3.746
      +		C39.361,2.031,33.668,0,27.501,0C15.832,0,5.861,7.269,1.868,17.525l4.352,1.693C9.542,10.708,17.829,4.663,27.501,4.663"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M50.079,24.062h4.708c-0.504-4.047-1.889-7.821-3.955-11.125l-3.965,2.474
      +		C48.486,17.997,49.603,20.926,50.079,24.062"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M44.775,24.062H49.5c-1.233-7.921-6.658-14.47-13.926-17.308l-1.688,4.337
      +		C39.414,13.25,43.595,18.121,44.775,24.062"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M27.501,9.888L27.501,9.888l0-4.652h0c-9.43,0-17.508,5.893-20.747,14.19
      +		l4.335,1.687C13.651,14.55,20.042,9.888,27.501,9.888"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#F38B00" d="M9.89,27.5L9.89,27.5H5.237c0,9.356,5.803,17.377,13.997,20.667l1.727-4.318
      +		C14.479,41.246,9.89,34.9,9.89,27.5"/>
      +	<path clip-path="url(#SVGID_2_)" fill="#FFFFFF" d="M27.501,45.111v4.652c11.107,0,20.34-8.176,21.999-18.826h-4.724
      +		C43.172,39.008,36.036,45.111,27.501,45.111"/>
      +</g>
      +</svg>
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-active.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/nav-active.gif
      - update content in file /var/opt/opscode/nginx/html/images/nav-active.gif from none to 3db5e5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-bg.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/nav-bg.gif
      - update content in file /var/opt/opscode/nginx/html/images/nav-bg.gif from none to a64d7c
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/nav-hover.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/nav-hover.gif
      - update content in file /var/opt/opscode/nginx/html/images/nav-hover.gif from none to 735c67
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/photo.jpg] action create
      - create new file /var/opt/opscode/nginx/html/images/photo.jpg
      - update content in file /var/opt/opscode/nginx/html/images/photo.jpg from none to c86a08
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-blocks.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-blocks.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-blocks.gif from none to b76a8f
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-footer-bottom.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-footer-bottom.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-footer-bottom.gif from none to 664672
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-footer-list.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-footer-list.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-footer-list.gif from none to fb81f5
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-login.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-login.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-login.gif from none to 8796a8
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/separator-post-info.gif] action create
      - create new file /var/opt/opscode/nginx/html/images/separator-post-info.gif
      - update content in file /var/opt/opscode/nginx/html/images/separator-post-info.gif from none to 6a3483
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
    * cookbook_file[/var/opt/opscode/nginx/html/images/upMenuArrow.png] action create
      - create new file /var/opt/opscode/nginx/html/images/upMenuArrow.png
      - update content in file /var/opt/opscode/nginx/html/images/upMenuArrow.png from none to d3a446
      (new content is binary, diff output suppressed)
      - change mode from '' to '0644'
      - change owner from '' to 'root'
      - change group from '' to 'root'
      - restore selinux security context
  
Recipe: private-chef::nginx
  * template[/var/opt/opscode/nginx/etc/scripts/config.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/config.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/config.lua from none to dc5623
    --- /var/opt/opscode/nginx/etc/scripts/config.lua	2018-04-23 19:23:09.804384713 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-config20180423-3855-1o2xq74.lua	2018-04-23 19:23:09.803384683 +0530
    @@ -1 +1,206 @@
    +-- this script exposes get_org_config which returns an array of
    +-- darklaunch configuration maps retrieved from redis
    +module("config", package.seeall)
    +
    +-- NOTE: assumption that the following is defined globally:
    +-- redis = require("resty/redis")
    +
    +local redis_password = os.getenv("REDIS_PASSWORD")
    +
    +local failsafe_config = {}
    +failsafe_config["dl_default"] = {}
    +failsafe_config["dl_default"][1] = "503_mode"
    +failsafe_config["dl_default"][2] = true
    +
    +-- Client must set these via set_ban_refresh_interval
    +-- and set_maint_refresh_interval.
    +maint_refresh_interval = nil
    +ban_refresh_interval = nil
    +default_org = false
    +
    +local function b_to_i(v)
    +  -- these values are coming back as a string from redis. Handle both scenarios
    +  -- so that we don't break if our redis interface gets smarter down the road.
    +  if v == "true" or v == true then
    +    return 1
    +  elseif v == "false" or v == false then
    +    return 0
    +  else
    +    return v -- preserve string values
    +  end
    +end
    +
    +local function array_to_hash(t)
    +  local h = {}
    +  for i = 1, #t, 2 do
    +    h[t[i]] = t[i + 1]
    +  end
    +  return h
    +end
    +
    +local function auth_not_required(err)
    +  -- conservatively try to determine if auth is not required.
    +  -- if auth isn't required, we can safely ignore an error from
    +  -- the AUTH command
    +  return err == "ERR Client sent AUTH, but no password is set"
    +end
    +
    +local function connect_redis()
    +   local red = redis:new()
    +   red:set_timeout(1000)
    +   local ok, err = red:connect("127.0.0.1", 16379)
    +
    +   if not ok then
    +      ngx.log(ngx.ERR, "failed to connect redis: ", err)
    +   end
    +
    +   if redis_password == nil then
    +      ngx.log(ngx.ERR, "REDIS_PASSWORD not found in the environment")
    +      ok = false
    +   else
    +      local ok, err = red:auth(redis_password)
    +      if not ok then
    +         if auth_not_required(err) then
    +            ok = true
    +         else
    +            ngx.log(ngx.ERR, "failed to authenticate to redis: ", err)
    +        end
    +      end
    +   end
    +   return ok, red
    +end
    +
    +local function close_redis(red)
    +  local ok, err = red:set_keepalive(2000, 250)
    +  if not ok then
    +    ngx.log(ngx.ERR, "Failed to set keepalive: " .. err)
    +  end
    +end
    +
    +-- Get configuration information for default/orgname/override in pipelined fashion
    +-- return failsafe defaults if redis error occurs otherwise an array of results.
    +local function redis_pipelined_get_config(red, orgname)
    +  red:init_pipeline()
    +  red:hgetall("dl_default")
    +  red:hgetall("dl_org_" .. orgname)
    +  red:hgetall("dl_override")
    +  local results, err = red:commit_pipeline()
    +  if not results then
    +    ngx.log(ngx.ERR, "failed to commit the pipelined requests: " .. err )
    +    results = failsafe_config
    +  end
    +  return results
    +end
    +
    +local function redis_fetch_set(set_name)
    +  local result = {}
    +  local ok, red = connect_redis()
    +  if ok then
    +    result, err = red:smembers(set_name);
    +    if err then
    +      ngx.log(ngx.ERR, "Redis read error retrieving " .. set_name .. ": " .. err);
    +      ok = false
    +    else
    +      close_redis(red)
    +    end
    +  end
    +  return ok, result
    +end
    +
    +-- Connect to redis and retrieve configuration for this org.
    +local function get_org_config(orgname)
    +  local ok, red = connect_redis()
    +  if ok then
    +    results = redis_pipelined_get_config(red, orgname)
    +    close_redis(red)
    +  else
    +    results = failsafe_config
    +  end
    +  return results
    +end
    +
    +-- Examines the shared_dict provided and determine if it needs updating
    +-- based on expiry time.  If so, it clears all entries and refreshes
    +-- the dict data from redis
    +local function refresh_expiring_set(shared_dict, name, interval)
    +  local updated_at = shared_dict:get("updated_at");
    +  if updated_at == nil or (ngx.now() - updated_at) >= interval then
    +    ok, updated_data = redis_fetch_set(name)
    +    if ok then
    +       shared_dict:flush_all();
    +       for index, key in ipairs(updated_data) do
    +         shared_dict:set(key, true);
    +       end
    +       shared_dict:set("updated_at", ngx.now());
    +    end
    +  end
    +end
    +
    +-- return true if our systems are in maintenance mode
    +-- and the remote address is not excluded from maintenance mode
    +-- will refresh maint-mode state and whitelisted IPs periodically.
    +function config.is_in_maint_mode_for_addr(remote_addr)
    +  local maint = ngx.shared.maint_data
    +  refresh_expiring_set(maint, "maint_data", maint_refresh_interval)
    +  return maint:get("maint_mode")
    +end
    +
    +-- This does not attempt to refresh the maintenance mode data, as it's
    +-- intended to be invoked only after main data has been loaded/refreshed earlier int he flow
    +function config.is_route_in_maint_mode(route_id)
    +  local maint = ngx.shared.maint_data
    +  return maint:get("maint_mode_" .. route_id)
    +end
    +
    +function config.is_route_darklaunched(route_id)
    +  local maint = ngx.shared.maint_data
    +  return maint:get("dl_" .. route_id)
    +end
    +
    +-- return true if the given address is maintenance mode
    +-- whitelist
    +function config.is_addr_whitelisted(component, remote_addr)
    +  return false
    +end
    +
    +
    +function config.is_addr_banned(remote_addr)
    +  return false
    +end
    +
    +-- Get 'raw' org configuration - nested array of darklaunch rules
    +function config.raw_org_config(org)
    +  local results = get_org_config(org)
    +  local c = {}
    +  local i = 1
    +  for index, result in pairs(results) do
    +    c[i] = {}
    +    for k, v in pairs(array_to_hash(result)) do c[i][k] = v end
    +    i = i + 1
    +  end
    +  return c
    +end
    +
    +-- Get org configuration and darklaunch rules
    +function config.org_config(org)
    +  local results = get_org_config(org or "_OC_INTERNAL_NO_ORG")
    +  -- merge results into a single table, with later key values overwriting earlier ones.
    +  local org_config = {}
    +  for index, result in pairs(results) do
    +    for k, v in pairs(array_to_hash(result)) do org_config[k] = b_to_i(v) end
    +  end
    +  return org_config
    +end
    +
    +function set_ban_refresh_interval(interval)
    +  ban_refresh_interval = interval
    +end
    +
    +function set_maint_refresh_interval(interval)
    +  maint_refresh_interval = interval
    +end
    +
    +function set_default_org(org)
    +  default_org = org
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/scripts/dispatch.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/dispatch.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/dispatch.lua from none to 49af81
    --- /var/opt/opscode/nginx/etc/scripts/dispatch.lua	2018-04-23 19:23:09.879386952 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-dispatch20180423-3855-o3sfej.lua	2018-04-23 19:23:09.879386952 +0530
    @@ -1 +1,107 @@
    +-- Note: these modules are loaded during server init, since they're
    +-- used in every request:
    +-- routes = routes.lua
    +-- config = config.lua
    +-- resolver = resolver.lua
    +
    +local mode = ngx.var.mode
    +local internal = false
    +local min_version = 10
    +
    +local remote_addr = ngx.var.remote_addr
    +
    +
    +-- Before we go any further, check banned IPs
    +if config.is_addr_banned(remote_addr) then
    +    ngx.exit(ngx.HTTP_FORBIDDEN)
    +end
    +
    +-- If chef-user is missing then it's presumably not a chef client.
    +local userid = ngx.var.http_x_ops_userid or ""
    +local uri = ngx.var.uri
    +
    +-- A couple of early-exit validations that are specific
    +-- to an api vhost:
    +if mode == "api" then
    +  -- If we've defined an override upstream and we don't have a userid, use
    +  -- the override upstream.
    +  local override_upstream = ngx.var.add_on_override_upstream
    +  if userid == "" and override_upstream ~= "" then
    +    ngx.var.upstream = override_upstream
    +    return
    +  end
    +
    +  -- Internal API does not validate chef version
    +  if not internal then
    +    -- Exit early: If they don't have the right chef version, send them packing.
    +    local version = ngx.var.http_x_chef_version
    +    if version then
    +      if not routes.is_client_version_valid(version, min_version) then
    +        ngx.status = ngx.HTTP_BAD_REQUEST
    +        ngx.say('{"error": "400 - Bad Request: Chef Client version ' ..
    +                min_version .. ' or higher required. Your version of Chef is ' ..
    +                version .. '."}')
    +        ngx.exit(ngx.HTTP_OK)
    +      end
    +    else
    +        -- the request did not originate with a chef client, we'll give something
    +        -- more friendly to web browsers.
    +        return ngx.exec("/index.html")
    +    end
    +  end
    +
    +  -- Exit early: If they don't have a chef user id we don't want them here.
    +  -- Only API server (both internal and external) verify that user id is present.
    +  if userid == "" then
    +    ngx.exit(ngx.HTTP_UNAUTHORIZED)
    +  end
    +end
    +
    +
    +-- global maint mode && address NOT excluded? no can do, muchacho
    +if config.is_in_maint_mode_for_addr(remote_addr) then
    +  ngx.exit(ngx.HTTP_SERVICE_UNAVAILABLE)
    +end
    +
    +-- Parse the URI to determine that it points to a valid destination
    +-- and extract necessary components to move forward.
    +local route = routes.resolve_uri(mode, uri)
    +
    +-- If we don't have a route identifier it means we  couldn't match the url
    +-- to a valid path.
    +if not route.route_id then
    +  ngx.exit(ngx.HTTP_NOT_FOUND)
    +end
    +
    +-- Load restrictions and darklaunch constraints for this org.
    +-- note that org name may not be valid - we'll use an appropriate default if it's not,
    +-- such as when the URI is valid but does not contain an org name.
    +route.org_config = config.org_config(route.org_name, mode)
    +
    +-- API mode means that internal routing rules do not apply, so only flag as internal if
    +-- we're not in api mode
    +if not (mode == "api") then
    +  route.internal = internal
    +end
    +
    +-- All remaining checks are done with the full request context that we've built
    +-- Any non-zero response indicates an http response code that we must terminate with
    +-- immediately.
    +local response = route_checks.run(route)
    +if (response > 0) then
    +  ngx.exit(response)
    +end
    +
    +-- At long last! Against all odds, they're cleared to move onto
    +-- their final destination. Let's figure out what that is, pack
    +-- them up with a shiny new set of darklaunch headers,
    +-- and send them on their way
    +ngx.var.upstream = resolver.determine_upstream(route)
    +
    +local dl_header = ""
    +
    +for k, v in pairs(route.org_config) do dl_header = dl_header .. k .. "=" .. v .. ";" end
    +ngx.req.set_header("X-Ops-DarkLaunch", dl_header)
    +
    +
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/scripts/resolver.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/resolver.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/resolver.lua from none to 0530d3
    --- /var/opt/opscode/nginx/etc/scripts/resolver.lua	2018-04-23 19:23:09.929388445 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-resolver20180423-3855-1r1pyk9.lua	2018-04-23 19:23:09.929388445 +0530
    @@ -1 +1,54 @@
    +module("resolver", package.seeall)
    +local upstream_resolver = { }
    +
    +-- To preserve the ability to run tests locally, please comment out any
    +-- chef templating if statements so that the un-rendered portions run in tests.
    +-- For example:
    +-- 
    +
    +-- These names map directly to named upstreams
    +upstream_resolver.chef = "opscode_chef"
    +upstream_resolver.erchef = "opscode_erchef"
    +upstream_resolver.acct = "opscode_account"
    +
    +-- Resolve an upstream, applying any necessary darklaunch controls.
    +-- Once we have an upstream name, modify it if the upstream
    +-- is tarpitted per the configuration.
    +upstream_resolver.resolve = function(route)
    +  local upstream = nil
    +  local route_id = route.route_id
    +  local resolver_fun = upstream_resolver[route_id .. "_fun"]
    +  if resolver_fun then
    +    route_id = resolver_fun(route)
    +  end
    +  return upstream_resolver.tarpitify(route_id, route.org_config, route.internal)
    +end
    +
    +-- If config names a tarpit for the given route, then
    +-- alter the upstream name to the appropriate tarpit
    +upstream_resolver.tarpitify = function(route_id, org_config, internal)
    +  local upstream = upstream_resolver[route_id]
    +  -- internal non-API lbs don't tarpit
    +  if internal then
    +    return upstream
    +  end
    +
    +  tarpitid = org_config["tarpit_" .. route_id]
    +  if tarpitid then
    +    return upstream .. "_tarpit" .. tarpitid
    +  end
    +  return upstream
    +end
    +
    +upstream_resolver.acct_erchef_fun = function(route)
    +  if route.org_config["couchdb_" .. route.endpoint] == 0 then
    +    return "erchef"
    +  end
    +  return "acct"
    +end
    +
    +-- If this is an internal non API vhost , the caller must also ensure that route.internal == true
    +function resolver.determine_upstream(route)
    +  return upstream_resolver.resolve(route)
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/scripts/route_checks.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/route_checks.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/route_checks.lua from none to de3920
    --- /var/opt/opscode/nginx/etc/scripts/route_checks.lua	2018-04-23 19:23:09.976389848 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-route_checks20180423-3855-58wfqs.lua	2018-04-23 19:23:09.976389848 +0530
    @@ -1 +1,84 @@
    +module("route_checks", package.seeall)
    +
    +-- To preserve the ability to run tests locally, please comment out any
    +-- chef templating if statements so that the un-rendered portions run in tests.
    +-- For example:
    +-- 
    +
    +local response = {}
    +response[403] = {}
    +response[404] = {}
    +response[503] = {}
    +
    +-- To add checks for a new response code, first declare it above in the form
    +-- response[CODE] = {}, then at minimum add a new function response[CODE].default = function(route)
    +
    +
    +-- To add route-specific checks, add a new function for the given
    +-- response code in the form of response[CODE].ROUTE_ID = function(route)
    +-- This function must return "true" if the request shoudl be terminated with "CODE".
    +--
    +-- For example to implement "a 404 should occur for the users endpoint on the
    +-- "acct" route if we are configured to force users endpoint not found":
    +--
    +-- response[404].acct = function(org_config, endpoint, object_name)
    +--   return endpoint == "users" and org_config['force_users_not_found'] == 1
    +-- end
    +--
    +
    +--
    +-- Default checks -- applied first regardless of endpoint or object-name
    +-- are handled here.
    +--
    +response[503].default = function(route)
    +  if route.org_config["503_mode"] == 1 or
    +     config.is_route_in_maint_mode(route.route_id) then
    +     return true
    +   end
    +  return false
    +end
    +
    +response[404].default = function(route)
    +  -- route-level darklaunch check:
    +  if config.is_route_darklaunched(route.route_id) then
    +    return not (route.org_config["dl_" .. route.route_id] == 1)
    +  end
    +  return false
    +end
    +
    +response[403].default = function(route)
    +  return route.org_config["org_blocked"] == 1
    +end
    +
    +--
    +-- Endpoint-specific checks from here on down.
    +--
    +
    +-- return true if client is posting to "organizations" endpoint but
    +-- new org creation is disabled
    +response[503].acct = function(route)
    +  return route.org_name == nil and
    +         route.endpoint == "organizations" and
    +         ngx.req.get_method() == "POST" and
    +         route.org_config["disable_new_orgs"] == 1
    +end
    +
    +--
    +-- Our only public interface
    +--
    +
    +-- Run all available checks for the given parameters.  Returns 0
    +-- if it's clear to proceed, otherwise it returns an http response code
    +function route_checks.run(route)
    +  for code, check in pairs(response) do
    +    if check.default(route) or
    +       (check[route.route_id] and
    +        check[route.route_id](route)) then
    +      return code
    +    end
    +  end
    +  return 0
    +end
    +
    +
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/scripts/routes.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/routes.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/routes.lua from none to 3947e4
    --- /var/opt/opscode/nginx/etc/scripts/routes.lua	2018-04-23 19:23:10.021391192 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-routes20180423-3855-1jm7698.lua	2018-04-23 19:23:10.021391192 +0530
    @@ -1 +1,272 @@
    +module("routes", package.seeall)
    +
    +-- To preserve the ability to run tests locally, please comment out any
    +-- chef templating if statements so that the un-rendered portions run in tests. 
    +-- For example:
    +-- 
    +
    +-- For lpeg syntax, reference www.inf.puc-rio.br/~roberto/lpeg/
    +local lpeg = require "lpeg"
    +local match = lpeg.match
    +local P  = lpeg.P
    +local B  = lpeg.B
    +local S  = lpeg.S
    +local R  = lpeg.R
    +local C  = lpeg.C
    +local Ct = lpeg.Ct
    +local Cg = lpeg.Cg
    +local Cc = lpeg.Cc
    +
    +-- create a capture that maps the value of 'name' to capture group "route_id"
    +local function Crt(name)
    +  return Cg(Cc(name), "route_id")
    +end
    +
    +-- create a capture that maps the captured value of 'exp' to capture group 'endpoint'
    +local function Cendpoint(exp)
    +  return Cg(exp, "endpoint")
    +end
    +
    +-- match the first argument and set the endpoint to the second argument.
    +-- useful for when you want to set a route to an endpoint whose name
    +-- is not contained in the route.
    +-- for example:
    +--   Cmatch_and_assign_endpoint(p_users, "associations") * p_sep * p_eol
    +-- would match /users(/) and set its endpoint to "associations"
    +local function Cmatch_and_assign_endpoint(p_to_match, endpoint_string)
    +   return p_to_match * Cendpoint(Cc(endpoint_string))
    +end
    +
    +-- Basic identifiers
    +local p_eol = P(-1)
    +local p_lower = R"az"
    +local p_upper = R"AZ"
    +local p_numeric = R"09"
    +local p_special = S"_-"
    +local p_sep = P"/"
    +local p_dot = P"."
    +
    +-- Route Components
    +local p_org = P"organizations"
    +local p_org_base = P"/organizations"
    +local p_auth_user = P"authenticate_user"
    +local p_system_recovery = P"system_recovery"
    +local p_license = P"license"
    +local p_api_version = P"server_api_version"
    +local p_acl = P"/_acl"
    +local p_search = P"search"
    +local p_nodes = P"nodes"
    +local p_cookbooks = P"cookbooks"
    +local p_data = P"data"
    +local p_roles = P"roles"
    +local p_sandboxes = P"sandboxes"
    +local p_environments = P"environments"
    +local p_users = P"users"
    +local p_groups = P"groups"
    +local p_containers = P"containers"
    +local p_association_requests = P"association_requests"
    +local p_clients = P"clients"
    +local p_runs = P"runs"
    +local p_principals = P"principals"
    +local p_internal_organizations_base = P"/internal-organizations"
    +local p_controls = P"controls"
    +local p_keys = P"keys"
    +local p_policyfile = P"policies"
    +local p_policy_groups = P"policy_groups"
    +local p_cookbook_artifacts = P"cookbook_artifacts"
    +local p_universe = P"universe"
    +
    +
    +-- Composite patterns
    +local p_maybe_sep = p_sep^-1
    +local p_trailing_sep = p_maybe_sep * p_eol
    +local p_org_identifier_char = p_lower + p_numeric + p_special
    +local p_org_identifier = p_org_identifier_char^1
    +local p_until_next_separator = (P(1) - p_sep)^1
    +
    +-- Because we implement different identifiers differently (users & orgs have one set of rules,
    +-- other objects have different rules) accept anything up to but not including the separator
    +-- as an identifier sufficient to pass along to the upstream.
    +local p_identifier = p_until_next_separator
    +
    +local p_org_prefix = p_org_base * p_sep
    +local p_named_org = p_org_prefix * Cg(p_org_identifier, "org_name")
    +local p_named_org_prefix = p_named_org * p_sep
    +local p_all_until_acl = (P(1) - p_acl)^1
    +-- Not techncially for routing, this will be used to capture chef version from inbound headers
    +-- leaving it here to keep all of our grammar in one location.
    +local p_chef_version = Cg(p_numeric^1, "major") * p_dot * Cg(p_numeric^1, "minor") * p_dot
    +
    +
    +-- ROUTE CAPTURES
    +-- These captures will map the constant name to the capture group "route_id".
    +-- If you're adding a new route, the first step is to define the capture that returns
    +-- the route name below:
    +
    +local c_acct = Crt("acct")
    +local c_erchef = Crt("erchef")
    +local c_acct_erchef = Crt("acct_erchef")
    +
    +-- The "valid identifier" capture is used for any object name such
    +-- as node name, user name, etc.
    +local c_identifier = Cg(p_identifier, "object_name")
    +
    +local c_maybe_identifier = (p_sep * c_identifier)^-1
    +
    +local p_erchef_endpoint = p_cookbooks + p_data + p_roles + p_sandboxes +
    +                          p_environments + p_clients + p_nodes + p_principals +
    +                          p_groups + p_containers + p_controls +
    +                          p_policy_groups + p_policyfile + p_cookbook_artifacts + p_universe
    +
    +
    +-- endpoints that map directly to erchef
    +-- If an object identifier is present - as identified with /IDENTIFIER - then
    +-- capture it. Otherwise -- require end-of-line (in other words, avoid the case
    +-- of "/nodesSOMEDATA" resolving to 'nodes' endpoint.
    +local p_erchef_direct = (Cendpoint(p_erchef_endpoint) * ((p_sep * c_identifier) + (p_maybe_sep * p_eol))) +
    +                        Cendpoint(p_search)
    +
    +-- users endpoint is currently split between erchef and account.
    +-- /users, /users/USERNAME/, /authenticate_user, and /system_recover -> erchef
    +-- /users/USERNAME/organizations, /users/USERNAME/association_requests go to account
    +local p_erchef_users = (p_sep * Cendpoint(p_users) * p_trailing_sep) +
    +                       (p_sep * Cendpoint(p_users) * (p_sep * c_identifier)^-1 * p_trailing_sep) +
    +                       (p_sep * Cendpoint(p_auth_user) * p_trailing_sep) +
    +                       (p_sep * Cendpoint(p_system_recovery) * p_trailing_sep)
    +
    +local p_keys_route = ((p_named_org_prefix * p_clients * p_sep * p_identifier * p_sep * Cendpoint(p_keys)) +
    +                      (p_named_org_prefix * p_users * p_sep * p_identifier * p_sep * Cendpoint(p_keys)) +
    +                      (p_sep * p_users * p_sep * p_identifier * p_sep * Cendpoint(p_keys))) *
    +                        ((p_sep * c_identifier)^-1 * p_trailing_sep)
    +
    +
    +local p_license_route = (p_sep * Cendpoint(p_license) * p_trailing_sep)
    +local p_server_api_version_route = (p_sep * Cendpoint(p_api_version) * p_trailing_sep)
    +
    +-- Everything that gets sent to erchef
    +local p_erchef = p_keys_route +
    +                 (p_named_org_prefix * p_erchef_direct) +
    +                 p_erchef_users +
    +                 p_license_route +
    +                 p_server_api_version_route
    +
    +-- erchef routing rules for chef_internal, which includes an additional
    +-- principals endpoint not exposed via the api rules
    +local p_erchef_int = p_erchef +
    +                    (p_named_org_prefix * Cendpoint(p_principals) * p_maybe_sep)
    +
    +-- /users endpoints for account:
    +local p_named_user = (p_sep * p_users * p_sep * c_identifier)
    +
    +
    +                     -- /organizations/:orgname/association_requests(/), custom endpoint for darklaunch
    +local p_acct_users = (p_named_org_prefix * Cendpoint(p_association_requests) * (p_sep + p_eol)) +
    +                     -- /organizations/:orgname/users/:username(/), endpoint "associations" for darklaunch
    +                     (p_named_org_prefix * Cmatch_and_assign_endpoint(p_users, "associations") * p_sep * c_identifier * (p_sep + p_eol)) +
    +                     -- /organizations/:orgname/users(/)
    +                     (p_named_org_prefix * Cmatch_and_assign_endpoint(p_users, "associations") * (p_sep + p_eol)) +
    +                     -- /users/:username/(/)association_requets(/) OR /users/:username/organiztaions(/)
    +                     p_named_user *
    +                       -- below rule for backwards compatibility with original:
    +                       -- /users/BLAH/{0,1}/association_requests
    +                       -- which permits: /users/BLAH//association_requests
    +                       ((p_sep * p_maybe_sep * Cendpoint(p_association_requests) * (p_sep + p_eol)) +
    +                       -- set /users/:username/organizations(/) to endpoint "associations" so we
    +                       -- can darklaunch it
    +                       (p_sep * Cmatch_and_assign_endpoint(p_org, "associations") * p_trailing_sep) )
    +
    +
    +-- /organizations(/:orgname/)
    +local p_org_endpoint = (p_sep * Cendpoint(p_org) * (p_sep * Cg(p_org_identifier, "org_name"))^-1 * p_trailing_sep)
    +
    +-- note that the acl endpoint is a special case because it supercedes all others
    +-- including routes that would otherwise go to erchef.
    +local p_acl_endpoint = (p_named_org_prefix * p_all_until_acl * Cendpoint(p_acl) * (p_sep + p_eol)) +
    +                       (p_named_user * Cendpoint(p_acl) * (p_sep + p_eol))
    +
    +
    +-- Default org endpoints. This is to help with migrating from OSC 11 to Chef Server 12
    +local p_default_org_endpoints = p_search + p_nodes + p_cookbooks + p_data + p_roles + p_sandboxes +
    +      p_environments + p_clients + p_runs + p_principals + p_groups + p_containers
    +
    +-- acct_erchef endpoints that are also routed to internal_acct
    +local p_internal_acct_erchef_endpoints = p_acct_users + p_org_endpoint
    +
    +local uri_resolvers = {
    +  -- Retain ordering to ensure proper eval:
    +  -- p_acl_endpont must come first because a trailing _acl takes precedence
    +  -- over any other identifiers which may be in the url.
    +
    +  api = (p_acl_endpoint * c_acct_erchef) +
    +        (p_erchef * c_erchef) +
    +        (p_internal_acct_erchef_endpoints * c_acct_erchef),
    +
    +  -- This one is easy - everything passes through, though we'll still need to capture components
    +  -- (org name, object name, endpoint name) where we can, so that post-route hooks can be applied.
    +  internal_acct =
    +                  -- as in API, acls come first so that we can ensure webui requests for
    +                  -- acls get routed correctly to account, even when the underlying object is
    +                  -- darklaunched to erchef.
    +                  (p_acl_endpoint * c_acct_erchef) +
    +
    +                  -- TODO confirm - this should no longer be required.
    +                  -- Special case: webui1 will still send requests for clients over to us, so
    +                  -- we have to be able to route migrated endpoints (that used to be acct) to erchef.
    +                  -- we will need to continue to add migrated acct->erchef endpoints here
    +                  -- until we either correct or retire webui 1
    +                  ((p_named_org_prefix * Cendpoint(p_clients) * c_maybe_identifier) * c_erchef) +
    +                  (p_erchef_users * c_erchef) +
    +                  (p_internal_acct_erchef_endpoints * c_acct_erchef) +
    +                  (p_internal_organizations_base * c_acct),
    +
    +  -- Anything that routes to erchef or reporting is handled here.
    +  internal_chef = (p_erchef_int * c_erchef)
    +}
    +
    +-- Checks if the request is for default orgs
    +local function needs_default_org(uri)
    +  return match(p_sep * p_default_org_endpoints, uri)
    +end
    +
    +-- caller should bypass this client version check if caller is internal lb
    +function routes.is_client_version_valid(version, min)
    +  local res = match(Ct(p_chef_version), version)
    +  if (res == nil) then
    +    return false
    +  end
    +  local major = tonumber(res.major)
    +  local minor = tonumber(res.minor)
    +  if (major or minor) and
    +     -- Look at the provided arguments, but 'special case' from before we
    +     -- changed our version string format. ONce we desupport that version,
    +     -- we will need to make a final update here.
    +     (major >= min or (major == 0 and minor == 10)) then
    +    return true
    +  end
    +  return false
    +end
    +
    +-- Return a table containing:
    +-- route_id (route id, nil if invalid route)
    +-- org_name (nil if not found)
    +-- endpoint (nil if not found)
    +-- object_name (nil if not found)
    +function routes.resolve_uri(mode, uri)
    +  if config.default_org and needs_default_org(uri) then
    +    uri = '/organizations/' .. config.default_org .. uri
    +    -- Deliberately do not rewrite uri here, and pass the
    +    -- original to erchef. Client requests are checksummed
    +  end
    +  route = match(Ct(uri_resolvers[mode]), uri)
    +  if not route then
    +    route = {}
    +  end
    +
    +  -- normalize /_acl endpoint to acls
    +  if route.endpoint == "/_acl" then
    +    route.endpoint = "acls"
    +  end
    +
    +  return route
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/dispatch_route.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/dispatch_route.lua from none to 993889
    --- /var/opt/opscode/nginx/etc/scripts/dispatch_route.lua	2018-04-23 19:23:10.129394416 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-dispatch_route20180423-3855-1wo7g6w.lua	2018-04-23 19:23:10.128394386 +0530
    @@ -1 +1,41 @@
    +-- This is for use with the internal /_routes endpoints
    +local cjson = require("cjson")
    +cjson.encode_keep_buffer(false)
    +args = ngx.req.get_uri_args()
    +
    +-- Let's go ahead pull the meat out of the url - easy, since we're guaranteed that our URI
    +-- is prefixed with "/_route/"
    +local uri = string.sub(ngx.var.uri, 8)
    +local route = routes.resolve_uri("api", uri)
    +if not route.route_id then
    +  ngx.say('{"error": "no route exists for the uri ' .. uri .. '"}')
    +  ngx.exit(ngx.HTTP_OK)
    +end
    +
    +route.org_config = config.org_config(route.org_name)
    +upstream = resolver.determine_upstream(route)
    +--
    +-- construct a table with response data, then serialize to json
    +local json = {}
    +-- Start out with the basics
    +json['org_name'] = route.org_name
    +json['upstream_target'] = upstream
    +json['uri'] = uri
    +json['route'] = route.route_id
    +json['endpoint'] = route.endpoint
    +json['object_name'] = route.object_name or ""
    +json['config'] = {}
    +json['config']['merged'] = route.org_config
    +
    +-- debug config - include merged and default/org/override config.
    +if args['all'] == "1" then
    +  local raw = config.raw_org_config(org_name)
    +  json['config']['default'] = raw[1]
    +  json['config']['org'] = raw[2]
    +  json['config']['override'] = raw[3]
    +end
    +
    +-- Send it back and done.
    +ngx.say(cjson.encode(json))
    +ngx.exit(ngx.HTTP_OK)
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/scripts/validator.lua] action create
    - create new file /var/opt/opscode/nginx/etc/scripts/validator.lua
    - update content in file /var/opt/opscode/nginx/etc/scripts/validator.lua from none to 838cb8
    --- /var/opt/opscode/nginx/etc/scripts/validator.lua	2018-04-23 19:23:10.210396834 +0530
    +++ /var/opt/opscode/nginx/etc/scripts/.chef-validator20180423-3855-s1yq7b.lua	2018-04-23 19:23:10.210396834 +0530
    @@ -1 +1,37 @@
    +module("validator", package.seeall)
    +
    +-- Map to translate HTTP verbs to ngx.HTTP_* numericals
    +local HTTP_REQ_MAP = {
    +  GET = ngx.HTTP_GET,
    +  POST = ngx.HTTP_POST,
    +}
    +
    +-- Validate the request against the `/validate` endpoint.
    +-- method: The allowed HTTP verb as a string. e.g: "GET", "POST"
    +function validator.validate(method)
    +  if ngx.var.request_method ~= method then
    +    ngx.exit(ngx.HTTP_NOT_ALLOWED)
    +  end
    +
    +  -- ngx.req.read_body() is required when using ngx.location.capture()
    +  ngx.req.read_body()
    +
    +  local res = ngx.location.capture(
    +    "/organizations/" .. ngx.var.request_org .. "/validate" .. ngx.var.request_uri,
    +    {
    +      method = HTTP_REQ_MAP[ngx.req.get_method()],
    +      always_forward_body = true,
    +      copy_all_vars = true
    +    }
    +  )
    +
    +  if res.status == ngx.HTTP_OK then
    +    return
    +  else
    +    -- return the validation sub-request error message
    +    ngx.status = res.status
    +    ngx.say(res.body)
    +    ngx.exit(res.status)
    +  end
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * file[/var/opt/opscode/nginx/stats_htpasswd] action create
    - create new file /var/opt/opscode/nginx/stats_htpasswd
    - update content in file /var/opt/opscode/nginx/stats_htpasswd from none to 5f674b
    - suppressed sensitive resource
    - change mode from '' to '0400'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/chef_https_lb.conf] action create
    - create new file /var/opt/opscode/nginx/etc/chef_https_lb.conf
    - update content in file /var/opt/opscode/nginx/etc/chef_https_lb.conf from none to 36b708
    --- /var/opt/opscode/nginx/etc/chef_https_lb.conf	2018-04-23 19:23:10.434403522 +0530
    +++ /var/opt/opscode/nginx/etc/.chef-chef_https_lb20180423-3855-1v12nuh.conf	2018-04-23 19:23:10.433403492 +0530
    @@ -1 +1,119 @@
    +  server {
    +    listen 443;
    +    server_name localhost;
    +
    +    set_by_lua $data_collector_token 'return os.getenv("DATA_COLLECTOR_TOKEN")';
    +
    +    access_log /var/log/opscode/nginx/access.log opscode;
    +      ssl on;
    +      ssl_certificate /var/opt/opscode/nginx/ca/localhost.crt;
    +      ssl_certificate_key /var/opt/opscode/nginx/ca/localhost.key;
    +      ssl_dhparam /var/opt/opscode/nginx/ca/dhparams.pem;
    +
    +      ssl_session_timeout 5m;
    +
    +      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    +      ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES:!aNULL:!eNULL:!EXPORT;
    +      ssl_prefer_server_ciphers on;
    +    root /var/opt/opscode/nginx/html;
    +    client_max_body_size 250m;
    +
    +    proxy_set_header Host $host;
    +    proxy_set_header X-Real-IP $remote_addr;
    +    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header X-Forwarded-Proto https;
    +    proxy_pass_request_headers on;
    +    proxy_connect_timeout   1;
    +    proxy_send_timeout      300;
    +    proxy_read_timeout      300;
    +
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header X-XSS-Protection 1;
    +      add_header Strict-Transport-Security max-age=31536000;
    +
    +    error_page 404 =404 /404.html;
    +    error_page 503 =503 /503.json;
    +
    +    # Whitelist the docs necessary to serve up error pages and friendly
    +    # html to non-chef clients hitting this host.
    +    location ~ "^/[0-9]{3,3}\.(json|html)|favicon.ico|index.html$" {
    +    }
    +    location "/css/" {
    +    }
    +    location "/images/" {
    +    }
    +
    +    location /version {
    +      types { }
    +      default_type text/plain;
    +      alias /opt/opscode/version-manifest.txt;
    +    }
    +
    +    location ~ "^/organizations/([^/]+)/validate" {
    +      allow 127.0.0.1;
    +      allow ::1;
    +      deny all;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +
    +
    +    location ~ "^/organizations/([^/]+)/required_recipe$" {
    +      # This endpoint is unique because it is defined via nginx and is not
    +      # handled by an upstream like oc_erchef. In order to make responses
    +      # consistent between Chef server and chef-zero we'll always enable
    +      # the location but explicitly return a 404 when the feature is disabled,
    +      # rather than leave it undefined. If we were to leave it undefined any
    +      # non-signed requests would be routed to the main index page and return
    +      # a 200 instead of 404.
    +      return 404;
    +    }
    +
    +
    +    # bookshelf
    +    location ~ "^/bookshelf/organization-.+" {
    +      proxy_pass http://bookshelf;
    +    }
    +
    +    # erchef status endpoint
    +    location ~ "^/_status/?$" {
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # erchef stats endpoint
    +    location ~ "^/_stats/?$" {
    +      auth_basic "Chef Server Admin Stats";
    +      auth_basic_user_file /var/opt/opscode/nginx/stats_htpasswd;
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # This variable is set to an empty string here so it can be used in
    +    # dispatch.lua later on. An add-on can set this variable to be used as an
    +    # upstream if we determine the request was not intended to go to the API.
    +    set $add_on_override_upstream "";
    +
    +    # Include external routes for addons
    +    include /var/opt/opscode/nginx/etc/addon.d/*_external.conf;
    +
    +    location /_route/ {
    +      default_type 'application/json';
    +      content_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua';
    +    }
    +
    +    location / {
    +      satisfy any;
    +
    +
    +      set $mode "api";
    +      set $upstream "";
    +      rewrite_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch.lua';
    +      proxy_pass http://$upstream;
    +      proxy_redirect http://$upstream /;
    +    }
    +  }
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/chef_http_lb.conf] action create
    - create new file /var/opt/opscode/nginx/etc/chef_http_lb.conf
    - update content in file /var/opt/opscode/nginx/etc/chef_http_lb.conf from none to aedc00
    --- /var/opt/opscode/nginx/etc/chef_http_lb.conf	2018-04-23 19:23:10.544406806 +0530
    +++ /var/opt/opscode/nginx/etc/.chef-chef_http_lb20180423-3855-81pobk.conf	2018-04-23 19:23:10.544406806 +0530
    @@ -1 +1,108 @@
    +  server {
    +    listen 80;
    +    server_name localhost;
    +
    +    set_by_lua $data_collector_token 'return os.getenv("DATA_COLLECTOR_TOKEN")';
    +
    +    access_log /var/log/opscode/nginx/access-port-80.log opscode;
    +    root /var/opt/opscode/nginx/html;
    +    client_max_body_size 250m;
    +
    +    proxy_set_header Host $host;
    +    proxy_set_header X-Real-IP $remote_addr;
    +    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header X-Forwarded-Proto https;
    +    proxy_pass_request_headers on;
    +    proxy_connect_timeout   1;
    +    proxy_send_timeout      300;
    +    proxy_read_timeout      300;
    +
    +      add_header X-Frame-Options DENY;
    +      add_header X-Content-Type-Options nosniff;
    +      add_header X-XSS-Protection 1;
    +
    +    error_page 404 =404 /404.html;
    +    error_page 503 =503 /503.json;
    +
    +    # Whitelist the docs necessary to serve up error pages and friendly
    +    # html to non-chef clients hitting this host.
    +    location ~ "^/[0-9]{3,3}\.(json|html)|favicon.ico|index.html$" {
    +    }
    +    location "/css/" {
    +    }
    +    location "/images/" {
    +    }
    +
    +    location /version {
    +      types { }
    +      default_type text/plain;
    +      alias /opt/opscode/version-manifest.txt;
    +    }
    +
    +    location ~ "^/organizations/([^/]+)/validate" {
    +      allow 127.0.0.1;
    +      allow ::1;
    +      deny all;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +
    +
    +    location ~ "^/organizations/([^/]+)/required_recipe$" {
    +      # This endpoint is unique because it is defined via nginx and is not
    +      # handled by an upstream like oc_erchef. In order to make responses
    +      # consistent between Chef server and chef-zero we'll always enable
    +      # the location but explicitly return a 404 when the feature is disabled,
    +      # rather than leave it undefined. If we were to leave it undefined any
    +      # non-signed requests would be routed to the main index page and return
    +      # a 200 instead of 404.
    +      return 404;
    +    }
    +
    +
    +    # bookshelf
    +    location ~ "^/bookshelf/organization-.+" {
    +      proxy_pass http://bookshelf;
    +    }
    +
    +    # erchef status endpoint
    +    location ~ "^/_status/?$" {
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # erchef stats endpoint
    +    location ~ "^/_stats/?$" {
    +      auth_basic "Chef Server Admin Stats";
    +      auth_basic_user_file /var/opt/opscode/nginx/stats_htpasswd;
    +      types { }
    +      default_type application/json;
    +      proxy_pass http://opscode_erchef;
    +    }
    +
    +    # This variable is set to an empty string here so it can be used in
    +    # dispatch.lua later on. An add-on can set this variable to be used as an
    +    # upstream if we determine the request was not intended to go to the API.
    +    set $add_on_override_upstream "";
    +
    +    # Include external routes for addons
    +    include /var/opt/opscode/nginx/etc/addon.d/*_external.conf;
    +
    +    location /_route/ {
    +      default_type 'application/json';
    +      content_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch_route.lua';
    +    }
    +
    +    location / {
    +      satisfy any;
    +
    +
    +      set $mode "api";
    +      set $upstream "";
    +      rewrite_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch.lua';
    +      proxy_pass http://$upstream;
    +      proxy_redirect http://$upstream /;
    +    }
    +  }
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/nginx/etc/nginx.conf] action create
    - create new file /var/opt/opscode/nginx/etc/nginx.conf
    - update content in file /var/opt/opscode/nginx/etc/nginx.conf from none to 0694de
    --- /var/opt/opscode/nginx/etc/nginx.conf	2018-04-23 19:23:10.650409971 +0530
    +++ /var/opt/opscode/nginx/etc/.chef-nginx20180423-3855-1ybjuib.conf	2018-04-23 19:23:10.650409971 +0530
    @@ -1 +1,164 @@
    +user opscode opscode;
    +worker_processes 4;
    +error_log /var/log/opscode/nginx/error.log;
    +# Enviroment variables that we wish to access while running must be declared here,
    +# otherwise they will not be available.
    +env REDIS_PASSWORD;
    +env DATA_COLLECTOR_TOKEN;
    +daemon off;
    +
    +events {
    +  worker_connections 10240;
    +}
    +
    +http {
    +  log_format opscode '$remote_addr - $remote_user [$time_local]  '
    +                    '"$request" $status "$request_time" $body_bytes_sent '
    +                    '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" "$http_x_chef_version" "$http_x_ops_sign" "$http_x_ops_userid" "$http_x_ops_timestamp" "$http_x_ops_content_hash" $request_length';
    +
    +  server_names_hash_bucket_size 128;
    +
    +  sendfile on;
    +  tcp_nopush on;
    +  tcp_nodelay on;
    +
    +  keepalive_timeout 65;
    +
    +  gzip on;
    +  gzip_http_version 1.0;
    +  gzip_comp_level 2;
    +  gzip_proxied any;
    +  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    +
    +  include /opt/opscode/embedded/conf/mime.types;
    +
    +  lua_package_path "/var/opt/opscode/nginx/etc/scripts/?.lua;$prefix/?.lua;;";
    +  lua_shared_dict maint_data 1m;
    +  lua_shared_dict banned_ips 1m;
    +
    +  # Preload some shared modules globally
    +  init_by_lua '
    +    redis = require("resty/redis")
    +    config = require("config")
    +    routes = require("routes")
    +    resolver = require("resolver")
    +    route_checks = require("route_checks")
    +    validator = require("validator")
    +
    +    config.set_maint_refresh_interval(600)
    +    config.set_ban_refresh_interval(600)
    +    config.set_default_org(false)
    +  ';
    +
    +  # Listen for local requests to the stub_status module.
    +  server {
    +    listen 127.0.0.1:9999;
    +    location /nginx_status {
    +      stub_status on;
    +      access_log   off;
    +      allow 127.0.0.1;
    +      deny all;
    +    }
    +  }
    +
    +  upstream opscode_erchef {
    +    server 127.0.0.1:8000;
    +  }
    +  upstream oc_bifrost {
    +    server 127.0.0.1:9463;
    +  }
    +  upstream opscode_solr4 {
    +    server 127.0.0.1:8983;
    +  }
    +  upstream bookshelf {
    +    server 127.0.0.1:4321;
    +  }
    +
    +
    +
    +  # Include upstream definitions for addons
    +  include /var/opt/opscode/nginx/etc/addon.d/*_upstreams.conf;
    +
    +  fastcgi_temp_path "/var/opt/opscode/nginx/tmp/fastcgi";
    +  client_body_temp_path "/var/opt/opscode/nginx/tmp/client_body";
    +  uwsgi_temp_path "/var/opt/opscode/nginx/tmp/uwsgi";
    +  scgi_temp_path "/var/opt/opscode/nginx/tmp/scgi";
    +
    +  # external lb config for Chef API
    +    proxy_cache_path  /var/opt/opscode/nginx/cache/webui levels=1:2 keys_zone=webui-cache:50m max_size=5000m inactive=600m;
    +    proxy_cache_path  /var/opt/opscode/nginx/cache/cookbooks levels=1:2 keys_zone=cookbooks:50m max_size=5000m inactive=600m;
    +    proxy_temp_path /var/opt/opscode/nginx/cache-tmp;
    +
    +
    +    # We support three options: serve nothing on non_ssl_port (80),
    +    # redirect to https, or actually serve the API.
    +          server {
    +            listen 80;
    +            server_name localhost;
    +            access_log /var/log/opscode/nginx/rewrite-port-80.log;
    +            return 301 https://$host$request_uri;
    +          }
    +
    +    # Chef HTTPS API
    +    include /var/opt/opscode/nginx/etc/chef_https_lb.conf;
    +
    +  # internal lb config for Chef API Services
    +  server {
    +    listen 9680;
    +    server_name localhost;
    +
    +    client_max_body_size 250m;
    +    proxy_set_header        Host            $host;
    +    proxy_set_header        X-Real-IP       $remote_addr;
    +    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header        X-Forwarded-Proto http;
    +    proxy_set_header        X-Forwarded-Host $http_host;
    +    proxy_pass_request_headers on;
    +    proxy_connect_timeout   90;
    +    proxy_send_timeout      90;
    +    proxy_read_timeout      90;
    +
    +    access_log /var/log/opscode/nginx/internal-chef.access.log opscode;
    +    error_log  /var/log/opscode/nginx/internal-chef.error.log;
    +
    +    # Include internal routes for addons
    +    include /var/opt/opscode/nginx/etc/addon.d/*_internal.conf;
    +
    +    location "/" {
    +      set $upstream "";
    +      set $mode "internal_chef";
    +      rewrite_by_lua_file '/var/opt/opscode/nginx/etc/scripts/dispatch.lua';
    +
    +      proxy_redirect http://$upstream /;
    +      proxy_pass http://$upstream;
    +    }
    +  }
    +
    +  # internal service access for oc_bifrost
    +  server {
    +    listen 9683;
    +    server_name localhost;
    +
    +    client_max_body_size 250m;
    +    proxy_set_header        Host            $host;
    +    proxy_set_header        X-Real-IP       $remote_addr;
    +    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    +    proxy_set_header        X-Forwarded-Proto http;
    +    proxy_set_header        X-Forwarded-Host $http_host;
    +    proxy_pass_request_headers on;
    +
    +    proxy_connect_timeout   90;
    +    proxy_send_timeout      90;
    +    proxy_read_timeout      90;
    +
    +    access_log /var/log/opscode/nginx/internal-authz.access.log opscode;
    +    error_log  /var/log/opscode/nginx/internal-authz.error.log;
    +
    +    location / {
    +      proxy_pass http://oc_bifrost;
    +    }
    +  }
    +
    +  include /var/opt/opscode/nginx/etc/nginx.d/*.conf;
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * cookbook_file[/var/opt/opscode/nginx/etc/addon.d/README.md] action create
    - create new file /var/opt/opscode/nginx/etc/addon.d/README.md
    - update content in file /var/opt/opscode/nginx/etc/addon.d/README.md from none to 50d82a
    --- /var/opt/opscode/nginx/etc/addon.d/README.md	2018-04-23 19:23:10.708411702 +0530
    +++ /var/opt/opscode/nginx/etc/addon.d/.chef-README20180423-3855-nx6hqp.md	2018-04-23 19:23:10.708411702 +0530
    @@ -1 +1,19 @@
    +Private Chef Addons
    +===================
    +
    +This directory exists to allow addons to Private Chef to add upstreams and routing rules to the nginx configuration
    +
    +Included files
    +-------------
    +There are includes in the main Nginx configuration that match the following patterns:
    +
    +* `*_upstreams.conf`: Upstream definitions
    +
    +* `*_external.conf`: Routing rules for routes exposed via the external LB
    +
    +* `*_internal.conf`: Routing rules for routes exposed via the internal LB
    +
    +File Naming
    +-----------
    +Files are included in normal alphabetic ordering.  To ensure consistent ordering, each addon should use a 2 digit numeric prefix followed by the component name.  e.g for addon 'foo' we would have files named `10-foo_upstreams.conf`, `10-foo_external.conf`, etc.
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * execute[restart_nginx_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/nginx/config] action create
    - create new file /var/log/opscode/nginx/config
    - update content in file /var/log/opscode/nginx/config from none to 5e16ac
    --- /var/log/opscode/nginx/config	2018-04-23 19:23:10.761413285 +0530
    +++ /var/log/opscode/nginx/.chef-config20180423-3855-1fpa41e	2018-04-23 19:23:10.761413285 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[nginx] action nothing (skipped due to action :nothing)
Recipe: private-chef::nginx
  * runit_service[nginx] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/nginx] action create
      - create new directory /opt/opscode/sv/nginx
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/nginx/run] action create
      - create new file /opt/opscode/sv/nginx/run
      - update content in file /opt/opscode/sv/nginx/run from none to b8aaf6
      --- /opt/opscode/sv/nginx/run	2018-04-23 19:23:10.850415942 +0530
      +++ /opt/opscode/sv/nginx/.chef-run20180423-3855-14j8ru	2018-04-23 19:23:10.850415942 +0530
      @@ -1 +1,6 @@
      +#!/bin/sh
      +exec 2>&1
      +exec /opt/opscode/embedded/bin/veil-env-helper -o DATA_COLLECTOR_TOKEN=data_collector.token -s REDIS_PASSWORD=redis_lb.password -- \
      +  chpst -P  \
      +  /opt/opscode/embedded/sbin/nginx -c /var/opt/opscode/nginx/etc/nginx.conf
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/nginx/log] action create
      - create new directory /opt/opscode/sv/nginx/log
      - restore selinux security context
    * directory[/opt/opscode/sv/nginx/log/main] action create
      - create new directory /opt/opscode/sv/nginx/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/nginx] action create
      - create new directory /var/log/nginx
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/nginx/log/config] action create
      - create new file /opt/opscode/sv/nginx/log/config
      - update content in file /opt/opscode/sv/nginx/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/nginx/config] action create
      - create symlink at /var/log/nginx/config to /opt/opscode/sv/nginx/log/config
    * template[/opt/opscode/sv/nginx/log/run] action create
      - create new file /opt/opscode/sv/nginx/log/run
      - update content in file /opt/opscode/sv/nginx/log/run from none to 3c7476
      --- /opt/opscode/sv/nginx/log/run	2018-04-23 19:23:11.029421286 +0530
      +++ /opt/opscode/sv/nginx/log/.chef-run20180423-3855-meg9n6	2018-04-23 19:23:11.028421256 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/nginx
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/nginx/env] action create
      - create new directory /opt/opscode/sv/nginx/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
    * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/nginx/control] action create
      - create new directory /opt/opscode/sv/nginx/control
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/nginx] action create
      - create symlink at /opt/opscode/init/nginx to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/nginx] action create (up to date)
      * template[/opt/opscode/sv/nginx/run] action create (up to date)
      * directory[/opt/opscode/sv/nginx/log] action create (up to date)
      * directory[/opt/opscode/sv/nginx/log/main] action create (up to date)
      * directory[/var/log/nginx] action create (up to date)
      * template[/opt/opscode/sv/nginx/log/config] action create (up to date)
      * link[/var/log/nginx/config] action create (up to date)
      * template[/opt/opscode/sv/nginx/log/run] action create (up to date)
      * directory[/opt/opscode/sv/nginx/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/nginx/control] action create (up to date)
      * link[/opt/opscode/init/nginx] action create (up to date)
      * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/nginx] action create
        - create symlink at /opt/opscode/service/nginx to /opt/opscode/sv/nginx
      * ruby_block[wait for nginx service socket] action run
        - execute the ruby block wait for nginx service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/nginx] action create (up to date)
      * template[/opt/opscode/sv/nginx/run] action create (up to date)
      * directory[/opt/opscode/sv/nginx/log] action create (up to date)
      * directory[/opt/opscode/sv/nginx/log/main] action create (up to date)
      * directory[/var/log/nginx] action create (up to date)
      * template[/opt/opscode/sv/nginx/log/config] action create (up to date)
      * link[/var/log/nginx/config] action create (up to date)
      * template[/opt/opscode/sv/nginx/log/run] action create (up to date)
      * directory[/opt/opscode/sv/nginx/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for nginx service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/check] action create (skipped due to only_if)
      * template[/opt/opscode/sv/nginx/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/nginx/control] action create (up to date)
      * link[/opt/opscode/init/nginx] action create (up to date)
      * file[/opt/opscode/sv/nginx/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/nginx] action create (up to date)
      * ruby_block[wait for nginx service socket] action run
        - execute the ruby block wait for nginx service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/nginx] action create (up to date)
    * ruby_block[wait for nginx service socket] action run
      - execute the ruby block wait for nginx service socket
  
  * template[/etc/opscode/logrotate.d/nginx] action create
    - create new file /etc/opscode/logrotate.d/nginx
    - update content in file /etc/opscode/logrotate.d/nginx from none to 9bb37e
    --- /etc/opscode/logrotate.d/nginx	2018-04-23 19:23:17.181604956 +0530
    +++ /etc/opscode/logrotate.d/.chef-nginx20180423-3855-repfer	2018-04-23 19:23:17.180604926 +0530
    @@ -1 +1,11 @@
    +/var/log/opscode/nginx/*.log {
    +  rotate 10
    +  size 104857600
    +  create 644 opscode opscode
    +  delaycompress
    +  sharedscripts
    +  postrotate
    +    /opt/opscode/embedded/sbin/nginx -c /var/opt/opscode/nginx/etc/nginx.conf -s reopen
    +  endscript
    +}
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::rabbitmq
  * directory[/var/opt/opscode/rabbitmq] action create
    - create new directory /var/opt/opscode/rabbitmq
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/rabbitmq/etc] action create
    - create new directory /var/opt/opscode/rabbitmq/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/rabbitmq/db] action create
    - create new directory /var/opt/opscode/rabbitmq/db
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/rabbitmq] action create
    - create new directory /var/log/opscode/rabbitmq
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/var/opt/opscode/rabbitmq/db] action create (skipped due to not_if)
  * link[/opt/opscode/embedded/bin/rabbitmqctl] action create (up to date)
  * link[/opt/opscode/embedded/bin/rabbitmq-defaults] action create
    - create symlink at /opt/opscode/embedded/bin/rabbitmq-defaults to /opt/opscode/embedded/service/rabbitmq/sbin/rabbitmq-defaults
  * link[/opt/opscode/embedded/bin/rabbitmq-env] action create (up to date)
  * link[/opt/opscode/embedded/bin/rabbitmq-plugins] action create
    - create symlink at /opt/opscode/embedded/bin/rabbitmq-plugins to /opt/opscode/embedded/service/rabbitmq/sbin/rabbitmq-plugins
  * link[/opt/opscode/embedded/bin/rabbitmq-server] action create (up to date)
  * template[/opt/opscode/embedded/service/rabbitmq/sbin/rabbitmq-defaults] action create
    - update content in file /opt/opscode/embedded/service/rabbitmq/sbin/rabbitmq-defaults from ee8d1a to a2bbb9
    --- /opt/opscode/embedded/service/rabbitmq/sbin/rabbitmq-defaults	2018-02-13 22:33:42.000000000 +0530
    +++ /opt/opscode/embedded/service/rabbitmq/sbin/.chef-rabbitmq-defaults20180423-3855-3m4x8i	2018-04-23 19:23:17.450612987 +0530
    @@ -16,7 +16,7 @@
     ##
     
     ### next line potentially updated in package install steps
    -SYS_PREFIX=${RABBITMQ_HOME}
    +SYS_PREFIX=/var/opt/opscode/rabbitmq
     
     ### next line will be updated when generating a standalone release
     ERL_DIR=
    @@ -24,22 +24,17 @@
     CLEAN_BOOT_FILE=start_clean
     SASL_BOOT_FILE=start_sasl
     
    -if [ -f "${RABBITMQ_HOME}/erlang.mk" ]; then
    -    # RabbitMQ is executed from its source directory. The plugins
    -    # directory and ERL_LIBS are tuned based on this.
    -    RABBITMQ_DEV_ENV=1
    -fi
    -
     ## Set default values
     
     BOOT_MODULE="rabbit"
    +CONFIG_FILE=${SYS_PREFIX}/etc/rabbitmq
    +LOG_BASE=${SYS_PREFIX}/log
    +MNESIA_BASE=${SYS_PREFIX}/db
    +ENABLED_PLUGINS_FILE=${SYS_PREFIX}/etc/enabled_plugins
     
    -CONFIG_FILE=${SYS_PREFIX}/etc/rabbitmq/rabbitmq
    -LOG_BASE=${SYS_PREFIX}/var/log/rabbitmq
    -MNESIA_BASE=${SYS_PREFIX}/var/lib/rabbitmq/mnesia
    -ENABLED_PLUGINS_FILE=${SYS_PREFIX}/etc/rabbitmq/enabled_plugins
    -
     PLUGINS_DIR="${RABBITMQ_HOME}/plugins"
     
    -CONF_ENV_FILE=${SYS_PREFIX}/etc/rabbitmq/rabbitmq-env.conf
    +CONF_ENV_FILE=/var/opt/opscode/rabbitmq/etc/rabbitmq.conf
    +# stay in foreground, don't proxy signals
    +RUNNING_UNDER_SYSTEMD=true
    - restore selinux security context
  * template[/var/opt/opscode/rabbitmq/etc/rabbitmq.conf] action create
    - create new file /var/opt/opscode/rabbitmq/etc/rabbitmq.conf
    - update content in file /var/opt/opscode/rabbitmq/etc/rabbitmq.conf from none to 40477a
    --- /var/opt/opscode/rabbitmq/etc/rabbitmq.conf	2018-04-23 19:23:17.525615227 +0530
    +++ /var/opt/opscode/rabbitmq/etc/.chef-rabbitmq20180423-3855-1fhpuol.conf	2018-04-23 19:23:17.525615227 +0530
    @@ -1 +1,7 @@
    +HOME="/var/opt/opscode/rabbitmq" 
    +RABBITMQ_MNESIA_BASE="/var/opt/opscode/rabbitmq/db" 
    +RABBITMQ_LOG_BASE="/var/opt/opscode/rabbitmq/log" 
    +RABBITMQ_NODE_IP_ADDRESS="127.0.0.1"
    +RABBITMQ_NODE_PORT="5672"
    +NODENAME="rabbit@localhost"
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/var/opt/opscode/rabbitmq/etc/rabbitmq.config] action create
    - create new file /var/opt/opscode/rabbitmq/etc/rabbitmq.config
    - update content in file /var/opt/opscode/rabbitmq/etc/rabbitmq.config from none to d3cd7e
    --- /var/opt/opscode/rabbitmq/etc/rabbitmq.config	2018-04-23 19:23:17.587617078 +0530
    +++ /var/opt/opscode/rabbitmq/etc/.chef-rabbitmq20180423-3855-kw94vf.config	2018-04-23 19:23:17.587617078 +0530
    @@ -1 +1,19 @@
    +[
    + {kernel, [{inet_dist_use_interface, {127,0,0,1}}]},
    + {ssl, [{versions, ['tlsv1.2','tlsv1.1']}]},
    + {rabbit, [{tcp_listeners, [5672]},
    +               {ssl_options,
    +                 [{certfile, "/var/opt/opscode/nginx/ca/localhost.crt"},
    +                  {keyfile,  "/var/opt/opscode/nginx/ca/localhost.key"},
    +                    {versions, ['tlsv1.2','tlsv1.1']}]}
    +  ]},
    + {rabbitmq_management,
    +     [{listener, [
    +               {ip, "127.0.0.1"},
    +               {port,     15672 },
    +               {ssl, true }
    +               % The Rabbit Management Plugin will use the global Rabbit SSL Config
    +              ]}
    +  ]}
    +].
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * execute[restart_rabbitmq_log_service] action nothing (skipped due to action :nothing)
  * template[/var/log/opscode/rabbitmq/config] action create
    - create new file /var/log/opscode/rabbitmq/config
    - update content in file /var/log/opscode/rabbitmq/config from none to 5e16ac
    --- /var/log/opscode/rabbitmq/config	2018-04-23 19:23:17.642618720 +0530
    +++ /var/log/opscode/rabbitmq/.chef-config20180423-3855-2dmgic	2018-04-23 19:23:17.642618720 +0530
    @@ -1 +1,4 @@
    +# svlogd configuration
    +s104857600
    +n10
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: <Dynamically Defined Resource>
  * service[rabbitmq] action nothing (skipped due to action :nothing)
Recipe: private-chef::rabbitmq
  * runit_service[rabbitmq] action enable
    * ruby_block[restart_service] action nothing (skipped due to action :nothing)
    * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
    * directory[/opt/opscode/sv/rabbitmq] action create
      - create new directory /opt/opscode/sv/rabbitmq
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/rabbitmq/run] action create
      - create new file /opt/opscode/sv/rabbitmq/run
      - update content in file /opt/opscode/sv/rabbitmq/run from none to 619d14
      --- /opt/opscode/sv/rabbitmq/run	2018-04-23 19:23:17.758622183 +0530
      +++ /opt/opscode/sv/rabbitmq/.chef-run20180423-3855-1myhfb2	2018-04-23 19:23:17.758622183 +0530
      @@ -1 +1,5 @@
      +#!/bin/sh
      +exec 2>&1
      +exec chpst -P -u opscode -U opscode /usr/bin/env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/rabbitmq /opt/opscode/embedded/bin/rabbitmq-server
      +
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/rabbitmq/log] action create
      - create new directory /opt/opscode/sv/rabbitmq/log
      - restore selinux security context
    * directory[/opt/opscode/sv/rabbitmq/log/main] action create
      - create new directory /opt/opscode/sv/rabbitmq/log/main
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/var/log/rabbitmq] action create
      - create new directory /var/log/rabbitmq
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/rabbitmq/log/config] action create
      - create new file /opt/opscode/sv/rabbitmq/log/config
      - update content in file /opt/opscode/sv/rabbitmq/log/config from none to e3b0c4
      (no diff)
      - change mode from '' to '0644'
      - restore selinux security context
    * link[/var/log/rabbitmq/config] action create
      - create symlink at /var/log/rabbitmq/config to /opt/opscode/sv/rabbitmq/log/config
    * template[/opt/opscode/sv/rabbitmq/log/run] action create
      - create new file /opt/opscode/sv/rabbitmq/log/run
      - update content in file /opt/opscode/sv/rabbitmq/log/run from none to 0e09b8
      --- /opt/opscode/sv/rabbitmq/log/run	2018-04-23 19:23:17.973628602 +0530
      +++ /opt/opscode/sv/rabbitmq/log/.chef-run20180423-3855-17ibg6a	2018-04-23 19:23:17.973628602 +0530
      @@ -1 +1,4 @@
      +#!/bin/sh
      +exec chpst -U opscode -u opscode \
      +  svlogd -tt /var/log/opscode/rabbitmq
      - change mode from '' to '0755'
      - restore selinux security context
    * directory[/opt/opscode/sv/rabbitmq/env] action create
      - create new directory /opt/opscode/sv/rabbitmq/env
      - change mode from '' to '0755'
      - restore selinux security context
    * ruby_block[Delete unmanaged env files for rabbitmq service] action run (skipped due to only_if)
    * template[/opt/opscode/sv/rabbitmq/check] action create
      - create new file /opt/opscode/sv/rabbitmq/check
      - update content in file /opt/opscode/sv/rabbitmq/check from none to 68f60b
      --- /opt/opscode/sv/rabbitmq/check	2018-04-23 19:23:18.090632095 +0530
      +++ /opt/opscode/sv/rabbitmq/.chef-check20180423-3855-p1wekb	2018-04-23 19:23:18.089632065 +0530
      @@ -1 +1,3 @@
      +#!/bin/sh
      +/usr/bin/env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/root /opt/opscode/embedded/bin/rabbitmqctl wait "/var/opt/opscode/rabbitmq/db/rabbit@localhost.pid"
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/rabbitmq/finish] action create (skipped due to only_if)
    * directory[/opt/opscode/sv/rabbitmq/control] action create
      - create new directory /opt/opscode/sv/rabbitmq/control
      - change mode from '' to '0755'
      - restore selinux security context
    * template[/opt/opscode/sv/rabbitmq/control/t] action create
      - create new file /opt/opscode/sv/rabbitmq/control/t
      - update content in file /opt/opscode/sv/rabbitmq/control/t from none to eb9659
      --- /opt/opscode/sv/rabbitmq/control/t	2018-04-23 19:23:18.170634484 +0530
      +++ /opt/opscode/sv/rabbitmq/control/.chef-t20180423-3855-gekqd5	2018-04-23 19:23:18.169634454 +0530
      @@ -1 +1,5 @@
      +#!/bin/sh
      +exec 2>&1
      +echo "received TERM from runit, invoking rabbitmqctl stop"
      +exec chpst -P -u opscode -U opscode /usr/bin/env ERL_EPMD_ADDRESS=127.0.0.1 HOME=/var/opt/opscode/rabbitmq /opt/opscode/embedded/bin/rabbitmqctl stop
      - change mode from '' to '0755'
      - restore selinux security context
    * link[/opt/opscode/init/rabbitmq] action create
      - create symlink at /opt/opscode/init/rabbitmq to /opt/opscode/embedded/bin/sv
    * file[/opt/opscode/sv/rabbitmq/down] action nothing (skipped due to action :nothing)
    * ruby_block[restart_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/rabbitmq] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/run] action create (up to date)
      * directory[/opt/opscode/sv/rabbitmq/log] action create (up to date)
      * directory[/opt/opscode/sv/rabbitmq/log/main] action create (up to date)
      * directory[/var/log/rabbitmq] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/log/config] action create (up to date)
      * link[/var/log/rabbitmq/config] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/log/run] action create (up to date)
      * directory[/opt/opscode/sv/rabbitmq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for rabbitmq service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/rabbitmq/check] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/rabbitmq/control] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/control/t] action create (up to date)
      * link[/opt/opscode/init/rabbitmq] action create (up to date)
      * file[/opt/opscode/sv/rabbitmq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/rabbitmq] action create
        - create symlink at /opt/opscode/service/rabbitmq to /opt/opscode/sv/rabbitmq
      * ruby_block[wait for rabbitmq service socket] action run
        - execute the ruby block wait for rabbitmq service socket
      - execute the ruby block restart_service
    * ruby_block[restart_log_service] action run
      * ruby_block[restart_service] action nothing (skipped due to action :nothing)
      * ruby_block[restart_log_service] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/sv/rabbitmq] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/run] action create (up to date)
      * directory[/opt/opscode/sv/rabbitmq/log] action create (up to date)
      * directory[/opt/opscode/sv/rabbitmq/log/main] action create (up to date)
      * directory[/var/log/rabbitmq] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/log/config] action create (up to date)
      * link[/var/log/rabbitmq/config] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/log/run] action create (up to date)
      * directory[/opt/opscode/sv/rabbitmq/env] action create (up to date)
      * ruby_block[Delete unmanaged env files for rabbitmq service] action run (skipped due to only_if)
      * template[/opt/opscode/sv/rabbitmq/check] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/finish] action create (skipped due to only_if)
      * directory[/opt/opscode/sv/rabbitmq/control] action create (up to date)
      * template[/opt/opscode/sv/rabbitmq/control/t] action create (up to date)
      * link[/opt/opscode/init/rabbitmq] action create (up to date)
      * file[/opt/opscode/sv/rabbitmq/down] action nothing (skipped due to action :nothing)
      * directory[/opt/opscode/service] action create (up to date)
      * link[/opt/opscode/service/rabbitmq] action create (up to date)
      * ruby_block[wait for rabbitmq service socket] action run
        - execute the ruby block wait for rabbitmq service socket
      - execute the ruby block restart_log_service
    * directory[/opt/opscode/service] action create (up to date)
    * link[/opt/opscode/service/rabbitmq] action create (up to date)
    * ruby_block[wait for rabbitmq service socket] action run
      - execute the ruby block wait for rabbitmq service socket
  
  * execute[/opt/opscode/bin/private-chef-ctl start rabbitmq] action run
    - execute /opt/opscode/bin/private-chef-ctl start rabbitmq
  * execute[/opt/opscode/embedded/bin/chpst -u opscode -U opscode /opt/opscode/embedded/bin/rabbitmqctl wait /var/opt/opscode/rabbitmq/db/rabbit@localhost.pid] action run
    - execute /opt/opscode/embedded/bin/chpst -u opscode -U opscode /opt/opscode/embedded/bin/rabbitmqctl wait /var/opt/opscode/rabbitmq/db/rabbit@localhost.pid
  * execute[/opt/opscode/embedded/bin/rabbitmqctl delete_user guest] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl delete_user guest
  * execute[/opt/opscode/embedded/bin/rabbitmqctl add_vhost /chef] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl add_vhost /chef
  * execute[/opt/opscode/embedded/bin/rabbitmqctl add_vhost /analytics] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl add_vhost /analytics
  * execute[/opt/opscode/embedded/bin/rabbitmqctl add_user chef [PASSWORD]] action run
    - execute sensitive resource
  * execute[/opt/opscode/embedded/bin/rabbitmqctl add_user actions [PASSWORD]] action run
    - execute sensitive resource
  * execute[/opt/opscode/embedded/bin/rabbitmqctl add_user rabbitmgmt [PASSWORD]] action run
    - execute sensitive resource
  * execute[/opt/opscode/embedded/bin/rabbitmqctl change_password chef [PASSWORD]] action run (skipped due to not_if)
  * execute[/opt/opscode/embedded/bin/rabbitmqctl change_password actions [PASSWORD]] action run (skipped due to not_if)
  * execute[/opt/opscode/embedded/bin/rabbitmqctl change_password rabbitmgmt [PASSWORD]] action run (skipped due to not_if)
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /chef chef ".*" ".*" ".*"] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /chef chef ".*" ".*" ".*"
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /analytics chef ".*" ".*" ".*"] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /analytics chef ".*" ".*" ".*"
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /analytics actions ".*" ".*" ".*"] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /analytics actions ".*" ".*" ".*"
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /analytics rabbitmgmt ".*" ".*" ".*"] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /analytics rabbitmgmt ".*" ".*" ".*"
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /chef rabbitmgmt ".*" ".*" ".*"] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_permissions -p /chef rabbitmgmt ".*" ".*" ".*"
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_permissions -p / rabbitmgmt ".*" ".*" ".*"] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_permissions -p / rabbitmgmt ".*" ".*" ".*"
  * execute[/opt/opscode/embedded/bin/rabbitmq-plugins enable rabbitmq_management] action run
    - execute /opt/opscode/embedded/bin/rabbitmq-plugins enable rabbitmq_management
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_user_tags rabbitmgmt administrator] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_user_tags rabbitmgmt administrator
  * execute[/opt/opscode/embedded/bin/rabbitmqctl set_policy -p /analytics max_length '(erchef|alaska|notifier.notifications|notifier_config)' '{"max-length":10000}' --apply-to queues] action run
    - execute /opt/opscode/embedded/bin/rabbitmqctl set_policy -p /analytics max_length '(erchef|alaska|notifier.notifications|notifier_config)' '{"max-length":10000}' --apply-to queues
  * execute[/opt/opscode/embedded/bin/rabbitmqctl clear_policy -p /analytics max_length] action run (skipped due to not_if)
Recipe: <Dynamically Defined Resource>
  * service[keepalived] action nothing (skipped due to action :nothing)
Recipe: private-chef::default
  * runit_service[keepalived] action disable
    * ruby_block[disable keepalived] action run (skipped due to only_if)
     (up to date)
Recipe: <Dynamically Defined Resource>
  * service[postgres] action nothing (skipped due to action :nothing)
Recipe: private-chef::cleanup
  * runit_service[postgres] action stop (up to date)
  * runit_service[postgres] action disable
    * ruby_block[disable postgres] action run (skipped due to only_if)
     (up to date)
  * directory[/opt/opscode/sv/postgres] action delete (up to date)
  * directory[/opt/opscode/embedded/service/chef-server-bootstrap] action delete (up to date)
Recipe: <Dynamically Defined Resource>
  * service[opscode-expander-reindexer] action nothing (skipped due to action :nothing)
Recipe: private-chef::cleanup
  * runit_service[opscode-expander-reindexer] action stop (up to date)
  * runit_service[opscode-expander-reindexer] action disable
    * ruby_block[disable opscode-expander-reindexer] action run (skipped due to only_if)
     (up to date)
  * link[/opt/opscode/init/opscode-expander-reindexer] action delete (up to date)
  * directory[/opt/opscode/sv/opscode-expander-reindexer] action delete (up to date)
Recipe: private-chef::actions
  * directory[/etc/opscode-analytics] action create
    - create new directory /etc/opscode-analytics
    - change mode from '' to '0775'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * file[/etc/opscode-analytics/webui_priv.pem] action create
    - create new file /etc/opscode-analytics/webui_priv.pem
    - update content in file /etc/opscode-analytics/webui_priv.pem from none to 725b3a
    --- /etc/opscode-analytics/webui_priv.pem	2018-04-23 19:24:45.818175033 +0530
    +++ /etc/opscode-analytics/.chef-webui_priv20180423-3855-11yk6yt.pem	2018-04-23 19:24:45.818175033 +0530
    @@ -1 +1,28 @@
    +-----BEGIN RSA PRIVATE KEY-----
    +MIIEogIBAAKCAQEAoaur3LTxmg2NxfGPaa7qvE5fGslAnz1rcbS1d+qY+d8F3Lw8
    +aMPKFh+NMzSHvPNff+DWe4Z0D2tK9dJuF2w/nuMfTas4yXo7F0GGjeS5RIrvr98O
    +ls/mFBb/diUu0ui3HG9LYett3jNUJNnyB94R1s5T61T6XbhS7hO5grMGmhAWGpdO
    +vSy/AdQOONedDzWlEu7nzE5LI18LctxVpqhj0WArsTApGyaWddmHgwjv7hrzcTtB
    +JE5Q5Rr5HiBKPDkkZWe1iDsWWIgZMAPfs4GxnEZBSmGPOWt+l6l9w5u0ojiTqXVq
    +C6oKU9Tx2EmGi6ZFBN479SB9vvvhHxG74Z4cQwIDAQABAoIBACPkjzVi3rjLBYzK
    +woI+GVNROwAhaj1wT2hhLGDBLtFa2FxXVjoULcuXmauin/gtOCiV7EhkY2QA+BV3
    +cIW2vLEzz4FY4DSq9G+HVq4t94vmJKyxIvYMlhIjwPej7a9Zhz3C38OPl0bbsnS0
    +Bm4EuYUtLahzp1ojUBYXPvprcK3HRibYVk73F83bY4gpeGdEtlfHqGCOJfwOxfRD
    +EAGhy+QGp999rpcGg64tZVTGM7a+y7gN+hO+yin815VCJsbwrL29ywbIqE/H5SDs
    +XwuznT9nls8qFshzRWPiVxrpiA8hE9iV7dfNFLA47rlo2NF+euz2iVRtVAYeyTa1
    +Hl+LHbECgYEAz6IiAoffLAFk0K/Y0vY6CQr1zfIYNZbLFxZ90y09syinUqtNpCGA
    +/qbp2l3kENPLYS5NXiPyFpCGLIpaqTfrf4Dn1pvp1zB5vDrS2Mk3CeRrGlZyI3iG
    +Qfd3GIFeYL9zP1t+y0eBJmou0zMj7r8+/v9M9e7FCtvG06AJNWNM9P8CgYEAx1Sg
    +j1NvcpxxC7clRrlazXaJcYolpDOkWjb7Bo/D5xB8HQFsdXrFZDWHR3snd4ZeBp3T
    +6jhUqe+tOlR4vYkvxjWQyH9gtelhf6zIBgjA8aHiJqh5Zd4Q8cIos38+/+nJ4wB7
    +K2vjszkuxvK2AS7661B1ihk9/NaPZQUq/dfGxL0CgYAeX5ZgDmY8Nrv7ty2dtr1I
    +o1zP0rFt7XAqIXUolj6nXbQUaNDDyM7o8ZvWANQjDgh7X92bfuCkImIuU9LtXCvM
    +DBxeDZLIkuPMAELlyZGOleaBBNJPlAr3zW6TnCElP/xo8UZ8ECq5ZuEQrjN8cmeR
    +v+EPPO2AKCROwuN19t/EGwKBgB7+8uS2tbrdxtpqhVplElCm4SKNt+K7wQ/iQtC3
    +ZGA2+QXNpd7y02UMydd8uBtnApIG0uA2GDxAr/BFGG1ouswYokX7QL+o5edjp8sA
    +a3hnkvIt+oqzqHDfn1KiM9q5sRIijgSnh0XkW3jGXzT56DzVSyHJYRFDEBNGZXQJ
    +rLgFAoGAaIedMrsmvann6aSSJ9LZiZFKztmT6MF9Fn/j5NNLSYdrpKiFKknyTd/L
    +DfDy63jjUgqjCjXJg2FgRoZwDPOk/GcG4JyuyVZEXhakL4IIjuBdUac5jHSg/sL6
    +Fl3t/7nWIlF1WjpFYuL7FVDXS/FrYvC+QQFzPEMpicxyvYWbZW0=
    +-----END RSA PRIVATE KEY-----
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
    - restore selinux security context
  * file[/etc/opscode-analytics/actions-source.json] action create
    - create new file /etc/opscode-analytics/actions-source.json
    - update content in file /etc/opscode-analytics/actions-source.json from none to 55b876
    - suppressed sensitive resource
    - change mode from '' to '0600'
    - change owner from '' to 'root'
    - restore selinux security context
Recipe: private-chef::private-chef-sh
  * template[/etc/opscode/private-chef.sh] action create
    - create new file /etc/opscode/private-chef.sh
    - update content in file /etc/opscode/private-chef.sh from none to 6529f6
    --- /etc/opscode/private-chef.sh	2018-04-23 19:24:45.904178740 +0530
    +++ /etc/opscode/.chef-private-chef20180423-3855-1o4twwh.sh	2018-04-23 19:24:45.904178740 +0530
    @@ -1 +1,8 @@
    +# Opscode/Chef shell variables for use by diagnotic scripts in
    +# /opt/opscode/bin. This file is generated by Chef based on
    +# /etc/opscode/private-chef.rb contents during p-c-c reconfigure.
    +#
    +#### DO NOT EDIT! ALL EDITS WILL BE LOST ON private-chef-ctl reconfigure ####
    +
    +POSTGRESQL_UNIX_USER=opscode-pgsql
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::oc-chef-pedant
  * directory[/var/opt/opscode/oc-chef-pedant] action create
    - create new directory /var/opt/opscode/oc-chef-pedant
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/oc-chef-pedant/etc] action create
    - create new directory /var/opt/opscode/oc-chef-pedant/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/log/opscode/oc-chef-pedant] action create
    - create new directory /var/log/opscode/oc-chef-pedant
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * template[/var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb] action create
    - create new file /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb
    - update content in file /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb from none to 726359
    --- /var/opt/opscode/oc-chef-pedant/etc/pedant_config.rb	2018-04-23 19:24:46.058185378 +0530
    +++ /var/opt/opscode/oc-chef-pedant/etc/.chef-pedant_config20180423-3855-bixznq.rb	2018-04-23 19:24:46.057185335 +0530
    @@ -1 +1,188 @@
    +# This annotated Pedant configuration file details the various
    +# configuration settings available to you.  It is separate from the
    +# actual Pedant::Config class because not all settings have sane
    +# defaults, and not all settings are appropriate in all settings.
    +
    +################################################################################
    +#
    +
    +# The base_resource_url gets set whenever we are operating behind a proxy,
    +# notably in the automate-chef-server all in one installation
    +#
    +# base_resource_url "host_header"
    +
    +# A unique identification string used to create orgs and users specific
    +# to a each single chef server's nodes' OS. Simply using "Process.pid"
    +# proved to not be unique enough when running pedant simultaneously
    +# on multiple nodes of the same chef server when the generated pedant
    +# config file could have been copied across during the setup of that
    +# chef server.
    +chef_server_uid = "localhost_#{Process.pid}".downcase
    +
    +# Specify a testing organization if you are testing a multi-tenant
    +# instance of a Chef Server (e.g., Private Chef, Hosted Chef).  If you
    +# are testing a single-tenant instance (i.e. Open Source Chef Server),
    +# DO NOT include this parameter
    +#
    +# Due to how the current org cache operates, it is best to use a
    +# unique name for your testing organization. If you do not use a
    +# unique name and run tests several times (destroying the organization
    +# between runs) you will likely get inconsistent results.
    +#
    +# If you wish Pedant to create the organization for you at test time,
    +# include the `:create_me => true` pair.  If you wish to use an
    +# existing organization for tests, you should supply a `:validator_key
    +# => "/full/path/to/key.pem"` pair
    +org({:name => "pedant_testorg_#{chef_server_uid}",
    +     :create_me => true})
    +
    +validate_org_creation true
    +
    +# org({:name => "existing_org",
    +#      :validator_key => "/etc/opscode/existing_org-validator.pem"})
    +
    +# account internal URL
    +internal_account_url "http://127.0.0.1:9685"
    +
    +# If you want Pedant to delete the testing organization when it is
    +# done, use this parameter.  Note that this only has an effect if
    +# Pedant also created the testing organization.
    +delete_org true
    +
    +# You MUST specify the address of the server the API requests will be
    +# sent to.  Only specify protocol, hostname, and port.
    +chef_server "https://localhost"
    +
    +# This configration specifies the default orgname. Note that it does *not*
    +# mean that Pedant will test things with default org urls. To do that,
    +# pass --use-default-org on the command line
    +default_orgname nil
    +
    +# If you are doing development testing, you can specify the address of
    +# the Solr server.  The presence of this parameter will enable tests
    +# to force commits to Solr, greatly decreasing the amout of time
    +# needed for testing the search endpoint.  This is only an
    +# optimization for development!  If you are testing a "live" Chef
    +# Server, or otherwise do not have access to the Solr server from your
    +# testing location, you should not specify a value for this parameter.
    +# The tests will still run, albeit slower, as they will now need to
    +# poll for a period to ensure they are querying committed results.
    +search_server "http://127.0.0.1:8983/solr"
    +
    +
    +# Some tests expect access erchef server directly, instead of routing through
    +# LB.
    +#
    +internal_server "http://127.0.0.1:8000"
    +
    +
    +# Related to the 'search_server' parameter, this specifies the maximum
    +# amout of time (in seconds) that search endpoint requests should be
    +# retried before giving up.  If not explicitly set, it will default to
    +# 65 seconds; only set it if you know that your Solr commit interval
    +# differs significantly from this.
    +maximum_search_time 65
    +
    +# We're starting to break tests up into groups based on different
    +# criteria.  The proper API tests (the results of which are viewable
    +# to OPC customers) should be the only ones run by Pedant embedded in
    +# OPC installs.  There are other specs that help us keep track of API
    +# cruft that we want to come back and fix later; these shouldn't be
    +# viewable to customers, but we should be able to run them in
    +# development and CI environments.  If this parameter is missing or
    +# explicitly `false` only the customer-friendly tests will be run.
    +#
    +# This is mainly here for documentation purposes, since the
    +# command-line `oc-chef-pedant` utility ultimately determines this
    +# value.
    +include_internal false
    +
    +# SSL protocol version to use for secure communications
    +# with the load balancer
    +ssl_version :TLSv1
    +
    +# Test users.  The five users specified below are required; their
    +# names (:user, :non_org_user, etc.) are indicative of their role
    +# within the tests.  All users must have a ':name' key.  If they have
    +# a ':create_me' key, Pedant will create these users for you.  If you
    +# are using pre-existing users, you must supply a ':key_file' key,
    +# which should be the fully-qualified path /on the machine Pedant is
    +# running on/ to a private key for that user.
    +
    +superuser_name 'pivotal'
    +
    +requestors({
    +             :clients => {
    +               :admin => {
    +                 :name => "pedant_admin_client_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :admin => true
    +               },
    +               :non_admin => {
    +                 :name => "pedant_client_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +               },
    +               :bad => {
    +                 :name => "bad_client_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :bogus => true
    +               }
    +             },
    +
    +             :users => {
    +               # An administrator in the testing organization
    +               :admin => {
    +                 :name => "pedant_admin_user_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :admin => true
    +               },
    +
    +               :non_admin => {
    +                 :name => "pedant_user_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :admin => false
    +               },
    +
    +               # A user that is not a member of the testing organization
    +               :bad => {
    +                 :name => "pedant_nobody_#{chef_server_uid}",
    +                 :create_me => true,
    +                 :create_knife => true,
    +                 :associate => false
    +               },
    +             }
    +           })
    +
    +# To facilitate testing, we have added a org creation validation tests.
    +# These tests run before the main Pedant tests, so their output has been
    +# suppressed. To make it easier to debug org creation, you can turn this
    +# on and get the full output
    +debug_org_creation false
    +
    +# The behavior of these features depends on erchef configuration
    +search_acls?               false
    +
    +old_runlists_and_search true
    +
    +# Default server api version for all requests that don't specify it.
    +server_api_version         0
    +
    +
    +# Actions enabled. Allowing tests that require actions to be bypassed if
    +# actions aren't available.
    +actions_enabled true
    +
    +# Enable/Disable tests if the required_recipe endpoint is turned on
    +required_recipe_enabled false
    +
    +# Log HTTP Requests
    +log_file "/var/log/opscode/oc-chef-pedant/http-traffic.log"
    +
    +reindex_endpoint "https://127.0.0.1"
    +
    +chef_pgsql_collector true
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::log_cleanup
  * file[/etc/cron.d/opc_log_cleanup] action delete (up to date)
  * file[/etc/cron.d/opc_logrotate.cron] action delete (up to date)
  * template[/etc/opscode/logrotate.conf] action create
    - create new file /etc/opscode/logrotate.conf
    - update content in file /etc/opscode/logrotate.conf from none to 134283
    --- /etc/opscode/logrotate.conf	2018-04-23 19:24:46.120188051 +0530
    +++ /etc/opscode/.chef-logrotate20180423-3855-174x10d.conf	2018-04-23 19:24:46.120188051 +0530
    @@ -1 +1,5 @@
    +missingok
    +compress
    +notifempty
    +include /etc/opscode/logrotate.d
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
  * template[/etc/cron.hourly/opc_logrotate] action create
    - create new file /etc/cron.hourly/opc_logrotate
    - update content in file /etc/cron.hourly/opc_logrotate from none to 3cb1bc
    --- /etc/cron.hourly/opc_logrotate	2018-04-23 19:24:46.166190033 +0530
    +++ /etc/cron.hourly/.chef-opc_logrotate20180423-3855-l39eqj	2018-04-23 19:24:46.166190033 +0530
    @@ -1 +1,7 @@
    +#!/bin/sh
    +
    +PATH=/opt/opscode/embedded/sbin:$PATH
    +
    +command -v logrotate >/dev/null 2>&1 || exit 0
    +nice -n 19 ionice -c3 logrotate -s /var/log/opscode/logrotate.status /etc/opscode/logrotate.conf
    - change mode from '' to '0755'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::partybus
  * directory[/var/opt/opscode/upgrades] action create
    - create new directory /var/opt/opscode/upgrades
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/var/opt/opscode/upgrades/etc] action create
    - create new directory /var/opt/opscode/upgrades/etc
    - change mode from '' to '0750'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * directory[/opt/opscode/embedded/service/partybus] action create
    - change mode from '0755' to '0750'
    - change owner from 'root' to 'opscode'
    - change group from 'root' to 'opscode'
    - restore selinux security context
  * template[/var/opt/opscode/upgrades/etc/config.rb] action create
    - create new file /var/opt/opscode/upgrades/etc/config.rb
    - update content in file /var/opt/opscode/upgrades/etc/config.rb from none to 025ec5
    --- /var/opt/opscode/upgrades/etc/config.rb	2018-04-23 19:24:46.314196413 +0530
    +++ /var/opt/opscode/upgrades/etc/.chef-config20180423-3855-xwayjo.rb	2018-04-23 19:24:46.314196413 +0530
    @@ -1 +1,13 @@
    +Partybus.configure do |c|
    +  c.database_connection_string    = "postgres:/opscode_chef"
    +  c.database_unix_user            = "opscode-pgsql"
    +  c.database_migration_directory  = "/opt/opscode/embedded/service/chef-sql-schema/db/migrate"
    +  c.partybus_migration_directory  = "/opt/opscode/embedded/upgrades"
    +  c.migration_state_file          = "/var/opt/opscode/upgrades/migration-level"
    +  c.private_chef_role             = "standalone"
    +  c.database_service_name         = "postgres"
    +  c.is_data_master                = true
    +  c.bootstrap_server              = true
    +  c.couchdb_data_dir              = "/var/opt/opscode/couchdb/db"
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'opscode'
    - change group from '' to 'opscode'
    - restore selinux security context
  * link[/opt/opscode/embedded/service/partybus/config.rb] action create
    - create symlink at /opt/opscode/embedded/service/partybus/config.rb to /var/opt/opscode/upgrades/etc/config.rb
  * execute[set initial migration level] action nothing (skipped due to action :nothing)
  * ruby_block[migration-level file sanity check] action nothing (skipped due to action :nothing)
Recipe: private-chef::ctl_config
  * template[/etc/opscode/pivotal.rb] action create
    - create new file /etc/opscode/pivotal.rb
    - update content in file /etc/opscode/pivotal.rb from none to b5db09
    --- /etc/opscode/pivotal.rb	2018-04-23 19:24:46.360198396 +0530
    +++ /etc/opscode/.chef-pivotal20180423-3855-1cu0vms.rb	2018-04-23 19:24:46.359198352 +0530
    @@ -1 +1,25 @@
    +require "tempfile"
    +require "veil"
    +
    +secrets_file = ENV['SECRETS_FILE'] || "/etc/opscode/private-chef-secrets.json"
    +credentials = Veil::CredentialCollection::ChefSecretsFile.from_file(secrets_file)
    +
    +key = Tempfile.new("latovip")
    +key.puts credentials.get("chef-server", "superuser_key")
    +key.flush
    +key.close
    +
    +node_name "pivotal"
    +chef_server_url "https://127.0.0.1:443"
    +chef_server_root "https://127.0.0.1:443"
    +no_proxy "127.0.0.1"
    +client_key key.path
    +ssl_verify_mode :verify_none
    +
    +at_exit do
    +  # By holding onto key to reference it in at_exit,
    +  # we ensure that it won't be GC'd and unlinked before
    +  # knife is done with it.
    +  key.unlink
    +end
    - change mode from '' to '0644'
    - change owner from '' to 'root'
    - change group from '' to 'root'
    - restore selinux security context
Recipe: private-chef::default
  * file[/etc/opscode/chef-server-running.json] action create
    - create new file /etc/opscode/chef-server-running.json
    - update content in file /etc/opscode/chef-server-running.json from none to 3f77bd
    --- /etc/opscode/chef-server-running.json	2018-04-23 19:24:46.405200335 +0530
    +++ /etc/opscode/.chef-chef-server-running20180423-3855-dkvhm0.json	2018-04-23 19:24:46.405200335 +0530
    @@ -1 +1,726 @@
    +{
    +  "private_chef": {
    +    "removed_services": [
    +      "opscode-webui",
    +      "opscode-solr",
    +      "couchdb",
    +      "opscode-account",
    +      "opscode-org-creator",
    +      "opscode-certificate"
    +    ],
    +    "hidden_services": [
    +      "opscode-chef-mover"
    +    ],
    +    "api_version": "12.0.0",
    +    "flavor": "cs",
    +    "install_path": "/opt/opscode",
    +    "notification_email": "pc-default@chef.io",
    +    "from_email": "\"Opscode\" <donotreply@chef.io>",
    +    "role": "standalone",
    +    "license": {
    +      "nodes": 25,
    +      "upgrade_url": "http://www.chef.io/contact/on-premises-simple"
    +    },
    +    "default_orgname": null,
    +    "fips_enabled": false,
    +    "required_recipe": {
    +      "enable": false,
    +      "path": null
    +    },
    +    "addons": {
    +      "install": false,
    +      "path": null,
    +      "packages": [
    +        "opscode-reporting",
    +        "opscode-manage",
    +        "opscode-analytics",
    +        "opscode-push-jobs-server",
    +        "chef-ha"
    +      ],
    +      "ubuntu_supported_codenames": [
    +        "lucid",
    +        "precise",
    +        "trusty"
    +      ],
    +      "ubuntu_distribution": "lucid"
    +    },
    +    "user": {
    +      "username": "opscode",
    +      "shell": "/bin/sh",
    +      "home": "/opt/opscode/embedded"
    +    },
    +    "service_dir_perms": "0750",
    +    "couchdb": {
    +      "data_dir": "/var/opt/opscode/couchdb/db",
    +      "vip": "127.0.0.1",
    +      "port": 5984
    +    },
    +    "opscode-solr": {
    +      "data_dir": "/var/opt/opscode/opscode-solr/data",
    +      "vip": "127.0.0.1",
    +      "port": 8983
    +    },
    +    "server-api-version": 0,
    +    "haproxy": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/haproxy",
    +      "log_directory": "/var/log/opscode/haproxy",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "listen": "0.0.0.0",
    +      "local_postgresql_port": 5432,
    +      "remote_postgresql_port": 5432,
    +      "local_elasticsearch_port": 9200,
    +      "remote_elasticsearch_port": 9200,
    +      "leaderl_healthcheck_port": 7331,
    +      "etcd_port": 2379
    +    },
    +    "rabbitmq": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/rabbitmq",
    +      "data_dir": "/var/opt/opscode/rabbitmq/db",
    +      "log_directory": "/var/log/opscode/rabbitmq",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vhost": "/chef",
    +      "user": "chef",
    +      "actions_user": "actions",
    +      "actions_vhost": "/analytics",
    +      "actions_exchange": "actions",
    +      "node_ip_address": "127.0.0.1",
    +      "node_port": "5672",
    +      "nodename": "rabbit@localhost",
    +      "vip": "127.0.0.1",
    +      "consumer_id": "hotsauce",
    +      "env_path": "/opt/opscode/bin:/opt/opscode/embedded/bin:/usr/bin:/bin",
    +      "startup_timeout": 100,
    +      "ssl_versions": [
    +        "tlsv1.2",
    +        "tlsv1.1"
    +      ],
    +      "management_user": "rabbitmgmt",
    +      "management_port": 15672,
    +      "management_enabled": true,
    +      "analytics_max_length": 10000,
    +      "queue_length_monitor_vhost": "/analytics",
    +      "queue_length_monitor_queue": "alaska",
    +      "queue_length_monitor_enabled": true,
    +      "queue_at_capacity_affects_overall_status": false,
    +      "queue_length_monitor_millis": 30000,
    +      "queue_length_monitor_timeout_millis": 5000,
    +      "drop_on_full_capacity": true,
    +      "prevent_erchef_startup_on_full_capacity": false,
    +      "rabbit_mgmt_timeout": 30000,
    +      "rabbit_mgmt_http_init_count": 25,
    +      "rabbit_mgmt_http_max_count": 100,
    +      "rabbit_mgmt_http_cull_interval": 60,
    +      "rabbit_mgmt_http_max_age": 70,
    +      "rabbit_mgmt_http_max_connection_duration": 70,
    +      "rabbit_mgmt_ibrowse_options": "{connect_timeout, 10000}",
    +      "password": "827463bd917dedd02deea4d7dda24aefc9f13394d56837e18c1ad8df278afb24e6e3ae5e0e180b884e07c65f99459d983117",
    +      "management_password": "d66c1b922fbbd665bdf32f53de0d9e066fea2593ee533397a2a6a0705a5139fd2c322a44c4d61250d445aa4f4ae42fc563de",
    +      "actions_password": "cccdf634c974707bad84f8c45d9eb06654d2595ea5fe9a8b7c4d4144abd15becb56adc016d54469a93270c9f8d6aa0bb1313"
    +    },
    +    "external-rabbitmq": {
    +      "enable": false,
    +      "actions_user": "actions",
    +      "actions_vhost": "/analytics",
    +      "actions_exchange": "actions",
    +      "node_port": "5672",
    +      "vip": "127.0.0.1"
    +    },
    +    "jetty": {
    +      "enable": false,
    +      "ha": false,
    +      "log_directory": "/var/opt/opscode/opscode-solr4/jetty/logs"
    +    },
    +    "opscode-solr4": {
    +      "enable": true,
    +      "external": false,
    +      "external_url": null,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/opscode-solr4",
    +      "data_dir": "/var/opt/opscode/opscode-solr4/data",
    +      "temp_directory": "/var/opt/opscode/opscode-solr4/",
    +      "log_directory": "/var/log/opscode/opscode-solr4",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "log_gc": true,
    +      "heap_size": 747,
    +      "new_size": 46,
    +      "java_opts": " -XX:NewSize=46M -XX:+UseConcMarkSweepGC -XX:+UseParNewGC",
    +      "url": "http://localhost:8983/solr",
    +      "ip_address": "127.0.0.1",
    +      "vip": "127.0.0.1",
    +      "port": 8983,
    +      "ram_buffer_size": 100,
    +      "merge_factor": 15,
    +      "max_merge_docs": 2147483647,
    +      "max_field_length": 100000,
    +      "max_commit_docs": 1000,
    +      "auto_soft_commit": 1000,
    +      "commit_interval": 60000,
    +      "poll_seconds": 20,
    +      "enable_full_admin_api": false,
    +      "elasticsearch_shard_count": 5,
    +      "elasticsearch_replica_count": 1,
    +      "command": "java -Xmx747M -Xms747M  -XX:NewSize=46M -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Xloggc:/var/log/opscode/opscode-solr4/gclog.log -verbose:gc -XX:+PrintHeapAtGC -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCApplicationConcurrentTime -XX:+PrintTenuringDistribution -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=104857600 -Dsolr.data.dir=/var/opt/opscode/opscode-solr4/data -Dsolr.solr.home=/var/opt/opscode/opscode-solr4/home -Djava.io.tmpdir=/var/opt/opscode/opscode-solr4/ -server -jar '/opt/opscode/embedded/service/opscode-solr4/jetty/start.jar'"
    +    },
    +    "opscode-expander": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/opscode-expander",
    +      "log_directory": "/var/log/opscode/opscode-expander",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "consumer_id": "default",
    +      "nodes": 2,
    +      "max_retries": 1,
    +      "retry_wait": 1
    +    },
    +    "opscode-erchef": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/opscode-erchef",
    +      "memory_maxbytes": null,
    +      "log_directory": "/var/log/opscode/opscode-erchef",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10,
    +        "max_messages_per_second": 1000
    +      },
    +      "vip": "127.0.0.1",
    +      "listen": "127.0.0.1",
    +      "port": 8000,
    +      "auth_skew": "900",
    +      "authz_pooler_timeout": "0",
    +      "bulk_fetch_batch_size": "5",
    +      "udp_socket_pool_size": null,
    +      "sql_user": "opscode_chef",
    +      "sql_ro_user": "opscode_chef_ro",
    +      "enable_request_logging": true,
    +      "reindex_batch_size": 10,
    +      "reindex_sleep_min_ms": 500,
    +      "reindex_sleep_max_ms": 2000,
    +      "reindex_item_retries": 3,
    +      "db_pool_size": 20,
    +      "db_pool_max": null,
    +      "db_pool_init": null,
    +      "db_pool_queue_max": 20,
    +      "db_pooler_timeout": 2000,
    +      "sql_db_timeout": 5000,
    +      "depsolver_pooler_timeout": "0",
    +      "depsolver_pool_queue_max": "50",
    +      "depsolver_worker_count": 5,
    +      "depsolver_timeout": 5000,
    +      "couchdb_max_conn": "100",
    +      "ibrowse_max_sessions": 256,
    +      "ibrowse_max_pipeline_size": 1,
    +      "search_provider": "solr",
    +      "search_queue_mode": "rabbitmq",
    +      "search_batch_max_size": "5000000",
    +      "search_batch_max_wait": "10",
    +      "solr_timeout": 30000,
    +      "solr_http_init_count": 25,
    +      "solr_http_max_count": 100,
    +      "solr_http_cull_interval": "{1, min}",
    +      "solr_http_max_age": "{70, sec}",
    +      "solr_http_max_connection_duration": "{70,sec}",
    +      "solr_ibrowse_options": "[{connect_timeout, 10000}]",
    +      "base_resource_url": "host_header",
    +      "s3_bucket": "bookshelf",
    +      "s3_url_ttl": 28800,
    +      "nginx_bookshelf_caching": "off",
    +      "s3_url_expiry_window_size": "off",
    +      "s3_parallel_ops_timeout": 5000,
    +      "s3_parallel_ops_fanout": 20,
    +      "authz_timeout": 2000,
    +      "authz_fanout": 20,
    +      "root_metric_key": "chefAPI",
    +      "max_request_size": 1000000,
    +      "cleanup_batch_size": 0,
    +      "keygen_cache_size": 10,
    +      "keygen_start_size": 0,
    +      "keygen_cache_workers": "auto",
    +      "keygen_timeout": 1000,
    +      "keygen_key_size": 2048,
    +      "strict_search_result_acls": false,
    +      "ssl_session_caching": {
    +        "enabled": false
    +      },
    +      "health_ping_timeout": 400,
    +      "stats_auth_enable": true,
    +      "stats_user": "statsuser",
    +      "stats_password_file": "/var/opt/opscode/nginx/stats_htpasswd",
    +      "sql_password": "abcda3b03fbc562cd7a173b6b0b7f652838f47230c27425fe926096f2772",
    +      "sql_ro_password": "42dbb2c9e5b93e1e3928e3a08dc84043724d10e90cb9aa070e36fa910a61",
    +      "stats_password": "4677ad2db3fc18cac011d21cab0694e081a31db67304d70fe43cccaf89ef2df1c25242348937d52c904e719704e1ed93ec81bbbf8fa65bfdc74bca1192104188"
    +    },
    +    "opscode-chef": {
    +      "checksum_path": "/var/opt/opscode/opscode-chef/checksum"
    +    },
    +    "opscode-webui": {
    +      "enable": false
    +    },
    +    "oc-chef-pedant": {
    +      "dir": "/var/opt/opscode/oc-chef-pedant",
    +      "log_directory": "/var/log/opscode/oc-chef-pedant",
    +      "log_http_requests": true,
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "debug_org_creation": false,
    +      "chef_server": null
    +    },
    +    "redis_lb": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/redis_lb",
    +      "data_dir": "/var/opt/opscode/redis_lb/data",
    +      "log_directory": "/var/log/opscode/redis_lb",
    +      "log_rotation": {
    +        "file_maxbytes": 1000000,
    +        "num_to_keep": 10
    +      },
    +      "port": "16379",
    +      "bind": "127.0.0.1",
    +      "vip": "127.0.0.1",
    +      "keepalive": "60",
    +      "timeout": "300",
    +      "loglevel": "notice",
    +      "databases": "16",
    +      "appendonly": "no",
    +      "appendfsync": "always",
    +      "activerehashing": "no",
    +      "aof_rewrite_percent": "50",
    +      "aof_rewrite_min_size": "16mb",
    +      "maxmemory": "8m",
    +      "maxmemory_policy": "noeviction",
    +      "save_frequency": {
    +        "900": "1",
    +        "300": "10",
    +        "60": "1000"
    +      },
    +      "password": "a7fb1ddd4a596a43fe67a95f09e8d953f8d7df5d37e811a376a65757e64503e7debab1f95ec0b06c7aec21fce4d7b7b77223"
    +    },
    +    "lb": {
    +      "enable": true,
    +      "vip": "127.0.0.1",
    +      "api_fqdn": "localhost",
    +      "web_ui_fqdn": "localhost",
    +      "debug": false,
    +      "upstream": {
    +        "opscode-erchef": [
    +          "127.0.0.1"
    +        ],
    +        "oc_bifrost": [
    +          "127.0.0.1"
    +        ],
    +        "opscode-solr4": [
    +          "127.0.0.1"
    +        ],
    +        "bookshelf": [
    +          "127.0.0.1"
    +        ]
    +      },
    +      "redis_connection_timeout": 1000,
    +      "redis_keepalive_timeout": 2000,
    +      "redis_connection_pool_size": 250,
    +      "maint_refresh_interval": 600,
    +      "ban_refresh_interval": 600,
    +      "chef_min_version": 10,
    +      "access_by_lua_file": false,
    +      "xdl_defaults": {
    +        "503_mode": false,
    +        "couchdb_containers": false,
    +        "couchdb_groups": false,
    +        "couchdb_acls": false,
    +        "couchdb_association_requests": false,
    +        "couchdb_organizations": false,
    +        "couchdb_associations": false
    +      }
    +    },
    +    "lb_internal": {
    +      "enable": true,
    +      "vip": "127.0.0.1",
    +      "chef_port": 9680,
    +      "account_port": 9685,
    +      "oc_bifrost_port": 9683
    +    },
    +    "nginx": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/nginx",
    +      "log_directory": "/var/log/opscode/nginx",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "log_x_forwarded_for": false,
    +      "ssl_port": 443,
    +      "enable_non_ssl": false,
    +      "non_ssl_port": 80,
    +      "x_forwarded_proto": "https",
    +      "server_name": "localhost",
    +      "url": "https://localhost",
    +      "proxy_connect_timeout": 1,
    +      "enable_stub_status": true,
    +      "stub_status": {
    +        "listen_host": "127.0.0.1",
    +        "listen_port": "9999",
    +        "location": "/nginx_status",
    +        "allow_list": [
    +          "127.0.0.1"
    +        ]
    +      },
    +      "ssl_protocols": "TLSv1 TLSv1.1 TLSv1.2",
    +      "ssl_ciphers": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:AES256-GCM-SHA384:AES:!aNULL:!eNULL:!EXPORT",
    +      "ssl_certificate": "/var/opt/opscode/nginx/ca/localhost.crt",
    +      "ssl_certificate_key": "/var/opt/opscode/nginx/ca/localhost.key",
    +      "ssl_dhparam": "/var/opt/opscode/nginx/ca/dhparams.pem",
    +      "ssl_country_name": "US",
    +      "ssl_company_name": "YouCorp",
    +      "ssl_organizational_unit_name": "Operations",
    +      "ssl_key_length": 2048,
    +      "ssl_duration": 3650,
    +      "dhparam_key_length": 2048,
    +      "dhparam_generator_id": 2,
    +      "worker_processes": 4,
    +      "worker_connections": 10240,
    +      "sendfile": "on",
    +      "tcp_nopush": "on",
    +      "tcp_nodelay": "on",
    +      "gzip": "on",
    +      "gzip_http_version": "1.0",
    +      "gzip_comp_level": "2",
    +      "gzip_proxied": "any",
    +      "gzip_types": [
    +        "text/plain",
    +        "text/css",
    +        "application/x-javascript",
    +        "text/xml",
    +        "application/xml",
    +        "application/xml+rss",
    +        "text/javascript",
    +        "application/json"
    +      ],
    +      "keepalive_timeout": 65,
    +      "client_max_body_size": "250m",
    +      "cache_max_size": "5000m",
    +      "server_names_hash_bucket_size": 128,
    +      "enable_ipv6": false,
    +      "strict_host_header": false,
    +      "use_implicit_hosts": false,
    +      "show_welcome_page": true
    +    },
    +    "postgresql": {
    +      "version": "9.6",
    +      "enable": true,
    +      "external": false,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/postgresql/9.6",
    +      "data_dir": "/var/opt/opscode/postgresql/9.6/data",
    +      "log_directory": "/var/log/opscode/postgresql/9.6",
    +      "log_min_duration_statement": -1,
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "username": "opscode-pgsql",
    +      "db_superuser": "opscode-pgsql",
    +      "shell": "/bin/sh",
    +      "home": "/var/opt/opscode/postgresql",
    +      "user_path": "/opt/opscode/embedded/bin:/opt/opscode/bin:$PATH",
    +      "vip": "127.0.0.1",
    +      "port": 5432,
    +      "listen_address": "localhost",
    +      "max_connections": 350,
    +      "keepalives_idle": 60,
    +      "keepalives_interval": 15,
    +      "keepalives_count": 2,
    +      "md5_auth_cidr_addresses": [
    +        "127.0.0.1/32",
    +        "::1/128"
    +      ],
    +      "wal_level": "minimal",
    +      "archive_mode": "off",
    +      "archive_command": "",
    +      "archive_timeout": 0,
    +      "shared_buffers": "747MB",
    +      "work_mem": "8MB",
    +      "effective_cache_size": "1494MB",
    +      "max_wal_size": "1GB",
    +      "min_wal_size": "80MB",
    +      "checkpoint_timeout": "5min",
    +      "checkpoint_completion_target": 0.5,
    +      "checkpoint_flush_after": "256kB",
    +      "checkpoint_warning": "30s",
    +      "pg_upgrade_timeout": 7200,
    +      "db_superuser_password": "6c16c8f8c9707a7c0e938a520d13ad8ba6c20b799d010f546bd46f67f63949d8673e015503aa64bbebe52a5bac00ecc198f3"
    +    },
    +    "oc_bifrost": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/oc_bifrost",
    +      "log_directory": "/var/log/opscode/oc_bifrost",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10,
    +        "max_messages_per_second": 1000
    +      },
    +      "vip": "127.0.0.1",
    +      "listen": "127.0.0.1",
    +      "port": 9463,
    +      "db_pool_size": "20",
    +      "db_pool_max": null,
    +      "db_pool_init": null,
    +      "db_pooler_timeout": 2000,
    +      "db_pool_queue_max": 20,
    +      "udp_socket_pool_size": null,
    +      "sql_user": "bifrost",
    +      "sql_ro_user": "bifrost_ro",
    +      "sql_db_timeout": 5000,
    +      "extended_perf_log": true,
    +      "enable_request_logging": true,
    +      "superuser_id": "c75b499c1cc3bb828dc83a7925889343",
    +      "sql_password": "0ee6c6bdd0e9fc70e33ea5d0404f7162f26ac392e2fd1366256f2b8d70e21b6d0b0177706b55969ebcb5e2c98ce881a85feb",
    +      "sql_ro_password": "ea71c498aa81aae7df933b55537019406f161a758db9219d01f49d4830422e1eed9b98115d70f13c3c6655488e3007f2a43e"
    +    },
    +    "oc_chef_authz": {
    +      "http_init_count": 25,
    +      "http_max_count": 100,
    +      "http_queue_max": 50,
    +      "http_cull_interval": "{1, min}",
    +      "http_max_age": "{70, sec}",
    +      "http_max_connection_duration": "{70, sec}",
    +      "ibrowse_options": "[{connect_timeout, 5000}]"
    +    },
    +    "bookshelf": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/bookshelf",
    +      "data_dir": "/var/opt/opscode/bookshelf/data",
    +      "log_directory": "/var/log/opscode/bookshelf",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vip": "localhost",
    +      "vip_port": 443,
    +      "listen": "127.0.0.1",
    +      "port": 4321,
    +      "stream_download": true,
    +      "external_url": "host_header",
    +      "storage_type": "filesystem",
    +      "sql_retry_count": 0,
    +      "sql_retry_delay": 10,
    +      "abandoned_upload_cleanup_interval": 1140000,
    +      "deleted_data_cleanup_interval": 420000,
    +      "db_pool_size": 20,
    +      "db_pool_max": null,
    +      "db_pool_init": null,
    +      "db_pool_queue_max": 200,
    +      "db_pooler_timeout": 2000,
    +      "sql_db_timeout": 5000,
    +      "sql_ro_user": "bookshelf_ro",
    +      "sql_user": "bookshelf",
    +      "enable_request_logging": false,
    +      "access_key_id": "0465e7f1103b50f3871b1888559be1ccf5c04e0d",
    +      "secret_access_key": "bc684b69f55c6c33ffa53fa380346f38ea568aa359b560f2d09c4822c6d813f42d564c49c0d699e1",
    +      "sql_password": "508ca0d6d37ddda642e5e8fb1591558d925616089fd4a73654df8b80f3b5741c6ea56ba8fc0b9200",
    +      "sql_ro_password": "5def2aa10b598a9e67a97efcfed8653dc35d104194843767ebbf9a440602db563244420547c04b9e"
    +    },
    +    "oc_id": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/oc_id",
    +      "log_directory": "/var/log/opscode/oc_id",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "vip": "127.0.0.1",
    +      "port": 9090,
    +      "sql_database": "oc_id",
    +      "sql_user": "oc_id",
    +      "sql_ro_user": "oc_id_ro",
    +      "db_pool_size": "20",
    +      "sentry_dsn": null,
    +      "sign_up_url": null,
    +      "email_from_address": "\"Opscode\" <donotreply@chef.io>",
    +      "origin": null,
    +      "administrators": [
    +
    +      ],
    +      "applications": {
    +
    +      },
    +      "secret_key_base": "18d343d9230560e69d0c36d0ff666dcd407a437c7634ef4ce94f9c011ef3be20c63c0dc1730039d5fd11b3f01c51c60647ce",
    +      "sql_password": "60ff6c64a8d5f0d240b4f7cbfb544778dd89f52e17ecc8f30abbd5166696010bc8b4a4acb6d935dc65473db14a5ebcfde170",
    +      "sql_ro_password": "347b384f266ae702bb7d53b89ff06f316ea76f2a4ab9abce80ec654aab6da7851b91e6f017351a29a6883166d3939993ccbe"
    +    },
    +    "dark_launch": {
    +      "quick_start": false,
    +      "new_theme": true,
    +      "private-chef": true,
    +      "sql_users": true,
    +      "add_type_and_bag_to_items": true,
    +      "reporting": true,
    +      "actions": true
    +    },
    +    "opscode-chef-mover": {
    +      "enable": true,
    +      "ha": false,
    +      "dir": "/var/opt/opscode/opscode-chef-mover",
    +      "data_dir": "/var/opt/opscode/opscode-chef-mover/data",
    +      "log_directory": "/var/log/opscode/opscode-chef-mover",
    +      "log_rotation": {
    +        "file_maxbytes": 1073741824,
    +        "num_to_keep": 10
    +      },
    +      "bulk_fetch_batch_size": 5,
    +      "max_cache_size": "10000",
    +      "cache_ttl": "3600",
    +      "db_pool_size": "5",
    +      "udp_socket_pool_size": null,
    +      "sql_db_timeout": 5000,
    +      "ibrowse_max_sessions": 256,
    +      "ibrowse_max_pipeline_size": 1,
    +      "solr_timeout": 30000,
    +      "solr_http_init_count": 25,
    +      "solr_http_max_count": 100,
    +      "solr_http_cull_interval": "{1, min}",
    +      "solr_http_max_age": "{70, sec}",
    +      "solr_http_max_connection_duration": "{70,sec}",
    +      "solr_ibrowse_options": "[{connect_timeout, 10000}]"
    +    },
    +    "bootstrap": {
    +      "enable": true
    +    },
    +    "estatsd": {
    +      "enable": true,
    +      "dir": "/var/opt/opscode/estatsd",
    +      "log_directory": "/var/log/opscode/estatsd",
    +      "vip": "127.0.0.1",
    +      "port": 9466,
    +      "protocol": "estatsd"
    +    },
    +    "keepalived": {
    +      "enable": false,
    +      "dir": "/var/opt/opscode/keepalived",
    +      "ipv6_on": false,
    +      "log_directory": "/var/log/opscode/keepalived",
    +      "log_rotation": {
    +        "file_maxbytes": 104857600,
    +        "num_to_keep": 10
    +      },
    +      "smtp_server": "127.0.0.1",
    +      "smtp_connect_timeout": "30",
    +      "vrrp_sync_group": "PC_GROUP",
    +      "vrrp_sync_instance": "PC_VI",
    +      "vrrp_instance_state": "BACKUP",
    +      "vrrp_instance_interface": "eth0",
    +      "vrrp_instance_virtual_router_id": "1",
    +      "vrrp_instance_priority": "100",
    +      "vrrp_instance_advert_int": "1",
    +      "vrrp_instance_ipaddress": "192.168.33.131",
    +      "vrrp_instance_ipaddress_dev": "eth0",
    +      "vrrp_instance_vrrp_unicast_bind": "192.168.33.131",
    +      "vrrp_instance_vrrp_unicast_peer": null,
    +      "vrrp_instance_preempt_delay": 30,
    +      "vrrp_instance_nopreempt": true,
    +      "vrrp_instance_password": "9a923a4652ccd46f452a59800fec060ee51fb06366ea67fc126a393c09e3265de40eef3c388451640ecd543432d999597b77"
    +    },
    +    "ldap": {
    +
    +    },
    +    "upgrades": {
    +      "dir": "/var/opt/opscode/upgrades"
    +    },
    +    "folsom_graphite": {
    +      "enabled": false,
    +      "host": "localhost",
    +      "port": 8080,
    +      "prefix": "stats_prefix",
    +      "send_interval": 10000,
    +      "retry_interval": 2000
    +    },
    +    "data_collector": {
    +      "timeout": 30000,
    +      "http_init_count": 25,
    +      "http_max_count": 100,
    +      "http_max_age": "{70, sec}",
    +      "http_cull_interval": "{1, min}",
    +      "http_max_connection_duration": "{70,sec}",
    +      "ibrowse_options": "[{connect_timeout, 10000}]"
    +    },
    +    "profiles": {
    +
    +    },
    +    "folsom-graphite": {
    +
    +    },
    +    "lb-internal": {
    +
    +    },
    +    "drbd": {
    +      "shared_secret": "af8ddd842c34e129b8285fc6658797b3ff083c13d0893195bd6befe50d97"
    +    },
    +    "ha": {
    +
    +    },
    +    "use_chef_backend": false,
    +    "chef_backend_members": [
    +
    +    ],
    +    "disabled-plugins": [
    +
    +    ],
    +    "enabled-plugins": [
    +
    +    ],
    +    "backup": {
    +      "strategy": "tar"
    +    },
    +    "topology": "standalone",
    +    "servers": {
    +
    +    },
    +    "backend_vips": {
    +
    +    },
    +    "logs": {
    +      "log_retention": {
    +
    +      },
    +      "log_rotation": {
    +
    +      }
    +    },
    +    "insecure_addon_compat": true
    +  },
    +  "run_list": [
    +  "recipe[private-chef::default]"
    +]
    +,
    +  "runit": {
    +    "sv_bin": "/opt/opscode/embedded/bin/sv",
    +    "svlogd_bin": "/opt/opscode/embedded/bin/svlogd",
    +    "chpst_bin": "/opt/opscode/embedded/bin/chpst",
    +    "service_dir": "/opt/opscode/service",
    +    "sv_dir": "/opt/opscode/sv",
    +    "lsb_init_dir": "/opt/opscode/init"
    +  }
    +}
    - change mode from '' to '0600'
    - change owner from '' to 'opscode'
    - change group from '' to 'root'
    - restore selinux security context
  * ruby_block[print reconfigure warnings] action run
    - execute the ruby block print reconfigure warnings
Recipe: private-chef::postgresql
  * runit_service[postgresql] action restart (up to date)
  * execute[restart_postgresql_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/postgresql/log
Recipe: private-chef::oc_bifrost
  * runit_service[oc_bifrost] action restart (up to date)
  * execute[restart_oc_bifrost_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/oc_bifrost/log
Recipe: private-chef::oc_id
  * runit_service[oc_id] action restart (up to date)
  * execute[restart_oc_id_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/oc_id/log
Recipe: private-chef::nginx
  * runit_service[nginx] action restart (up to date)
Recipe: private-chef::opscode-solr4
  * runit_service[opscode-solr4] action restart (up to date)
  * execute[restart_opscode-solr4_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/opscode-solr4/log
Recipe: private-chef::opscode-expander
  * runit_service[opscode-expander] action restart (up to date)
  * execute[restart_opscode-expander_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/opscode-expander/log
Recipe: private-chef::bookshelf
  * runit_service[bookshelf] action restart (up to date)
  * execute[restart_bookshelf_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/bookshelf/log
Recipe: private-chef::opscode-erchef
  * runit_service[opscode-erchef] action restart (up to date)
  * execute[restart_opscode-erchef_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/opscode-erchef/log
Recipe: <Dynamically Defined Resource>
  * service[opscode-erchef] action restart
    - restart service service[opscode-erchef]
Recipe: private-chef::partybus
  * execute[set initial migration level] action run
    - execute cd /opt/opscode/embedded/service/partybus && ./bin/partybus init
  * ruby_block[migration-level file sanity check] action run (skipped due to not_if)
Recipe: private-chef::opscode-chef-mover
  * execute[restart_opscode-chef-mover_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/opscode-chef-mover/log
Recipe: private-chef::redis_lb
  * execute[restart_redis_lb_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/redis_lb/log
Recipe: private-chef::nginx
  * execute[restart_nginx_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/nginx/log
Recipe: private-chef::rabbitmq
  * execute[restart_rabbitmq_log_service] action run
    - execute /opt/opscode/embedded/bin/sv restart /opt/opscode/sv/rabbitmq/log
  * runit_service[rabbitmq] action restart (up to date)

Running handlers:
Running handlers complete

Deprecated features used!
  Property `state` of resource `openssl_x509` overwrites an existing method. Please use a different property name. This will raise an exception in Chef 13. at 1 location:
    - /var/opt/opscode/local-mode-cache/cookbooks/openssl/resources/x509.rb:12:in `class_from_file'
   See https://docs.chef.io/deprecations_property_name_collision.html for further details.
  An attempt was made to change sysvinit_id from "SV" to nil by calling sysvinit_id(nil). In Chef 12, this does a get rather than a set. In Chef 13, this will change to set the value to nil. at 1 location:
    - /var/opt/opscode/local-mode-cache/cookbooks/enterprise/recipes/runit.rb:31:in `block in from_file'
   See https://docs.chef.io/deprecations_custom_resource_cleanups.html for further details.
  Cloning resource attributes for runit_service[redis_lb] from prior resource
Previous runit_service[redis_lb]: /var/opt/opscode/local-mode-cache/cookbooks/enterprise/definitions/component_runit_service.rb:37:in `block in from_file'
Current  runit_service[redis_lb]: /var/opt/opscode/local-mode-cache/cookbooks/private-chef/recipes/redis_lb.rb:83:in `from_file' at 1 location:
    - /var/opt/opscode/local-mode-cache/cookbooks/private-chef/recipes/redis_lb.rb:83:in `from_file'
   See https://docs.chef.io/deprecations_resource_cloning.html for further details.
  Cloning resource attributes for directory[/var/opt/opscode/nginx/etc/addon.d] from prior resource
Previous directory[/var/opt/opscode/nginx/etc/addon.d]: /var/opt/opscode/local-mode-cache/cookbooks/private-chef/recipes/oc_id.rb:196:in `from_file'
Current  directory[/var/opt/opscode/nginx/etc/addon.d]: /var/opt/opscode/local-mode-cache/cookbooks/private-chef/recipes/nginx.rb:35:in `block in from_file' at 1 location:
    - /var/opt/opscode/local-mode-cache/cookbooks/private-chef/recipes/nginx.rb:35:in `block in from_file'
   See https://docs.chef.io/deprecations_resource_cloning.html for further details.
  Chef::Platform.find_provider_for_node is deprecated at 1 location:
   See https://docs.chef.io/deprecations_chef_platform_methods.html for further details.
  Chef::Platform.find_provider is deprecated at 1 location:
   See https://docs.chef.io/deprecations_chef_platform_methods.html for further details.
  Chef::Platform.find is deprecated at 1 location:
   See https://docs.chef.io/deprecations_chef_platform_methods.html for further details.

Chef Client finished, 495/1084 resources updated in 05 minutes 35 seconds
Chef Server Reconfigured!
[root@localhost ~]# 
[root@localhost ~]# 

